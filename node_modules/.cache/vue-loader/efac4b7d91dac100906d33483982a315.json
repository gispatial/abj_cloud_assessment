{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/vuesax/dialogs/DialogsPrompt.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/vuesax/dialogs/DialogsPrompt.vue","mtime":1634797132164},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWUgZnJvbSAndnVlJwppbXBvcnQgVnVlQmFyY29kZVNjYW5uZXIgZnJvbSAndnVlLWJhcmNvZGUtc2Nhbm5lcicKClZ1ZS51c2UoVnVlQmFyY29kZVNjYW5uZXIpCgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpewogICAgcmV0dXJuIHsKICAgICAgYWN0aXZlUHJvbXB0OmZhbHNlLAogICAgICBhY3RpdmVQcm9tcHQyOmZhbHNlLAogICAgICB2YWw6JycsCiAgICAgIHZhbE11bHRpcGU6ewogICAgICAgIHZhbHVlMTonJywKICAgICAgICB2YWx1ZTI6JycKICAgICAgfSwKICAgIH0KICB9LAogIGNvbXB1dGVkOnsKICAgIHZhbGlkTmFtZSgpewogICAgICByZXR1cm4gKHRoaXMudmFsTXVsdGlwZS52YWx1ZTEubGVuZ3RoID4gMCAmJiB0aGlzLnZhbE11bHRpcGUudmFsdWUyLmxlbmd0aCA+IDApCiAgICB9CiAgfSwKICBtZXRob2RzOnsKICAgIGFjY2VwdEFsZXJ0KCl7CiAgICAgIHRoaXMuJHZzLm5vdGlmeSh7CiAgICAgICAgY29sb3I6J3N1Y2Nlc3MnLAogICAgICAgIHRpdGxlOidTY2FuIEFjY2VwdGVkJywKICAgICAgICB0ZXh0OidQbGVhc2UgY2hlY2sgeW91ciBzdGF0dXMnCiAgICAgIH0pCiAgICB9LAogICAgY2xvc2UoKXsKICAgICAgdGhpcy4kdnMubm90aWZ5KHsKICAgICAgICBjb2xvcjonZGFuZ2VyJywKICAgICAgICB0aXRsZTonQ2xvc2VkJywKICAgICAgICB0ZXh0OidZb3UgY2xvc2UgdGhlIHNjYW5uZXIgfCBxcmNvZGUnCiAgICAgIH0pCiAgICB9LAogICAgY2xlYXJWYWxNdWx0aXBsZSgpIHsKICAgICAgdGhpcy52YWxNdWx0aXBlLnZhbHVlMSA9ICIiOwogICAgICB0aGlzLnZhbE11bHRpcGUudmFsdWUyID0gIiI7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["DialogsPrompt.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6LA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DialogsPrompt.vue","sourceRoot":"src/views/components/vuesax/dialogs","sourcesContent":["<!-- =========================================================================================\n\tFile Name: DialogsPrompt.vue\n\tDescription: Add dialog of type prompt\n\t----------------------------------------------------------------------------------------\n\tItem Name: abjcloudsolutions.com dashboard management portal\n\tAuthor: Netquest\n\tAuthor URL: http://demo.tripcarte.asia/\n========================================================================================== -->\n\n\n<template>\n\t<vx-card title=\"Scan QR code\">\n\n\t\t<p>\n\n\t\t<div class=\"demo-alignment\">\n\t\t<vs-button @click=\"activePrompt = true\" color=\"primary\" type=\"border\">Start Scanning</vs-button>\n\t\t<div class=\"vx-col w-full sm:w-1/1 md:w-1/1 lg:w-1/1 xl:w-1/1 mb-base\">\n    <div>\n\t\t<h5>Or</h5>\n\t\t</div>\n\t\t<div class=\"demo-alignment\"></span\n\t\t<barcode v-model=\"code\"></barcode>\n\t\t<div class=\"con-exemple-prompt\"><vs-input placeholder=\"Enter barcode\" vs-placeholder=\"Enter barcode\" v-model=\"code\" class=\"mt-3 w-full\" />\n\n\t\t<vs-button @click=\"activePrompt2 = true\" color=\"primary\" type=\"border\">Go</vs-button>\n\t\t</div>\n\t\t</div>\n\n\t\t</div>\n\n\t\t<div>\n\t\t<p>\n\t\t</p>\n  </div>\n  <div><div class=\"op-block\">Results: {{ val == null ? 'null' : code }}</div>\n  </div>\n</div>\n\n\t\t<vs-prompt\n\t\t\t@close=\"close\"\n\t\t\t:active.sync=\"activePrompt\">\n\t\t\t\t\t<div class=\"p-8\">\n\t\t\t\t\t<iframe src=\"/components/tabs\" frameborder=\"0\" width=\"328\" height=\"490\" scrolling=\"auto\">\n\t\t\t</iframe>\n\t\t\t\t\t</div>\n\n\t\t</vs-prompt>\n\n\t\t<vs-prompt\n\t\t\t@cancel=\"clearValMultiple\"\n\t\t\t@accept=\"acceptAlert\"\n\t\t\t@close=\"close\"\n\t\t\t:is-valid=\"validName\"\n\t\t\t:active.sync=\"activePrompt2\">\n\t\t\t<div class=\"\">\n\t\t\t\tScan your barcode now to <b>continue</b>\n\t\t\t<vs-alert :active=\"!validName\" color=\"danger\" vs-icon=\"new_releases\" class=\"mt-4\" >\n\n\t\t\t<label>Result:</label>\n\t\t\t<barcode v-model=\"code\" :options=\"options\"></barcode>\n<div>\n</div>\n\t\t\t</vs-alert>\n\t\t\t</div>\n\t\t</vs-prompt>\n\n\t\t<template slot=\"codeContainer\">\n&lt;template&gt;\n    &lt;div class=&quot;demo-alignment&quot;&gt;\n      &lt;vs-button @click=&quot;activePrompt = true&quot; color=&quot;primary&quot; type=&quot;border&quot;&gt;Run prompt&lt;/vs-button&gt;\n      &lt;vs-button @click=&quot;activePrompt2 = true&quot; color=&quot;primary&quot; type=&quot;border&quot;&gt;Run prompt inputs&lt;/vs-button&gt;\n      &lt;div class=&quot;op-block&quot;&gt;Security Code: {{ \"\\{\\{ val == null ? 'null' : val \\}\\}\" }} &lt;/div&gt;\n      &lt;div class=&quot;op-block&quot;&gt;\n        Name: {{ \"\\{\\{ valMultipe.value1 \\}\\}\" }} | Last Name: {{ \"\\{\\{ valMultipe.value2 \\}\\}\" }}\n      &lt;/div&gt;\n\n    &lt;/div&gt;\n\n    &lt;vs-prompt\n      @cancel=&quot;val=''&quot;\n      @close=&quot;close&quot;\n      :active.sync=&quot;activePrompt&quot;&gt;\n      &lt;div class=&quot;con-exemple-prompt&quot;&gt;\n        &lt;span&gt;Enter the security code&lt;/span&gt;\n      &lt;vs-input placeholder=&quot;Code&quot; vs-placeholder=&quot;Code&quot; v-model=&quot;val&quot; class=&quot;mt-3 w-full&quot; /&gt;\n      &lt;/div&gt;\n    &lt;/vs-prompt&gt;\n\n    &lt;vs-prompt\n      @cancel=&quot;clearValMultiple&quot;\n      @close=&quot;close&quot;\n      :is-valid=&quot;validName&quot;\n      :active.sync=&quot;activePrompt2&quot;&gt;\n      &lt;div class=&quot;con-exemple-prompt&quot;&gt;\n        Enter your first and last name to &lt;b&gt;continue&lt;/b&gt;.\n      &lt;vs-input placeholder=&quot;Name&quot; v-model=&quot;valMultipe.value1&quot; class=&quot;mt-4 mb-2 w-full&quot; /&gt;\n      &lt;vs-input placeholder=&quot;Last Name&quot; v-model=&quot;valMultipe.value2&quot; class=&quot;w-full&quot; /&gt;\n\n      &lt;vs-alert :vs-active=&quot;!validName&quot; color=&quot;danger&quot; vs-icon=&quot;new_releases&quot; &gt;\n        Fields can not be empty please enter the data\n      &lt;/vs-alert&gt;\n      &lt;/div&gt;\n    &lt;/vs-prompt&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data(){\n    return {\n      activePrompt:false,\n      activePrompt2:false,\n      val:'',\n      valMultipe:{\n        value1:'',\n        value2:''\n      },\n    }\n  },\n  computed:{\n    validName(){\n      return (this.valMultipe.value1.length &gt; 0 &amp;&amp; this.valMultipe.value2.length &gt; 0)\n    }\n  },\n  methods:{\nasync onDetect (promise) {\n\ttry {\n\t\tconst {\n\t\t\timageData,\n\t\t\tcontent,\n\t\t\tlocation\n\t\t} = await promise\n\n\t\tif (content === null) {\n\t\t\t // decoded nothing\n\t\t} else {\n\t\t\t // ...\n\t\t}\n\t} catch (error) {\n\t\t// ...\n\t}\n}\n},\n    close(){\n      this.$vs.notify({\n        color:'danger',\n        title:'Closed',\n        text:'You close a dialog!'\n      })\n    },\n    clearValMultiple() {\n      this.valMultipe.value1 = &quot;&quot;;\n      this.valMultipe.value2 = &quot;&quot;;\n    }\n  }\n}\n&lt;/script&gt;\n\t\t</template>\n\n\t</vx-card>\n</template>\n\n\n<script>\n    module.exports = {\n      data: function () {\n        return {\n          scanned: ''\n        }\n      },\n      methods: {\n        codeScanned (event) {\n          this.scanned = event.detail[0];\n        }\n      }\n    }\n</script>\n\t\t<script>\n\t\texport default {\n\t\t  data() {\n\t\t    return {\n\t\t      colorx:\"#F57E7E\",\n\t\t      popupActive: false,\n\t\t    }\n\t\t  }\n\t\t}\n\t\t</script>\n\n<script>\nimport Vue from 'vue'\nimport VueBarcodeScanner from 'vue-barcode-scanner'\n\nVue.use(VueBarcodeScanner)\n\nexport default {\n  data(){\n    return {\n      activePrompt:false,\n      activePrompt2:false,\n      val:'',\n      valMultipe:{\n        value1:'',\n        value2:''\n      },\n    }\n  },\n  computed:{\n    validName(){\n      return (this.valMultipe.value1.length > 0 && this.valMultipe.value2.length > 0)\n    }\n  },\n  methods:{\n    acceptAlert(){\n      this.$vs.notify({\n        color:'success',\n        title:'Scan Accepted',\n        text:'Please check your status'\n      })\n    },\n    close(){\n      this.$vs.notify({\n        color:'danger',\n        title:'Closed',\n        text:'You close the scanner | qrcode'\n      })\n    },\n    clearValMultiple() {\n      this.valMultipe.value1 = \"\";\n      this.valMultipe.value2 = \"\";\n    }\n  }\n}\n</script>\n\n\nimport { QrcodeStream } from 'vue-qrcode-reader'\n\nexport default {\n\n  components: { QrcodeStream },\n\n  data () {\n    return {\n      result: '',\n      error: ''\n    }\n  },\n\n  methods: {\n    onDecode (result) {\n      this.result = result\n    },\n\n    async onInit (promise) {\n      try {\n        await promise\n      } catch (error) {\n        if (error.name === 'NotAllowedError') {\n          this.error = \"ERROR: you need to grant camera access permisson\"\n        } else if (error.name === 'NotFoundError') {\n          this.error = \"ERROR: no camera on this device\"\n        } else if (error.name === 'NotSupportedError') {\n          this.error = \"ERROR: secure context required (HTTPS, localhost)\"\n        } else if (error.name === 'NotReadableError') {\n          this.error = \"ERROR: is the camera already in use?\"\n        } else if (error.name === 'OverconstrainedError') {\n          this.error = \"ERROR: installed cameras are not suitable\"\n        } else if (error.name === 'StreamApiNotSupportedError') {\n          this.error = \"ERROR: Stream API is not supported in this browser\"\n        }\n      }\n    }\n  }\n}\n\nQuagga.init({\n    inputStream : {\n      name : \"Live\",\n      type : \"LiveStream\",\n      target: document.querySelector('#yourElement')    /\n    },\n    decoder : {\n      readers : [\"code_128_reader\"]\n    }\n  }, function(err) {\n      if (err) {\n          console.log(err);\n          return\n      }\n      console.log(\"Initialization finished. Ready to start\");\n      Quagga.start();\n  });\n\n\tconst imgSrc = '01.png';\nconst imgDomId = 'img-to-decode';\n\ncodeReader\n  .decodeFromImage(imgDomId, imgSrc)\n  .then(result => console.log(result.text))\n  .catch(err => console.error(err));\n\n\n\tconst codeReader = new ZXing.BrowserQRCodeReader();\nconst videoSrc = 'your url to a video';\n\ncodeReader\n  .decodeFromVideo('video', videoSrc)\n  .then(result => console.log(result.text))\n  .catch(err => console.error(err));\n\n\n\texport default {\n    data: () => ({\n      loading: false\n    }),\n    created () {\n      // Pass an options object with `eventBus: true` to receive an eventBus back\n      // which emits `start` and `finish` events\n      const eventBus = this.$barcodeScanner.init(this.onBarcodeScanned, { eventBus: true })\n      if (eventBus) {\n        eventBus.$on('start', () => { this.loading = true })\n        eventBus.$on('finish', () => { this.loading = false })\n      }\n    },\n    destroyed () {\n      // Remove listener when component is destroyed\n      this.$barcodeScanner.destroy()\n    },\n    methods: {\n      // Create callback function to receive barcode when the scanner is already done\n      onBarcodeScanned (barcode) {\n        console.log(barcode)\n        // do something...\n      },\n      // Reset to the last barcode before hitting enter (whatever anything in the input box)\n      resetBarcode () {\n        let barcode = this.$barcodeScanner.getPreviousCode()\n        // do something...\n      }\n    }\n  }\n\n\tVue.component(tuiVueBarcode.name, tuiVueBarcode);\n\nconst app = new Vue({\n  el:'#app',\n  data() {\n    return {\n      code: 'lorem ipsum',\n      height: 100\n    }\n  },\n  computed: {\n    options() {\n      return {\n        height: this.height\n      }\n    }\n  }\n})\n\ndata () {\n  return {\n    camera: 'auto'\n  }\n},\n\nmethods: {\n  startFrontCamera () {\n    this.camera = 'front'\n  },\n\n  onCameraChange (promise) {\n    promise.catch(error => {\n      const cameraMissingError = error.name === 'OverconstrainedError'\n      const triedFrontCamera = this.camera === 'front'\n\n      if (triedFrontCamera && cameraMissingError) {\n      }\n    })\n  }\n},\n\n\n</script>\n"]}]}