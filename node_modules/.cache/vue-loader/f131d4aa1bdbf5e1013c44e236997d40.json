{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/forms/form-validation/FormValidationCustomErrorMessages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/forms/form-validation/FormValidationCustomErrorMessages.vue","mtime":1634797132182},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEZvciBjdXN0b20gZXJyb3IgbWVzc2FnZQppbXBvcnQgeyBWYWxpZGF0b3IgfSBmcm9tICd2ZWUtdmFsaWRhdGUnOwpjb25zdCBkaWN0ID0gewogIGN1c3RvbTogewogICAgZmlyc3RfbmFtZTogewogICAgICByZXF1aXJlZDogJ1BsZWFzZSBlbnRlciB5b3VyIGZpcnN0IG5hbWUnLAogICAgICBhbHBoYTogIllvdXIgZmlyc3QgbmFtZSBtYXkgb25seSBjb250YWluIGFscGhhYmV0aWMgY2hhcmFjdGVycyIKICAgIH0sCiAgICBsYXN0X25hbWU6IHsKICAgICAgcmVxdWlyZWQ6ICdQbGVhc2UgZW50ZXIgeW91ciBsYXN0IG5hbWUnLAogICAgICBhbHBoYTogIllvdXIgbGFzdCBuYW1lIG1heSBvbmx5IGNvbnRhaW4gYWxwaGFiZXRpYyBjaGFyYWN0ZXJzIgogICAgfSwKICB9Cn07CgovLyByZWdpc3RlciBjdXN0b20gbWVzc2FnZXMKVmFsaWRhdG9yLmxvY2FsaXplKCdlbicsIGRpY3QpOwoKZXhwb3J0IGRlZmF1bHQgewoJZGF0YSgpIHsKCQlyZXR1cm4gewoJCQlmaXJzdF9uYW1lOiAiIiwKCQkJbGFzdF9uYW1lOiAiIiwKCQl9Cgl9LAoJbWV0aG9kczogewoJCXN1Ym1pdEZvcm0oKSB7CgkJCXRoaXMuJHZhbGlkYXRvci52YWxpZGF0ZUFsbCgpLnRoZW4ocmVzdWx0ID0+IHsKCQkJCWlmKHJlc3VsdCkgewoJCQkJCS8vIGlmIGZvcm0gaGF2ZSBubyBlcnJvcnMKCQkJCQlhbGVydCgiZm9ybSBzdWJtaXR0ZWQhIik7CgkJCQl9ZWxzZXsKCQkJCQkvLyBmb3JtIGhhdmUgZXJyb3JzCgkJCQl9CgkJCX0pCgkJfQoJfSwKfQo="},{"version":3,"sources":["FormValidationCustomErrorMessages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormValidationCustomErrorMessages.vue","sourceRoot":"src/views/forms/form-validation","sourcesContent":["<!-- =========================================================================================\n\tFile Name: FormValidationCustomErrorMessages.vue\n\tDescription: Dispalying custom error messages as error\n\t----------------------------------------------------------------------------------------\n\tItem Name: abjcloudsolutions.com dashboard management portal\n\tAuthor: Pixinvent\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n\t<vx-card title=\"Custom error messages\" code-toggler>\n\n\t\t<p>With vee-validate you can display your own custom error messages</p>\n\t\t<div class=\"mt-5\">\n\t\t\t<form>\n\t\t\t\t<vs-input v-validate=\"'required|alpha'\" placeholder=\"First Name\" name=\"first_name\" v-model=\"first_name\" class=\"mt-5\" />\n\t\t\t\t<span class=\"text-danger text-sm\" v-show=\"errors.has('first_name')\">{{ errors.first('first_name') }}</span>\n\n\t\t\t\t<vs-input v-validate=\"'required|alpha'\" placeholder=\"Last Name\" name=\"last_name\" v-model=\"last_name\" class=\"mt-5\" />\n\t\t\t\t<span class=\"text-danger text-sm\" v-show=\"errors.has('last_name')\">{{ errors.first('last_name') }}</span>\n\n\t\t\t\t<vs-button type=\"filled\" @click.prevent=\"submitForm\" class=\"mt-5 block\">Submit</vs-button>\n\t\t\t</form>\n\t\t</div>\n\n\t\t<template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;form&gt;\n    &lt;vs-input size=&quot;large&quot; v-validate=&quot;'required|alpha'&quot; placeholder=&quot;First Name&quot; name=&quot;first_name&quot; v-model=&quot;first_name&quot; class=&quot;mt-5&quot; /&gt;\n    &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('first_name')&quot;&gt;{{ \"\\{\\{ errors.first('first_name') \\}\\}\" }}&lt;/span&gt;\n\n    &lt;vs-input size=&quot;large&quot; v-validate=&quot;'required|alpha'&quot; placeholder=&quot;Last Name&quot; name=&quot;last_name&quot; v-model=&quot;last_name&quot; class=&quot;mt-5&quot; /&gt;\n    &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('last_name')&quot;&gt;{{ \"\\{\\{ errors.first('last_name') \\}\\}\" }}&lt;/span&gt;\n    &lt;vs-button type=&quot;filled&quot; @click.prevent=&quot;submitForm&quot; class=&quot;mt-5 block&quot;&gt;Submit&lt;/vs-button&gt;\n  &lt;/form&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n// For custom error message\nimport { Validator } from 'vee-validate';\nconst dict = {\n  custom: {\n    first_name: {\n      required: 'Please enter your first name',\n      alpha: &quot;Your first name may only contain alphabetic characters&quot;\n    },\n    last_name: {\n      required: 'Please enter your last name',\n      alpha: &quot;Your last name may only contain alphabetic characters&quot;\n    },\n  }\n};\n\n// register custom messages\nValidator.localize('en', dict);\n\nexport default {\n  data() {\n    return {\n      first_name: &quot;&quot;,\n      last_name: &quot;&quot;,\n    }\n  },\n  methods: {\n    submitForm() {\n      this.$validator.validateAll().then(result =&gt; {\n        if (result) {\n          // if form have no errors\n          alert(&quot;form submitted!&quot;);\n        } else {\n          // form have errors\n        }\n      })\n    }\n  },\n}\n&lt;/script&gt;\n\t\t</template>\n\t</vx-card>\n</template>\n\n<script>\n// For custom error message\nimport { Validator } from 'vee-validate';\nconst dict = {\n  custom: {\n    first_name: {\n      required: 'Please enter your first name',\n      alpha: \"Your first name may only contain alphabetic characters\"\n    },\n    last_name: {\n      required: 'Please enter your last name',\n      alpha: \"Your last name may only contain alphabetic characters\"\n    },\n  }\n};\n\n// register custom messages\nValidator.localize('en', dict);\n\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\tfirst_name: \"\",\n\t\t\tlast_name: \"\",\n\t\t}\n\t},\n\tmethods: {\n\t\tsubmitForm() {\n\t\t\tthis.$validator.validateAll().then(result => {\n\t\t\t\tif(result) {\n\t\t\t\t\t// if form have no errors\n\t\t\t\t\talert(\"form submitted!\");\n\t\t\t\t}else{\n\t\t\t\t\t// form have errors\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t},\n}\n</script>\n"]}]}