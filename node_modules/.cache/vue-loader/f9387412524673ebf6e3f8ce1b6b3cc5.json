{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/apps/chat/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/apps/chat/Chat.vue","mtime":1634372945941},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDaGF0Q29udGFjdCAgICAgICAgIGZyb20gIi4vQ2hhdENvbnRhY3QudnVlIgppbXBvcnQgQ2hhdExvZyAgICAgICAgICAgICBmcm9tICcuL0NoYXRMb2cudnVlJwppbXBvcnQgQ2hhdE5hdmJhciAgICAgICAgICBmcm9tICcuL0NoYXROYXZiYXIudnVlJwppbXBvcnQgVXNlclByb2ZpbGUgICAgICAgICBmcm9tICIuL1VzZXJQcm9maWxlLnZ1ZSIKaW1wb3J0IFZ1ZVBlcmZlY3RTY3JvbGxiYXIgZnJvbSAndnVlLXBlcmZlY3Qtc2Nyb2xsYmFyJwppbXBvcnQgbW9kdWxlQ2hhdCAgICAgICAgICBmcm9tICdAL3N0b3JlL2NoYXQvbW9kdWxlQ2hhdC5qcycKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWN0aXZlICAgICAgICAgICAgICAgOiB0cnVlLAogICAgICBpc0hpZGRlbiAgICAgICAgICAgICA6IGZhbHNlLAogICAgICBzZWFyY2hDb250YWN0ICAgICAgICA6ICIiLAogICAgICBhY3RpdmVQcm9maWxlU2lkZWJhciA6IGZhbHNlLAogICAgICBhY3RpdmVDaGF0VXNlciAgICAgICA6IG51bGwsCiAgICAgIHVzZXJQcm9maWxlSWQgICAgICAgIDogLTEsCiAgICAgIHR5cGVkTWVzc2FnZSAgICAgICAgIDogIiIsCiAgICAgIGlzQ2hhdFBpbm5lZCAgICAgICAgIDogZmFsc2UsCiAgICAgIHNldHRpbmdzICAgICAgICAgICAgIDogewogICAgICAgIG1heFNjcm9sbGJhckxlbmd0aCA6IDYwLAogICAgICAgIHdoZWVsU3BlZWQgICAgICAgICA6IDAuNzAsCiAgICAgIH0sCiAgICAgIGNsaWNrTm90Q2xvc2UgICAgICAgIDogdHJ1ZSwKICAgICAgaXNDaGF0U2lkZWJhckFjdGl2ZSAgOiB0cnVlLAogICAgICBpc0xvZ2dlZEluVXNlclByb2ZpbGVWaWV3OiBmYWxzZSwKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICB3aW5kb3dXaWR0aCgpIHsKICAgICAgdGhpcy5zZXRTaWRlYmFyV2lkdGgoKQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNoYXRMYXN0TWVzc2FnZWQoKSB7CiAgICAgIHJldHVybiAodXNlcklkKSA9PiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjaGF0L2NoYXRMYXN0TWVzc2FnZWQnXSh1c2VySWQpCiAgICB9LAogICAgY2hhdFVuc2Vlbk1lc3NhZ2VzKCkgewogICAgICByZXR1cm4gKHVzZXJJZCkgPT4gewogICAgICAgIGNvbnN0IHVuc2Vlbk1zZyA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2NoYXQvY2hhdFVuc2Vlbk1lc3NhZ2VzJ10odXNlcklkKQogICAgICAgIGlmICh1bnNlZW5Nc2cpIHJldHVybiB1bnNlZW5Nc2cKICAgICAgfQogICAgfSwKICAgIGFjdGl2ZVVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5BcHBBY3RpdmVVc2VyCiAgICB9LAogICAgZ2V0U3RhdHVzQ29sb3IoKSB7CiAgICAgIHJldHVybiAoaXNBY3RpdmVVc2VyKSA9PiB7CiAgICAgICAgY29uc3QgdXNlclN0YXR1cyA9IHRoaXMuZ2V0VXNlclN0YXR1cyhpc0FjdGl2ZVVzZXIpCgogICAgICAgIGlmICh1c2VyU3RhdHVzID09ICJvbmxpbmUiKSB7CiAgICAgICAgICByZXR1cm4gInN1Y2Nlc3MiCiAgICAgICAgfSBlbHNlIGlmICh1c2VyU3RhdHVzID09ICJkbyBub3QgZGlzdHVyYiIpIHsKICAgICAgICAgIHJldHVybiAiZGFuZ2VyIgogICAgICAgIH0gZWxzZSBpZiAodXNlclN0YXR1cyA9PSAiYXdheSIpIHsKICAgICAgICAgIHJldHVybiAid2FybmluZyIKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmV0dXJuICJncmV5IgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGNoYXRDb250YWN0cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2NoYXQvY2hhdENvbnRhY3RzJ10KICAgIH0sCiAgICBjb250YWN0cygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2NoYXQvY29udGFjdHMnXQogICAgfSwKICAgIHNlYXJjaFF1ZXJ5OiB7CiAgICAgIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuY2hhdC5jaGF0U2VhcmNoUXVlcnkKICAgICAgfSwKICAgICAgc2V0KHZhbCkgewogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjaGF0L3NldENoYXRTZWFyY2hRdWVyeScsIHZhbCkKICAgICAgfQogICAgfSwKICAgIGlzQWN0aXZlQ2hhdFVzZXIoKSB7CiAgICAgIHJldHVybiAodXNlcklkKSA9PiB1c2VySWQgPT0gdGhpcy5hY3RpdmVDaGF0VXNlcgogICAgfSwKICAgIHdpbmRvd1dpZHRoKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUud2luZG93V2lkdGgKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFVzZXJTdGF0dXMoaXNBY3RpdmVVc2VyKSB7CiAgICAgIC8vIHJldHVybiAiYWN0aXZlIgogICAgICByZXR1cm4gKGlzQWN0aXZlVXNlcikgPyB0aGlzLiRzdG9yZS5zdGF0ZS5BcHBBY3RpdmVVc2VyLnN0YXR1cyA6IHRoaXMuY29udGFjdHNbdGhpcy5hY3RpdmVDaGF0VXNlcl0uc3RhdHVzCiAgICB9LAogICAgY2xvc2VQcm9maWxlU2lkZWJhcih2YWx1ZSkgewogICAgICB0aGlzLmFjdGl2ZVByb2ZpbGVTaWRlYmFyID0gdmFsdWUKICAgIH0sCiAgICB1cGRhdGVBY3RpdmVDaGF0VXNlcihjb250YWN0SWQpIHsKICAgICAgdGhpcy5hY3RpdmVDaGF0VXNlciA9IGNvbnRhY3RJZAogICAgICBpZiAodGhpcy4kc3RvcmUuZ2V0dGVyc1snY2hhdC9jaGF0RGF0YU9mVXNlciddKHRoaXMuYWN0aXZlQ2hhdFVzZXIpKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NoYXQvbWFya1NlZW5BbGxNZXNzYWdlcycsIGNvbnRhY3RJZCkKICAgICAgfQogICAgICBsZXQgY2hhdERhdGEgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjaGF0L2NoYXREYXRhT2ZVc2VyJ10odGhpcy5hY3RpdmVDaGF0VXNlcikKICAgICAgaWYgKGNoYXREYXRhKSB0aGlzLmlzQ2hhdFBpbm5lZCA9IGNoYXREYXRhLmlzUGlubmVkCiAgICAgIGVsc2UgdGhpcy5pc0NoYXRQaW5uZWQgPSBmYWxzZQogICAgICB0aGlzLnRvZ2dsZUNoYXRTaWRlYmFyKCkKICAgICAgdGhpcy50eXBlZE1lc3NhZ2UgPSAnJwogICAgfSwKICAgIHNob3dQcm9maWxlU2lkZWJhcih1c2VySWQsIG9wZW5PbkxlZnQgPSBmYWxzZSkgewogICAgICB0aGlzLnVzZXJQcm9maWxlSWQgPSB1c2VySWQKICAgICAgdGhpcy5pc0xvZ2dlZEluVXNlclByb2ZpbGVWaWV3ID0gb3Blbk9uTGVmdAogICAgICB0aGlzLmFjdGl2ZVByb2ZpbGVTaWRlYmFyID0gIXRoaXMuYWN0aXZlUHJvZmlsZVNpZGViYXIKICAgIH0sCiAgICBzZW5kTXNnKCkgewogICAgICBpZiAoIXRoaXMudHlwZWRNZXNzYWdlKSByZXR1cm4KICAgICAgY29uc3QgcGF5bG9hZCA9IHsKICAgICAgICBpc1Bpbm5lZDogdGhpcy5pc0NoYXRQaW5uZWQsCiAgICAgICAgJ21zZyc6IHsKICAgICAgICAgICd0ZXh0Q29udGVudCcgOiB0aGlzLnR5cGVkTWVzc2FnZSwKICAgICAgICAgICd0aW1lJyAgICAgICAgOiBTdHJpbmcobmV3IERhdGUoKSksCiAgICAgICAgICAnaXNTZW50JyAgICAgIDogdHJ1ZSwKICAgICAgICAgICdpc1NlZW4nICAgICAgOiBmYWxzZSwKICAgICAgICB9LAogICAgICAgICdpZCc6IHRoaXMuYWN0aXZlQ2hhdFVzZXIKICAgICAgfQogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2hhdC9zZW5kQ2hhdE1lc3NhZ2UnLCBwYXlsb2FkKQogICAgICB0aGlzLnR5cGVkTWVzc2FnZSA9ICcnCiAgICAgIHRoaXMuJHJlZnMuY2hhdExvZ1BTLiRlbC5zY3JvbGxUb3AgPSB0aGlzLiRyZWZzLmNoYXRMb2cuc2Nyb2xsSGVpZ2h0CiAgICB9LAogICAgdG9nZ2xlSXNDaGF0UGlubmVkKHZhbHVlKSB7CiAgICAgIHRoaXMuaXNDaGF0UGlubmVkID0gdmFsdWUKICAgIH0sCiAgICBzZXRTaWRlYmFyV2lkdGgoKSB7CiAgICAgIGlmICh0aGlzLndpbmRvd1dpZHRoIDwgMTIwMCkgewogICAgICAgIHRoaXMuaXNDaGF0U2lkZWJhckFjdGl2ZSA9IHRoaXMuY2xpY2tOb3RDbG9zZSA9IGZhbHNlCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pc0NoYXRTaWRlYmFyQWN0aXZlID0gdGhpcy5jbGlja05vdENsb3NlID0gdHJ1ZQogICAgICB9CiAgICB9LAogICAgdG9nZ2xlQ2hhdFNpZGViYXIodmFsdWUgPSBmYWxzZSkgewogICAgICBpZiAoIXZhbHVlICYmIHRoaXMuY2xpY2tOb3RDbG9zZSkgcmV0dXJuCiAgICAgIHRoaXMuaXNDaGF0U2lkZWJhckFjdGl2ZSA9IHZhbHVlCiAgICB9CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBWdWVQZXJmZWN0U2Nyb2xsYmFyLAogICAgQ2hhdENvbnRhY3QsCiAgICBVc2VyUHJvZmlsZSwKICAgIENoYXROYXZiYXIsCiAgICBDaGF0TG9nLAogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuJHN0b3JlLnJlZ2lzdGVyTW9kdWxlKCdjaGF0JywgbW9kdWxlQ2hhdCkKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjaGF0L2ZldGNoQ29udGFjdHMnKQogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NoYXQvZmV0Y2hDaGF0Q29udGFjdHMnKQogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NoYXQvZmV0Y2hDaGF0cycpCiAgICB0aGlzLnNldFNpZGViYXJXaWR0aCgpCiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbigpIHsKICAgIHRoaXMuJHN0b3JlLnVucmVnaXN0ZXJNb2R1bGUoJ2NoYXQnKQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJjaGF0L3NldENoYXRTZWFyY2hRdWVyeSIsICIiKQogIH0KfQoK"},{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Chat.vue","sourceRoot":"src/views/apps/chat","sourcesContent":["<template>\n    <div id=\"chat-app\" class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\">\n        <vs-sidebar class=\"items-no-padding\" parent=\"#chat-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isChatSidebarActive\" id=\"chat-list-sidebar\">\n\n            <!-- USER PROFILE SIDEBAR -->\n            <user-profile :active=\"activeProfileSidebar\" :userId=\"userProfileId\" class=\"user-profile-container\" :isLoggedInUser=\"isLoggedInUserProfileView\" @closeProfileSidebar=\"closeProfileSidebar\"></user-profile>\n\n            <div class=\"chat__profile-search flex p-4\">\n                <div class=\"relative inline-flex\">\n                    <vs-avatar v-if=\"activeUser.photoURL\" class=\"m-0 border-2 border-solid border-white\" :src=\"activeUser.photoURL\" size=\"40px\" @click=\"showProfileSidebar(Number(activeUser.uid), true)\" />\n                    <div class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\" :class=\"'bg-' + getStatusColor(true)\"></div>\n                </div>\n                <vs-input icon-no-border icon=\"icon-search\" icon-pack=\"feather\" class=\"w-full mx-5 input-rounded-full\" placeholder=\"Search or start a new chat\" v-model=\"searchQuery\"/>\n\n                <feather-icon class=\"md:inline-flex lg:hidden -ml-3 cursor-pointer\" icon=\"XIcon\" @click=\"toggleChatSidebar(false)\" />\n            </div>\n\n            <vs-divider class=\"d-theme-border-grey-light m-0\" />\n            <VuePerfectScrollbar class=\"chat-scroll-area pt-4\" :settings=\"settings\" :key=\"$vs.rtl\">\n\n                <!-- ACTIVE CHATS LIST -->\n                <div class=\"chat__chats-list mb-8\">\n                    <h3 class=\"text-primary mb-5 px-4\">Chats</h3>\n                    <ul class=\"chat__active-chats bordered-items\">\n                        <li class=\"cursor-pointer\" v-for=\"(contact, index) in chatContacts\" :key=\"index\" @click=\"updateActiveChatUser(contact.uid)\">\n                            <chat-contact showLastMsg :contact=\"contact\" :lastMessaged=\"chatLastMessaged(contact.uid).time\" :unseenMsg=\"chatUnseenMessages(contact.uid)\" :isActiveChatUser=\"isActiveChatUser(contact.uid)\"></chat-contact>\n                        </li>\n                    </ul>\n                </div>\n\n\n                <!-- CONTACTS LIST -->\n                <div class=\"chat__contacts\">\n                    <h3 class=\"text-primary mb-5 px-4\">Contacts</h3>\n                    <ul class=\"chat__contacts bordered-items\">\n                        <li class=\"cursor-pointer\" v-for=\"contact in contacts\" :key=\"contact.uid\" @click=\"updateActiveChatUser(contact.uid)\">\n                            <chat-contact :contact=\"contact\"></chat-contact>\n                        </li>\n                    </ul>\n                </div>\n            </VuePerfectScrollbar>\n        </vs-sidebar>\n\n        <!-- RIGHT COLUMN -->\n        <div class=\"chat__bg no-scroll-content chat-content-area border border-solid d-theme-border-grey-light border-t-0 border-r-0 border-b-0\" :class=\"{'sidebar-spacer--wide': clickNotClose, 'flex items-center justify-center': activeChatUser === null}\">\n            <template v-if=\"activeChatUser\">\n                <div class=\"chat__navbar\">\n                    <chat-navbar :isSidebarCollapsed=\"!clickNotClose\" :user-id=\"activeChatUser\" :isPinnedProp=\"isChatPinned\" @openContactsSidebar=\"toggleChatSidebar(true)\" @showProfileSidebar=\"showProfileSidebar\" @toggleIsChatPinned=\"toggleIsChatPinned\"></chat-navbar>\n                </div>\n                <VuePerfectScrollbar class=\"chat-content-scroll-area border border-solid d-theme-border-grey-light\" :settings=\"settings\" ref=\"chatLogPS\" :key=\"$vs.rtl\">\n                    <div class=\"chat__log\" ref=\"chatLog\">\n                        <chat-log :userId=\"activeChatUser\" v-if=\"activeChatUser\"></chat-log>\n                    </div>\n                </VuePerfectScrollbar>\n                <div class=\"chat__input flex p-4 bg-white\">\n                    <vs-input class=\"flex-1\" placeholder=\"Type Your Message\" v-model=\"typedMessage\" @keyup.enter=\"sendMsg\" />\n                    <vs-button class=\"bg-primary-gradient ml-4\" type=\"filled\" @click=\"sendMsg\">Send</vs-button>\n                </div>\n            </template>\n            <template v-else>\n                <div class=\"flex flex-col items-center\">\n                    <feather-icon icon=\"MessageSquareIcon\" class=\"mb-4 bg-white p-8 shadow-md rounded-full\" svgClasses=\"w-16 h-16\"></feather-icon>\n                    <h4 class=\" py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\" @click.stop=\"toggleChatSidebar(true)\">Chat with Our Support Now!</h4>\n                </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport ChatContact         from \"./ChatContact.vue\"\nimport ChatLog             from './ChatLog.vue'\nimport ChatNavbar          from './ChatNavbar.vue'\nimport UserProfile         from \"./UserProfile.vue\"\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport moduleChat          from '@/store/chat/moduleChat.js'\n\nexport default {\n  data() {\n    return {\n      active               : true,\n      isHidden             : false,\n      searchContact        : \"\",\n      activeProfileSidebar : false,\n      activeChatUser       : null,\n      userProfileId        : -1,\n      typedMessage         : \"\",\n      isChatPinned         : false,\n      settings             : {\n        maxScrollbarLength : 60,\n        wheelSpeed         : 0.70,\n      },\n      clickNotClose        : true,\n      isChatSidebarActive  : true,\n      isLoggedInUserProfileView: false,\n    }\n  },\n  watch: {\n    windowWidth() {\n      this.setSidebarWidth()\n    }\n  },\n  computed: {\n    chatLastMessaged() {\n      return (userId) => this.$store.getters['chat/chatLastMessaged'](userId)\n    },\n    chatUnseenMessages() {\n      return (userId) => {\n        const unseenMsg = this.$store.getters['chat/chatUnseenMessages'](userId)\n        if (unseenMsg) return unseenMsg\n      }\n    },\n    activeUser() {\n      return this.$store.state.AppActiveUser\n    },\n    getStatusColor() {\n      return (isActiveUser) => {\n        const userStatus = this.getUserStatus(isActiveUser)\n\n        if (userStatus == \"online\") {\n          return \"success\"\n        } else if (userStatus == \"do not disturb\") {\n          return \"danger\"\n        } else if (userStatus == \"away\") {\n          return \"warning\"\n        } else {\n          return \"grey\"\n        }\n      }\n    },\n    chatContacts() {\n      return this.$store.getters['chat/chatContacts']\n    },\n    contacts() {\n      return this.$store.getters['chat/contacts']\n    },\n    searchQuery: {\n      get() {\n        return this.$store.state.chat.chatSearchQuery\n      },\n      set(val) {\n        this.$store.dispatch('chat/setChatSearchQuery', val)\n      }\n    },\n    isActiveChatUser() {\n      return (userId) => userId == this.activeChatUser\n    },\n    windowWidth() {\n      return this.$store.state.windowWidth\n    }\n  },\n  methods: {\n    getUserStatus(isActiveUser) {\n      // return \"active\"\n      return (isActiveUser) ? this.$store.state.AppActiveUser.status : this.contacts[this.activeChatUser].status\n    },\n    closeProfileSidebar(value) {\n      this.activeProfileSidebar = value\n    },\n    updateActiveChatUser(contactId) {\n      this.activeChatUser = contactId\n      if (this.$store.getters['chat/chatDataOfUser'](this.activeChatUser)) {\n        this.$store.dispatch('chat/markSeenAllMessages', contactId)\n      }\n      let chatData = this.$store.getters['chat/chatDataOfUser'](this.activeChatUser)\n      if (chatData) this.isChatPinned = chatData.isPinned\n      else this.isChatPinned = false\n      this.toggleChatSidebar()\n      this.typedMessage = ''\n    },\n    showProfileSidebar(userId, openOnLeft = false) {\n      this.userProfileId = userId\n      this.isLoggedInUserProfileView = openOnLeft\n      this.activeProfileSidebar = !this.activeProfileSidebar\n    },\n    sendMsg() {\n      if (!this.typedMessage) return\n      const payload = {\n        isPinned: this.isChatPinned,\n        'msg': {\n          'textContent' : this.typedMessage,\n          'time'        : String(new Date()),\n          'isSent'      : true,\n          'isSeen'      : false,\n        },\n        'id': this.activeChatUser\n      }\n      this.$store.dispatch('chat/sendChatMessage', payload)\n      this.typedMessage = ''\n      this.$refs.chatLogPS.$el.scrollTop = this.$refs.chatLog.scrollHeight\n    },\n    toggleIsChatPinned(value) {\n      this.isChatPinned = value\n    },\n    setSidebarWidth() {\n      if (this.windowWidth < 1200) {\n        this.isChatSidebarActive = this.clickNotClose = false\n      } else {\n        this.isChatSidebarActive = this.clickNotClose = true\n      }\n    },\n    toggleChatSidebar(value = false) {\n      if (!value && this.clickNotClose) return\n      this.isChatSidebarActive = value\n    }\n  },\n  components: {\n    VuePerfectScrollbar,\n    ChatContact,\n    UserProfile,\n    ChatNavbar,\n    ChatLog,\n  },\n  created() {\n    this.$store.registerModule('chat', moduleChat)\n    this.$store.dispatch('chat/fetchContacts')\n    this.$store.dispatch('chat/fetchChatContacts')\n    this.$store.dispatch('chat/fetchChats')\n    this.setSidebarWidth()\n  },\n  beforeDestroy: function() {\n    this.$store.unregisterModule('chat')\n  },\n  mounted() {\n    this.$store.dispatch(\"chat/setChatSearchQuery\", \"\")\n  }\n}\n\n</script>\n\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/apps/chat.scss\";\n</style>\n"]}]}