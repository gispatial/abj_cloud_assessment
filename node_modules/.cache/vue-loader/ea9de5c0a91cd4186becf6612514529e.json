{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue","mtime":1634376356392},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdGV4dDI6ICdDb3B5IE1lIFdpdGhvdXQgRGlyZWN0aXZlJywKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGNvcHlUZXh0KCkgewogICAgICAgICAgICBjb25zdCB0aGlzSW5zID0gdGhpczsKICAgICAgICAgICAgdGhpcy4kY29weVRleHQodGhpcy50ZXh0MikudGhlbihmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHRoaXNJbnMuJHZzLm5vdGlmeSh7CiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICB0ZXh0OiAnVGV4dCBjb3BpZWQgc3VjY2Vzc2Z1bGx5JywKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgIGljb25QYWNrOiAnZmVhdGhlcicsCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246ICd0b3AtY2VudGVyJywKICAgICAgICAgICAgICAgICAgICBpY29uOiAnaWNvbi1jaGVjay1jaXJjbGUnCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9LCBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgIHRoaXNJbnMuJHZzLm5vdGlmeSh7CiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdGYWlsZWQnLAogICAgICAgICAgICAgICAgICAgIHRleHQ6ICdFcnJvciBpbiBjb3B5aW5nIHRleHQnLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAnZGFuZ2VyJywKICAgICAgICAgICAgICAgICAgICBpY29uUGFjazogJ2ZlYXRoZXInLAogICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wLWNlbnRlcicsCiAgICAgICAgICAgICAgICAgICAgaWNvbjogJ2ljb24tYWxlcnQtY2lyY2xlJwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["ClipboardWithoutDirective.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClipboardWithoutDirective.vue","sourceRoot":"src/views/components/extra-components/clipboard","sourcesContent":["<!-- =========================================================================================\n\tFile Name: ClipboardWithoutDirective.vue\n\tDescription: Clipboard demo without directive\n\t----------------------------------------------------------------------------------------\n\tItem Name: abjcloudsolutions.com dashboard management portal\n\tAuthor: Pixinvent\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n\t<vx-card title=\"Without directive\" subtitle=\"You can copy text without a specific button. Use $copyText to copy text when event got fired.\" code-toggler>\n\t\t<vs-input v-model=\"text2\" class=\"inline-flex mb-2 mr-2\" />\n\t\t<vs-button @click=\"copyText\">Copy</vs-button>\n\t\t<template slot=\"codeContainer\">\n&lt;template&gt;\n    &lt;vs-input v-model=&quot;text2&quot; class=&quot;inline-flex&quot; /&gt;\n    &lt;vs-button @click=&quot;copyText&quot;&gt;Copy&lt;/vs-button&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n    data() {\n        return {\n            text2: 'Copy Me Without Directive',\n        }\n    },\n    methods: {\n        copyText() {\n            const thisIns = this;\n            this.$copyText(this.text2).then(function() {\n                thisIns.$vs.notify({\n                    title: 'Success',\n                    text: 'Text copied successfully',\n                    color: 'success',\n                    iconPack: 'feather',\n                    position: 'top-center',\n                    icon: 'icon-check-circle'\n                })\n            }, function() {\n                thisIns.$vs.notify({\n                    title: 'Failed',\n                    text: 'Error in copying text',\n                    color: 'danger',\n                    iconPack: 'feather',\n                    position: 'top-center',\n                    icon: 'icon-alert-circle'\n                })\n            })\n        }\n    }\n}\n&lt;/script&gt;\n\t\t</template>\n\t</vx-card>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            text2: 'Copy Me Without Directive',\n        }\n    },\n    methods: {\n        copyText() {\n            const thisIns = this;\n            this.$copyText(this.text2).then(function() {\n                thisIns.$vs.notify({\n                    title: 'Success',\n                    text: 'Text copied successfully',\n                    color: 'success',\n                    iconPack: 'feather',\n                    position: 'top-center',\n                    icon: 'icon-check-circle'\n                })\n            }, function() {\n                thisIns.$vs.notify({\n                    title: 'Failed',\n                    text: 'Error in copying text',\n                    color: 'danger',\n                    iconPack: 'feather',\n                    position: 'top-center',\n                    icon: 'icon-alert-circle'\n                })\n            })\n        }\n    }\n}\n</script>\n"]}]}