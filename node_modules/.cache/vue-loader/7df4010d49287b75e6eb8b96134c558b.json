{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/layouts/components/navbar/components/SearchBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/layouts/components/navbar/components/SearchBar.vue","mtime":1634797132094},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWeEF1dG9TdWdnZXN0IGZyb20gJ0AvY29tcG9uZW50cy92eC1hdXRvLXN1Z2dlc3QvVnhBdXRvU3VnZ2VzdC52dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFZ4QXV0b1N1Z2dlc3QKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBuYXZiYXJTZWFyY2hBbmRQaW5MaXN0OiB0aGlzLiRzdG9yZS5zdGF0ZS5uYXZiYXJTZWFyY2hBbmRQaW5MaXN0LAogICAgICBzaG93RnVsbFNlYXJjaDogZmFsc2UsCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZWxlY3RlZChpdGVtKSB7CiAgICAgIGl0ZW0ucGFnZXMgPyAgdGhpcy4kcm91dGVyLnB1c2goaXRlbS5wYWdlcy51cmwpLmNhdGNoKCgpID0+IHt9KSA6IG51bGwKICAgICAgdGhpcy5zaG93RnVsbFNlYXJjaCA9IGZhbHNlOwogICAgfSwKICAgIGhuZF9zZWFyY2hfcXVlcnlfdXBkYXRlKHF1ZXJ5KSB7CiAgICAgIC8vIFNob3cgb3ZlcmxheSBpZiBhbnkgY2hhcmFjdGVyIGlzIGVudGVyZWQKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdUT0dHTEVfQ09OVEVOVF9PVkVSTEFZJywgcXVlcnkgPyB0cnVlIDogZmFsc2UpCiAgICB9CiAgfQp9Cgo="},{"version":3,"sources":["SearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SearchBar.vue","sourceRoot":"src/layouts/components/navbar/components","sourcesContent":["<template>\n  <div class=\"flex\">\n    <div class=\"search-full-container w-full h-full absolute left-0 top-0\" :class=\"{'flex': showFullSearch}\" v-show=\"showFullSearch\">\n      <vx-auto-suggest\n        ref=\"navbarSearch\"\n        :autoFocus=\"showFullSearch\"\n        :data=\"navbarSearchAndPinList\"\n        search_key=\"title\"\n        background-overlay\n        class=\"w-full\"\n        inputClassses=\"w-full vs-input-no-border vs-input-no-shdow-focus\"\n        icon=\"SearchIcon\"\n        placeholder=\"Explore Tripcarte.Asia......\"\n        @input=\"hnd_search_query_update\"\n        @selected=\"selected\"\n        @closeSearchbar=\"showFullSearch = false\">\n\n        <template v-slot:group=\"{ group_name }\">\n          <p class=\"font-semibold text-primary\">{{ group_name | title }}</p>\n        </template>\n\n        <!-- Pages Suggestion -->\n        <template v-slot:pages=\"{ suggestion }\">\n          <div class=\"flex items-end leading-none py-1\">\n            <feather-icon :icon=\"suggestion.icon\" svgClasses=\"h-5 w-5\" class=\"mr-4\" />\n            <span class=\"mt-1\">{{ suggestion.title }}</span>\n          </div>\n        </template>\n\n        <!-- Files Suggestion -->\n        <template v-slot:files=\"{ suggestion }\">\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center\">\n              <div class=\"img-container w-8 mr-3 flex\">\n                <img :src=\"require(`@/assets/images/file-icons/${suggestion.file_ext}.png`)\" :alt=\"suggestion.file_name\" class=\"responsive\">\n              </div>\n              <div class=\"leading-none mt-1\">\n                <p class=\"mb-1\">{{ suggestion.file_name }}</p>\n                <small>by {{ suggestion.from }}</small>\n              </div>\n            </div>\n            <small>{{ suggestion.size }}</small>\n          </div>\n        </template>\n\n        <!-- Contacts Suggestion -->\n        <template v-slot:contacts=\"{ suggestion }\">\n          <div class=\"flex items-center justify-between\">\n            <div class=\"flex items-center\">\n              <img :src=\"suggestion.img\" :alt=\"suggestion.name\" class=\"w-8 h-8 mr-3 rounded-full\">\n              <div class=\"leading-none mt-1\">\n                <p>{{ suggestion.name }}</p>\n                <small>{{ suggestion.email }}</small>\n              </div>\n            </div>\n            <small>{{ suggestion.time }}</small>\n          </div>\n        </template>\n\n        <!-- No Items Slot -->\n        <template v-slot:noResult=\"{ group_name }\">\n          <div class=\"flex items-center\">\n            <feather-icon icon=\"InfoIcon\" svgClasses=\"h-5 w-5\" class=\"mr-4\" />\n            <span>No results found.</span>\n          </div>\n        </template>\n\n      </vx-auto-suggest>\n\n      <div class=\"absolute right-0 h-full z-50\">\n        <feather-icon\n          icon=\"XIcon\"\n          class=\"px-4 cursor-pointer h-full close-search-icon\"\n          @click=\"showFullSearch = false\" />\n      </div>\n    </div>\n    <feather-icon icon=\"SearchIcon\" @click=\"showFullSearch = true\" class=\"cursor-pointer navbar-fuzzy-search ml-4 mr-4\" />\n  </div>\n</template>\n\n<script>\nimport VxAutoSuggest from '@/components/vx-auto-suggest/VxAutoSuggest.vue';\n\nexport default {\n  components: {\n    VxAutoSuggest\n  },\n  data() {\n    return {\n      navbarSearchAndPinList: this.$store.state.navbarSearchAndPinList,\n      showFullSearch: false,\n    }\n  },\n  methods: {\n    selected(item) {\n      item.pages ?  this.$router.push(item.pages.url).catch(() => {}) : null\n      this.showFullSearch = false;\n    },\n    hnd_search_query_update(query) {\n      // Show overlay if any character is entered\n      this.$store.commit('TOGGLE_CONTENT_OVERLAY', query ? true : false)\n    }\n  }\n}\n\n</script>\n"]}]}