{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/syst/data-list/DataViewSidebar.vue?vue&type=style&index=0&id=245fbdf1&lang=scss&scoped=true&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/syst/data-list/DataViewSidebar.vue","mtime":1634797132191},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/css-loader/index.js","mtime":1634797171608},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1634797150551},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/postcss-loader/src/index.js","mtime":1634797150434},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/sass-loader/dist/cjs.js","mtime":1634797174106},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYWRkLW5ldy1kYXRhLXNpZGViYXIgewogIDo6di1kZWVwIC52cy1zaWRlYmFyLS1iYWNrZ3JvdW5kIHsKICAgIHotaW5kZXg6IDUyMDEwOwogIH0KCiAgOjp2LWRlZXAgLnZzLXNpZGViYXIgewogICAgei1pbmRleDogNTIwMTA7CiAgICB3aWR0aDogNDAwcHg7CiAgICBtYXgtd2lkdGg6IDkwdnc7CgogICAgLmltZy11cGxvYWQgewogICAgICBtYXJnaW4tdG9wOiAycmVtOwoKICAgICAgLmNvbi1pbWctdXBsb2FkIHsKICAgICAgICBwYWRkaW5nOiAwOwogICAgICB9CgogICAgICAuY29uLWlucHV0LXVwbG9hZCB7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgbWFyZ2luOiAwOwogICAgICB9CiAgICB9CiAgfQp9Cgouc2Nyb2xsLWFyZWEtLWRhdGEtbGlzdC1hZGQtbmV3IHsKICAgIC8vIGhlaWdodDogY2FsYyh2YXIoLS12aCwgMXZoKSAqIDEwMCAtIDQuM3JlbSk7CiAgICBoZWlnaHQ6IGNhbGModmFyKC0tdmgsIDF2aCkgKiAxMDAgLSAxNnB4IC0gNDVweCAtIDgycHgpOwp9Cg=="},{"version":3,"sources":["DataViewSidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoNA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"DataViewSidebar.vue","sourceRoot":"src/views/syst/data-list","sourcesContent":["<!-- =========================================================================================\n  File Name: AddNewDataSidebar.vue\n  Description: Add New Data - Sidebar component\n  ----------------------------------------------------------------------------------------\n  Item Name: abjcloudsolutions.com dashboard management portal\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <vs-sidebar click-not-close position-right parent=\"body\" default-index=\"1\" color=\"primary\" class=\"add-new-data-sidebar items-no-padding\" spacer v-model=\"isSidebarActiveLocal\">\n    <div class=\"mt-6 flex items-center justify-between px-6\">\n        <h4>{{ Object.entries(this.data).length === 0 ? \"ADD NEW\" : \"UPDATE\" }} ITEM</h4>\n        <feather-icon icon=\"XIcon\" @click.stop=\"isSidebarActiveLocal = false\" class=\"cursor-pointer\"></feather-icon>\n    </div>\n    <vs-divider class=\"mb-0\"></vs-divider>\n\n    <VuePerfectScrollbar class=\"scroll-area--data-list-add-new\" :settings=\"settings\" :key=\"$vs.rtl\">\n\n      <div class=\"p-6\">\n\n        <!-- Product Image -->\n        <template v-if=\"dataImg\">\n\n          <!-- Image Container -->\n          <div class=\"img-container w-64 mx-auto flex items-center justify-center\">\n            <img :src=\"dataImg\" alt=\"img\" class=\"responsive\">\n          </div>\n\n          <!-- Image upload Buttons -->\n          <div class=\"modify-img flex justify-between mt-5\">\n            <input type=\"file\" class=\"hidden\" ref=\"updateImgInput\" @change=\"updateCurrImg\" accept=\"image/*\">\n            <vs-button class=\"mr-4\" type=\"flat\" @click=\"$refs.updateImgInput.click()\">Update Attractions</vs-button>\n            <vs-button type=\"flat\" color=\"#999\" @click=\"dataImg = null\">Remove Image</vs-button>\n          </div>\n        </template>\n\n        <!-- NAME -->\n        <vs-input label=\"Name\" v-model=\"dataName\" class=\"mt-5 w-full\" name=\"item-name\" v-validate=\"'required'\" />\n        <span class=\"text-danger text-sm\" v-show=\"errors.has('item-name')\">{{ errors.first('item-name') }}</span>\n\n        <!-- CATEGORY -->\n        <vs-select v-model=\"dataCategory\" label=\"Category\" class=\"mt-5 w-full\" name=\"item-category\" v-validate=\"'required'\">\n          <vs-select-item :key=\"item.value\" :value=\"item.value\" :text=\"item.text\" v-for=\"item in category_choices\" />\n        </vs-select>\n        <span class=\"text-danger text-sm\" v-show=\"errors.has('item-category')\">{{ errors.first('item-category') }}</span>\n\n        <!-- ORDER STATUS -->\n        <vs-select v-model=\"dataOrder_status\" label=\"Order Status\" class=\"mt-5 w-full\">\n          <vs-select-item :key=\"item.value\" :value=\"item.value\" :text=\"item.text\" v-for=\"item in order_status_choices\" />\n        </vs-select>\n\n        <!-- PRICE -->\n        <vs-input\n          icon-pack=\"feather\"\n          icon=\"icon-dollar-sign\"\n          label=\"Price\"\n          v-model=\"dataPrice\"\n          class=\"mt-5 w-full\"\n          v-validate=\"{ required: true, regex: /\\d+(\\.\\d+)?$/ }\"\n          name=\"item-price\" />\n        <span class=\"text-danger text-sm\" v-show=\"errors.has('item-price')\">{{ errors.first('item-price') }}</span>\n\n        <!-- Upload -->\n        <!-- <vs-upload text=\"Upload Image\" class=\"img-upload\" ref=\"fileUpload\" /> -->\n\n        <div class=\"upload-img mt-5\" v-if=\"!dataImg\">\n          <input type=\"file\" class=\"hidden\" ref=\"uploadImgInput\" @change=\"updateCurrImg\" accept=\"image/*\">\n          <vs-button @click=\"$refs.uploadImgInput.click()\">Upload Image</vs-button>\n        </div>\n      </div>\n    </VuePerfectScrollbar>\n\n    <div class=\"flex flex-wrap items-center p-6\" slot=\"footer\">\n      <vs-button class=\"mr-6\" @click=\"submitData\" :disabled=\"!isFormValid\">Submit</vs-button>\n      <vs-button type=\"border\" color=\"danger\" @click=\"isSidebarActiveLocal = false\">Cancel</vs-button>\n    </div>\n  </vs-sidebar>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n  props: {\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    data: {\n      type: Object,\n      default: () => {},\n    }\n  },\n  watch: {\n    isSidebarActive(val) {\n      if(!val) return\n      if(Object.entries(this.data).length === 0) {\n        this.initValues()\n        this.$validator.reset()\n      }else {\n        let { category, id, img, name, order_status, price } = JSON.parse(JSON.stringify(this.data))\n        this.dataId = id\n        this.dataCategory = category\n        this.dataImg = img\n        this.dataName = name\n        this.dataOrder_status = order_status\n        this.dataPrice = price\n        this.initValues()\n      }\n      // Object.entries(this.data).length === 0 ? this.initValues() : { this.dataId, this.dataName, this.dataCategory, this.dataOrder_status, this.dataPrice } = JSON.parse(JSON.stringify(this.data))\n    }\n  },\n  data() {\n    return {\n\n      dataId: null,\n      dataName: \"\",\n      dataCategory: null,\n      dataImg: null,\n      dataOrder_status: \"pending\",\n      dataPrice: 0,\n\n      category_choices: [\n        {text:'TOP DESTINATIONS',value:'audio'},\n        {text:'SPECIAL PROMOTION',value:'computers'},\n        {text:'MOST POPULAR',value:'Langkawi'},\n        {text:'NEW ATTRACTIONS',value:'appliance'}\n      ],\n\n      order_status_choices: [\n        {text:'Pending',value:'pending'},\n        {text:'Canceled',value:'canceled'},\n        {text:'Completed',value:'completed'},\n        {text:'On Hold',value:'on_hold'}\n      ],\n      settings: { // perfectscrollbar settings\n          maxScrollbarLength: 60,\n          wheelSpeed: .60,\n      },\n    }\n  },\n  computed: {\n    isSidebarActiveLocal: {\n      get() {\n        return this.isSidebarActive\n      },\n      set(val) {\n        if(!val) {\n          this.$emit('closeSidebar')\n          // this.$validator.reset()\n          // this.initValues()\n        }\n      }\n    },\n    isFormValid() {\n      return !this.errors.any() && this.dataName && this.dataCategory && (this.dataPrice > 0)\n    }\n  },\n  methods: {\n    initValues() {\n      if(this.data.id) return\n        this.dataId = null\n        this.dataName = \"\"\n        this.dataCategory = null\n        this.dataOrder_status = \"pending\"\n        this.dataPrice = 0\n        this.dataImg = null\n    },\n    submitData() {\n      this.$validator.validateAll().then(result => {\n          if (result) {\n            const obj = {\n              id: this.dataId,\n              name: this.dataName,\n              img: this.dataImg,\n              category: this.dataCategory,\n              order_status: this.dataOrder_status,\n              price: this.dataPrice\n            }\n\n            if(this.dataId !== null && this.dataId >= 0) {\n              this.$store.dispatch(\"dataList/updateItem\", obj).catch(err => { console.error(err) })\n            }else{\n              delete obj.id\n              obj.popularity = 0\n              this.$store.dispatch(\"dataList/addItem\", obj).catch(err => { console.error(err) })\n            }\n\n            this.$emit('closeSidebar')\n            this.initValues()\n          }\n      })\n    },\n    updateCurrImg(input) {\n      if (input.target.files && input.target.files[0]) {\n        var reader = new FileReader()\n        reader.onload = e => {\n          this.dataImg = e.target.result\n        }\n        reader.readAsDataURL(input.target.files[0])\n      }\n    }\n  },\n  components: {\n    VuePerfectScrollbar,\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.add-new-data-sidebar {\n  ::v-deep .vs-sidebar--background {\n    z-index: 52010;\n  }\n\n  ::v-deep .vs-sidebar {\n    z-index: 52010;\n    width: 400px;\n    max-width: 90vw;\n\n    .img-upload {\n      margin-top: 2rem;\n\n      .con-img-upload {\n        padding: 0;\n      }\n\n      .con-input-upload {\n        width: 100%;\n        margin: 0;\n      }\n    }\n  }\n}\n\n.scroll-area--data-list-add-new {\n    // height: calc(var(--vh, 1vh) * 100 - 4.3rem);\n    height: calc(var(--vh, 1vh) * 100 - 16px - 45px - 82px);\n}\n</style>\n"]}]}