{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/import-export/Import.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/import-export/Import.vue","mtime":1634797132157},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBJbXBvcnRFeGNlbCBmcm9tICJAL2NvbXBvbmVudHMvZXhjZWwvSW1wb3J0RXhjZWwudnVlIgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEltcG9ydEV4Y2VsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgaGVhZGVyOiBbXSwKICAgICAgc2hlZXROYW1lOiAiIgogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgbG9hZERhdGFJblRhYmxlKHsgcmVzdWx0cywgaGVhZGVyLCBtZXRhIH0pIHsKICAgICAgdGhpcy5oZWFkZXIgPSBoZWFkZXIKICAgICAgdGhpcy50YWJsZURhdGEgPSByZXN1bHRzCiAgICAgIHRoaXMuc2hlZXROYW1lID0gbWV0YS5zaGVldE5hbWUKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Import.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Import.vue","sourceRoot":"src/views/components/extra-components/import-export","sourcesContent":["<!-- =========================================================================================\n    File Name: i18n.vue\n    Description: I18n demo\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n    Developer: Netquest's TripcarteDev Team\n    GitHub URL: https://github.com/gispatial/tripcarte-asia-JWT\n========================================================================================== -->\n\n<template>\n  <div>\n    <div class=\"mb-8\">\n      <import-excel :onSuccess=\"loadDataInTable\" />\n    </div>\n    <vx-card v-if=\"tableData.length && header.length\">\n      <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\n        <template slot=\"header\">\n          <h4>{{ sheetName }}</h4>\n        </template>\n\n        <template slot=\"thead\">\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\n        </template>\n\n        <template slot-scope=\"{data}\">\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\n              {{ col }}\n            </vs-td>\n          </vs-tr>\n        </template>\n      </vs-table>\n    </vx-card>\n  </div>\n</template>\n\n<script>\nimport ImportExcel from \"@/components/excel/ImportExcel.vue\"\n\nexport default {\n  components: {\n    ImportExcel\n  },\n  data() {\n    return {\n      tableData: [],\n      header: [],\n      sheetName: \"\"\n    }\n  },\n  methods: {\n    loadDataInTable({ results, header, meta }) {\n      this.header = header\n      this.tableData = results\n      this.sheetName = meta.sheetName\n    }\n  }\n}\n</script>\n"]}]}