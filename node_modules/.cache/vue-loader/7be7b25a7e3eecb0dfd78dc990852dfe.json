{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/forms/form-validation/FormValidationTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/forms/form-validation/FormValidationTypes.vue","mtime":1634376356193},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgcmVxdWlyZWQ6ICIiLAogICAgICAgICAgICBhbHBoYTogIiIsCiAgICAgICAgICAgIGFscGhhX2Rhc2g6ICIiLAogICAgICAgICAgICBhbHBoYV9udW06ICIiLAogICAgICAgICAgICBudW1lcmljOiAiIiwKICAgICAgICAgICAgYWxwaGFfc3BhY2VzOiAiIiwKICAgICAgICAgICAgZW1haWw6ICIiLAogICAgICAgICAgICB1cmw6ICIiLAogICAgICAgICAgICBtaW46ICIiLAogICAgICAgICAgICBtYXg6ICIiLAogICAgICAgICAgICBwYXNzd29yZDogIiIsCiAgICAgICAgICAgIGNvbmZpcm1fcGFzc3dvcmQ6ICIiLAogICAgICAgICAgICBkYXRlX2Zvcm1hdDogIiIsCiAgICAgICAgICAgIGJldHdlZW46ICIiLAogICAgICAgICAgICBjcmVkaXRfY2FyZDogIiIsCiAgICAgICAgICAgIGRhdGVfYmV0d2VlbjogIiIsCiAgICAgICAgICAgIGRpZ2l0czogIiIsCiAgICAgICAgICAgIHNlbGVjdDE6ICIiLAogICAgICAgICAgICBvcHRpb25zMTogWwogICAgICAgICAgICAgICAge3RleHQ6ICJPbmUiLCB2YWx1ZTogMX0sCiAgICAgICAgICAgICAgICB7dGV4dDogIlR3byIsIHZhbHVlOiAyfSwKICAgICAgICAgICAgICAgIHt0ZXh0OiAiVGhyZWUiLCB2YWx1ZTogM30sCiAgICAgICAgICAgICAgICB7dGV4dDogIkZvdXIiLCB2YWx1ZTogNH0sCiAgICAgICAgICAgICAgICB7dGV4dDogIkZpdmUiLCB2YWx1ZTogNX0sCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIG1heF92YWx1ZTogIiIsCiAgICAgICAgICAgIG1pbl92YWx1ZTogIiIsCiAgICAgICAgICAgIHJlZ2V4OiAiIiwKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHN1Ym1pdEZvcm0oKSB7CiAgICAgICAgICAgIHRoaXMuJHZhbGlkYXRvci52YWxpZGF0ZUFsbCgpLnRoZW4ocmVzdWx0ID0+IHsKICAgICAgICAgICAgICAgIGlmKHJlc3VsdCkgewogICAgICAgICAgICAgICAgICAgIC8vIGlmIGZvcm0gaGF2ZSBubyBlcnJvcnMKICAgICAgICAgICAgICAgICAgICBhbGVydCgiZm9ybSBzdWJtaXR0ZWQhIik7CiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICAvLyBmb3JtIGhhdmUgZXJyb3JzCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfQogICAgfSwKfQo="},{"version":3,"sources":["FormValidationTypes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormValidationTypes.vue","sourceRoot":"src/views/forms/form-validation","sourcesContent":["<!-- =========================================================================================\n    File Name: FormValidationTypes.vue\n    Description: Validation types\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Check Out Our Attraction / Travel Agent Rates\" code-toggler>\n\n\n    <h4>Personal Particulars</h4>\n        <p>REGISTER Below TO BECOME TRIPCARTE TRAVEL PARTNER</p>\n        <div class=\"mt-5\">\n            <form>\n                <div class=\"vx-row\">\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'required'\" label=\"Applicant Name *\" name=\"required\" v-model=\"required\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('required')\">{{ errors.first('required') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'alpha'\" label=\"Phone *\" name=\"alpha\" v-model=\"alpha\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('alpha')\">{{ errors.first('alpha') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'email'\" label=\"Email Address *\" name=\"email\" v-model=\"email\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('email')\">{{ errors.first('email') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'alpha_dash'\" label=\"Confirm e-mail\" name=\"alpha_dash\" v-model=\"alpha_dash\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('email')\">{{ errors.first('email') }}</span>\n                    </div>\n                    <div class=\"vx-col w-1/2\">\n                    <p><h4>Company Details</h4></p>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'alpha_spaces'\" label=\"Company Name *\" name=\"alpha_spaces\" v-model=\"alpha_spaces\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('alpha_spaces')\">{{ errors.first('alpha_spaces') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'url:require_protocol'\" data-vv-as=\"field\" label=\"Company Website\" name=\"url\" v-model=\"url\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('url')\">{{ errors.first('url') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'min:3'\" label=\"Company Registration Number *\" name=\"min\" v-model=\"min\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('min')\">{{ errors.first('min') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'max:6'\" label=\"Company Registration Address 1*\" name=\"max\" v-model=\"max\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('max')\">{{ errors.first('max') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input v-validate=\"'max:6'\" label=\"Address 2*\" name=\"max\" v-model=\"max\" class=\"mt-5 w-full\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('max')\">{{ errors.first('max') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input type=\"password\" v-validate=\"'min:6|max:10'\" label=\"Password 1\" name=\"password\" v-model=\"password\" class=\"mt-5 w-full\" ref=\"password\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('password')\">{{ errors.first('password') }}</span>\n                    </div>\n\n                    <div class=\"vx-col w-1/2\">\n                        <vs-input type=\"password\" v-validate=\"'min:6|max:10|confirmed:password'\" label=\"Confirm Password\" name=\"confirm_password\" v-model=\"confirm_password\" class=\"mt-5 w-full\" data-vv-as=\"password\" />\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('confirm_password')\">{{ errors.first('confirm_password') }}</span>\n                    </div>\n\n\n\n\n                </div>\n                <vs-button type=\"filled\" @click.prevent=\"submitForm\" class=\"mt-5 block\">Submit</vs-button>\n            </form>\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;form&gt;\n    &lt;div class=&quot;vx-row&quot;&gt;\n\n      &lt;!-- required --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'required'&quot; label=&quot;This field is required&quot; name=&quot;required&quot; v-model=&quot;required&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('required')&quot;&gt;{{ \"\\{\\{ errors.first('required') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Only alphabetic characters --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'alpha'&quot; label=&quot;Only alphabetic characters&quot; name=&quot;alpha&quot; v-model=&quot;alpha&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('alpha')&quot;&gt;{{ \"\\{\\{ errors.first('alpha') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Only alphabetic characters, numbers, dashes or underscores --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'alpha_dash'&quot; label=&quot;Only alphabetic characters, numbers, dashes or underscores&quot; name=&quot;alpha_dash&quot; v-model=&quot;alpha_dash&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('alpha_dash')&quot;&gt;{{ \"\\{\\{ errors.first('alpha_dash') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- May contain alphabetic characters or numbers --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'alpha_num'&quot; label=&quot;May contain alphabetic characters or numbers&quot; name=&quot;alpha_num&quot; v-model=&quot;alpha_num&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('alpha_num')&quot;&gt;{{ \"\\{\\{ errors.first('alpha_num') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Must only consist of numbers --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'numeric'&quot; label=&quot;Must only consist of numbers&quot; name=&quot;numeric&quot; v-model=&quot;numeric&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('numeric')&quot;&gt;{{ \"\\{\\{ errors.first('numeric') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Only alphabetic characters or spaces --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'alpha_spaces'&quot; label=&quot;Only alphabetic characters or spaces&quot; name=&quot;alpha_spaces&quot; v-model=&quot;alpha_spaces&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('alpha_spaces')&quot;&gt;{{ \"\\{\\{ errors.first('alpha_spaces') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Must be a valid email --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'email'&quot; label=&quot;Must be a valid email&quot; name=&quot;email&quot; v-model=&quot;email&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('email')&quot;&gt;{{ \"\\{\\{ errors.first('email') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Must be a valid url --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'url:require_protocol'&quot; data-vv-as=&quot;field&quot; label=&quot;Must be a valid url&quot; name=&quot;url&quot; v-model=&quot;url&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('url')&quot;&gt;{{ \"\\{\\{ errors.first('url') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Length should not be less than the specified length : 3 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'min:3'&quot; label=&quot;Length should not be less than the specified length : 3&quot; name=&quot;min&quot; v-model=&quot;min&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('min')&quot;&gt;{{ \"\\{\\{ errors.first('min') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Length may not exceed the specified length : 6 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'max:6'&quot; label=&quot;Length may not exceed the specified length : 6&quot; name=&quot;max&quot; v-model=&quot;max&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('max')&quot;&gt;{{ \"\\{\\{ errors.first('max') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Password 1 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input type=&quot;password&quot; size=&quot;large&quot; v-validate=&quot;'min:6|max:10'&quot; label=&quot;Password 1&quot; name=&quot;password&quot; v-model=&quot;password&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('password')&quot;&gt;{{ \"\\{\\{ errors.first('password') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Confirm Password --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'min:6|max:10|confirmed:password'&quot; label=&quot;Confirm Password&quot; name=&quot;confirm_password&quot; v-model=&quot;confirm_password&quot; class=&quot;mt-5 w-full&quot; data-vv-as=&quot;password&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('confirm_password')&quot;&gt;{{ \"\\{\\{ errors.first('confirm_password') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Date Format: dd/MM/yyyy --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'date_format:dd/MM/yyyy'&quot; label=&quot;Date Format: dd/MM/yyyy&quot; name=&quot;date_format&quot; v-model=&quot;date_format&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('date_format')&quot;&gt;{{ \"\\{\\{ errors.first('date_format') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Numeric value between minimum value and a maximum value : 1 and 11 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'between:1,11'&quot; label=&quot;Numeric value between minimum value and a maximum value : 1 and 11&quot; name=&quot;between&quot; v-model=&quot;between&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('between')&quot;&gt;{{ \"\\{\\{ errors.first('between') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Valid credit card --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'credit_card'&quot; label=&quot;Valid credit card&quot; name=&quot;credit_card&quot; v-model=&quot;credit_card&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('credit_card')&quot;&gt;{{ \"\\{\\{ errors.first('credit_card') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Must be a valid date between the two dates specified : 10/09/2016 - 20/09/2016 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'date_format:dd/MM/yyyy|date_between:10/09/2016,20/09/2016'&quot; label=&quot;Must be a valid date between the two dates specified : 10/09/2016 - 20/09/2016&quot; name=&quot;date_between&quot; v-model=&quot;date_between&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('date_between')&quot;&gt;{{ \"\\{\\{ errors.first('date_between') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Must be numeric and have the specified number of digits : 3 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'digits:3'&quot; label=&quot;Must be numeric and have the specified number of digits : 3&quot; name=&quot;digits&quot; v-model=&quot;digits&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('digits')&quot;&gt;{{ \"\\{\\{ errors.first('digits') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Must have a value that is in the specified list : 1 or 3 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-select v-validate=&quot;'included:1,3'&quot; v-model=&quot;select1&quot; name=&quot;included&quot; label=&quot;Must have a value that is in the specified list : 1 or 3&quot; class=&quot;select-large mt-5 w-full&quot;&gt;\n          &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in options1&quot; /&gt;\n        &lt;/vs-select&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('included')&quot;&gt;{{ \"\\{\\{ errors.first('included') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Numeric value and must not be greater than the specified value : 100 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'max_value:100'&quot; label=&quot;Numeric value and must not be greater than the specified value : 100&quot; name=&quot;max_value&quot; v-model=&quot;max_value&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('max_value')&quot;&gt;{{ \"\\{\\{ errors.first('max_value') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Numeric value and must not be less than the specified value : 10 --&gt;\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'min_value:10'&quot; label=&quot;Numeric value and must not be less than the specified value : 10&quot; name=&quot;min_value&quot; v-model=&quot;min_value&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('min_value')&quot;&gt;{{ \"\\{\\{ errors.first('min_value') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Must match the specified regular expression : ^([0-9]+)$ - numbers only --&gt;\n      &lt;div class=&quot;vx-col w-full&quot;&gt;\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;{regex: '^([0-9]+)$' }&quot; label=&quot;Must match the specified regular expression : ^([0-9]+)$ - numbers only&quot; name=&quot;regex&quot; v-model=&quot;regex&quot; class=&quot;mt-5 w-full&quot; /&gt;\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('regex')&quot;&gt;{{ \"\\{\\{ errors.first('regex') \\}\\}\" }}&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;vs-button type=&quot;filled&quot; @click.prevent=&quot;submitForm&quot; class=&quot;mt-5 block&quot;&gt;Submit&lt;/vs-button&gt;\n  &lt;/form&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      required: &quot;&quot;,\n      alpha: &quot;&quot;,\n      alpha_dash: &quot;&quot;,\n      alpha_num: &quot;&quot;,\n      numeric: &quot;&quot;,\n      alpha_spaces: &quot;&quot;,\n      email: &quot;&quot;,\n      url: &quot;&quot;,\n      min: &quot;&quot;,\n      max: &quot;&quot;,\n      password: &quot;&quot;,\n      confirm_password: &quot;&quot;,\n      date_format: &quot;&quot;,\n      between: &quot;&quot;,\n      credit_card: &quot;&quot;,\n      date_between: &quot;&quot;,\n      digits: &quot;&quot;,\n      select1: &quot;&quot;,\n      options1: [\n        { text: &quot;One&quot;, value: 1 },\n        { text: &quot;Two&quot;, value: 2 },\n        { text: &quot;Three&quot;, value: 3 },\n        { text: &quot;Four&quot;, value: 4 },\n        { text: &quot;Five&quot;, value: 5 },\n      ],\n      max_value: &quot;&quot;,\n      min_value: &quot;&quot;,\n      regex: &quot;&quot;,\n    }\n  },\n  methods: {\n    submitForm() {\n      this.$validator.validateAll().then(result =&gt; {\n        if (result) {\n          // if form have no errors\n          alert(&quot;form submitted!&quot;);\n        } else {\n          // form have errors\n        }\n      })\n    }\n  },\n}\n&lt;/script&gt;\n        </template>\n    </vx-card>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            required: \"\",\n            alpha: \"\",\n            alpha_dash: \"\",\n            alpha_num: \"\",\n            numeric: \"\",\n            alpha_spaces: \"\",\n            email: \"\",\n            url: \"\",\n            min: \"\",\n            max: \"\",\n            password: \"\",\n            confirm_password: \"\",\n            date_format: \"\",\n            between: \"\",\n            credit_card: \"\",\n            date_between: \"\",\n            digits: \"\",\n            select1: \"\",\n            options1: [\n                {text: \"One\", value: 1},\n                {text: \"Two\", value: 2},\n                {text: \"Three\", value: 3},\n                {text: \"Four\", value: 4},\n                {text: \"Five\", value: 5},\n            ],\n            max_value: \"\",\n            min_value: \"\",\n            regex: \"\",\n        }\n    },\n    methods: {\n        submitForm() {\n            this.$validator.validateAll().then(result => {\n                if(result) {\n                    // if form have no errors\n                    alert(\"form submitted!\");\n                }else{\n                    // form have errors\n                }\n            })\n        }\n    },\n}\n</script>\n"]}]}