{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/apps/reviews/Todo.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/apps/reviews/Todo.vue","mtime":1634376405747},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/css-loader/index.js","mtime":1634370958974},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1634373319752},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/postcss-loader/src/index.js","mtime":1634273597147},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/sass-loader/dist/cjs.js","mtime":1634370962137},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkAvYXNzZXRzL3Njc3MvdnVleHkvYXBwcy90b2RvLnNjc3MiOwo="},{"version":3,"sources":["Todo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA","file":"Todo.vue","sourceRoot":"src/views/apps/reviews","sourcesContent":["<!-- =========================================================================================\n    File Name: Todo.vue\n    Description: Todo Application to keep you ahead of time\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n      Author: Justed@Aidy\n    Staging URL: http://tripcarte.gispatial.tech/api\n========================================================================================== -->\n\n\n<template>\n    <div id=\"todo-app\" class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\">\n      <vs-sidebar class=\"items-no-padding\" parent=\"#todo-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isSidebarActive\">\n          <todo-add-new />\n                    <VuePerfectScrollbar class=\"todo-scroll-area\" :settings=\"settings\" :key=\"$vs.rtl\">\n                    <todo-filters @closeSidebar=\"toggleTodoSidebar\"></todo-filters>\n                    </VuePerfectScrollbar>\n            </vs-sidebar>\n\n                <div :class=\"{'sidebar-spacer': clickNotClose}\" class=\"no-scroll-content border border-r-0 border-b-0 border-t-0 border-solid d-theme-border-grey-light no-scroll-content\">\n                    <div class=\"flex d-theme-dark-bg items-center border border-l-0 border-r-0 border-t-0 border-solid d-theme-border-grey-light\">\n\n                        <!-- TOGGLE SIDEBAR BUTTON -->\n                        <feather-icon class=\"md:inline-flex lg:hidden ml-4 mr-4 cursor-pointer\" icon=\"MenuIcon\" @click.stop=\"toggleTodoSidebar(true)\" />\n\n                        <!-- SEARCH BAR -->\n                        <vs-input icon-no-border size=\"large\" icon-pack=\"feather\" icon=\"icon-search\" placeholder=\"Search..\" v-model=\"searchQuery\" class=\"vs-input-no-border vs-input-no-shdow-focus w-full\" />\n                    </div>\n\n                    <!--\n                    <VuePerfectScrollbar class=\"todo-content-scroll-area\" :settings=\"settings\" ref=\"taskListPS\" :key=\"$vs.rtl\">\n                        <transition-group class=\"todo-list\" name=\"list-enter-up\" tag=\"ul\" appear>\n                            <li class=\"cursor-pointer todo_todo-item\" v-for=\"(task, index) in taskList\" :key=\"String(currFilter) + String(task.id)\" :style=\"[{transitionDelay: (index * 0.1) + 's'}]\">\n                                <todo-task :taskId=\"task.id\" @showDisplayPrompt=\"showDisplayPrompt($event)\" :key=\"String(task.title) + String(task.desc)\" />\n\n                                  Note: Remove \"todo-task\" component's key just concat lastUpdated field in li key list.\n                                  e.g. <li class=\"...\" v-for=\"...\" :key=\"String(currFilter) + String(task.id) + String(task.lastUpdated)\" .. >\n\n                            </li>\n                        </transition-group>\n                    </VuePerfectScrollbar>\n                    -->\n\n                    <VuePerfectScrollbar class=\"todo-content-scroll-area\" :settings=\"settings\" ref=\"taskListPS\" :key=\"$vs.rtl\">\n                        <transition-group class=\"todo-list\" name=\"list-enter-up\" tag=\"ul\" appear>\n                            <li class=\"cursor-pointer todo_todo-item\"  v-for=\"(review, key) in reviews\" :key=\"key\"  :style=\"[{transitionDelay: (key * 0.1) + 's'}]\">\n                                <todo-task :review=\"review\" @showDisplayPrompt=\"showDisplayPrompt($event)\" :key=\"String(review.product_id) + String(review.rating)\" />\n\n                            </li>\n                        </transition-group>\n                    </VuePerfectScrollbar>\n                </div>\n\n                <!-- EDIT TODO DIALOG\n                <todo-edit :displayPrompt=\"displayPrompt\" :taskId=\"taskIdToEdit\" @hideDisplayPrompt=\"hidePrompt\" v-if=\"displayPrompt\"></todo-edit>\n                -->\n    </div>\n</template>\n\n<script>\nimport moduleTodo          from '@/store/reviews/moduleTodo.js'\nimport TodoAddNew          from \"./TodoAddNew.vue\"\nimport TodoTask            from \"./TodoTask.vue\"\nimport TodoFilters         from \"./TodoFilters.vue\"\nimport TodoEdit            from \"./TodoEdit.vue\"\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport axios from \"../../../http/axios/index.js\"\nexport default {\n  data() {\n\n    return {\n      //post: null,\n      currFilter           : \"\",\n      clickNotClose        : true,\n      displayPrompt        : false,\n      taskIdToEdit         : 0,\n      isSidebarActive      : true,\n      settings : {\n        maxScrollbarLength : 60,\n        wheelSpeed         : 0.30,\n      },\n    }\n\n  },\n  watch: {\n\n    todoFilter() {\n      this.$refs.taskListPS.$el.scrollTop = 0\n      this.toggleTodoSidebar()\n      // Fetch Tasks\n      let filter = this.$route.params.filter\n      this.$store.dispatch(\"todo/fetchTasks\", { filter: filter })\n      this.$store.commit(\"todo/UPDATE_TODO_FILTER\", filter)\n    },\n\n    windowWidth() {\n      this.setSidebarWidth()\n    },\n  },\n  computed: {\n    reviews()     { return this.$store.state.todo.reviews                     },\n    todo()        { return this.$store.state.todo.todoArray              },\n    todoFilter()  { return this.$route.params.filter                     },\n    taskList()    { return this.$store.getters[\"todo/queriedTasks\"]      },\n    searchQuery:  {\n      get()       { return this.$store.state.todo.todoSearchQuery        },\n      set(val)    { this.$store.dispatch('todo/setTodoSearchQuery', val) }\n    },\n    windowWidth() { return this.$store.state.windowWidth }\n\n  },\n\n  methods: {\n    showDisplayPrompt(itemId) {\n      this.taskIdToEdit  = itemId\n      this.displayPrompt = true\n    },\n    hidePrompt() {\n      this.displayPrompt = false\n    },\n    setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isSidebarActive = this.clickNotClose = false\n      } else {\n        this.isSidebarActive = this.clickNotClose = true\n      }\n    },\n    toggleTodoSidebar(value = false) {\n      if (!value && this.clickNotClose) return\n      this.isSidebarActive = value\n    },\n  },\n\n  components: {\n    TodoTask,\n    TodoFilters,\n    TodoEdit,\n    VuePerfectScrollbar\n  },\n\n  created() {\n    this.$store.registerModule('todo', moduleTodo)\n\n    this.setSidebarWidth()\n\n    let filter = this.$route.params.filter\n    // Fetch Tasks\n    this.$store.dispatch(\"todo/fetchTasks\", { filter: filter })\n    this.$store.commit(\"todo/UPDATE_TODO_FILTER\", filter)\n    // Fetch Tags\n    this.$store.dispatch(\"todo/fetchTags\")\n\n\n  },\n\n  beforeUpdate() {\n    this.currFilter = this.$route.params.filter\n  },\n  beforeDestroy: function() {\n    this.$store.unregisterModule('todo')\n  },\n\n  mounted() {\n    this.$store.dispatch(\"todo/getReviews\")\n    this.$store.dispatch(\"todo/setTodoSearchQuery\", \"\")\n\n  }\n}\n</script>\n\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/apps/todo.scss\";\n</style>\n"]}]}