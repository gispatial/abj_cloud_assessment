{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/charts-and-maps/charts/chartjs/ChartjsBubbleChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/charts-and-maps/charts/chartjs/ChartjsBubbleChart.vue","mtime":1634797132114},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDaGFydGpzQ29tcG9uZW50QnViYmxlQ2hhcnQgZnJvbSAiLi9jaGFydHMtY29tcG9uZW50cy9DaGFydGpzQ29tcG9uZW50QnViYmxlQ2hhcnQudnVlIgpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgIGxhYmVsczogIkFmcmljYSIsCiAgICAgICAgICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgICAgICAgICAgICBsYWJlbDogWyJDaGluYSJdLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoMjU1LDIyMSw1MCwwLjIpIiwKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMjU1LDIyMSw1MCwxKSIsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogW3sKICAgICAgICAgICAgICAgICAgICAgICAgeDogMjEyNjkwMTcsCiAgICAgICAgICAgICAgICAgICAgICAgIHk6IDUuMjQ1LAogICAgICAgICAgICAgICAgICAgICAgICByOiAxNQogICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IFsiRGVubWFyayJdLAogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogInJnYmEoNjAsMTg2LDE1OSwwLjIpIiwKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoNjAsMTg2LDE1OSwxKSIsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogW3sKICAgICAgICAgICAgICAgICAgICAgICAgeDogMjU4NzAyLAogICAgICAgICAgICAgICAgICAgICAgICB5OiA3LjUyNiwKICAgICAgICAgICAgICAgICAgICAgICAgcjogMTAKICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgIGxhYmVsOiBbIkNoaW5lc2V5Il0sCiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAicmdiYSgwLDAsMCwwLjIpIiwKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogIiMwMDAiLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgIHg6IDM5NzkwODMsCiAgICAgICAgICAgICAgICAgICAgICAgIHk6IDYuOTk0LAogICAgICAgICAgICAgICAgICAgICAgICByOiAxNQogICAgICAgICAgICAgICAgICAgIH1dCiAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IFsiSmFwYW4iXSwKICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICJyZ2JhKDE5Myw0NiwxMiwwLjIpIiwKICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogInJnYmEoMTkzLDQ2LDEyLDEpIiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBbewogICAgICAgICAgICAgICAgICAgICAgICB4OiA0OTMxODc3LAogICAgICAgICAgICAgICAgICAgICAgICB5OiA1LjkyMSwKICAgICAgICAgICAgICAgICAgICAgICAgcjogMTUKICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgb3B0aW9uczogewogICAgICAgICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgICAgICAgICAgIHRleHQ6ICdQcmVkaWN0ZWQgd29ybGQgcG9wdWxhdGlvbiAobWlsbGlvbnMpIGluIDIwNTAnCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgc2NhbGVzOiB7CiAgICAgICAgICAgICAgICAgICAgeUF4ZXM6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlTGFiZWw6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbFN0cmluZzogIkhhcHBpbmVzcyIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH1dLAogICAgICAgICAgICAgICAgICAgIHhBeGVzOiBbewogICAgICAgICAgICAgICAgICAgICAgICBzY2FsZUxhYmVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWxTdHJpbmc6ICJHRFAgKFBQUCkiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBDaGFydGpzQ29tcG9uZW50QnViYmxlQ2hhcnQKICAgIH0KfQo="},{"version":3,"sources":["ChartjsBubbleChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChartjsBubbleChart.vue","sourceRoot":"src/views/charts-and-maps/charts/chartjs","sourcesContent":["<!-- =========================================================================================\n    File Name: ChartBubbleChart.vue\n    Description: Create bubble chart\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Bubble Chart\" class=\"mb-base\" code-toggler>\n\n        <div class=\"mt-5\">\n            <chartjs-component-bubble-chart :height=250 :data=\"data\" :options=\"options\"></chartjs-component-bubble-chart>\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;script&gt;\nimport { Bubble } from 'vue-chartjs'\n\nexport default {\n  extends: Line,\n  data() {\n    return {\n      data: {\n        labels: &quot;Africa&quot;,\n        datasets: [{\n          label: [&quot;China&quot;],\n          backgroundColor: &quot;rgba(255,221,50,0.2)&quot;,\n          borderColor: &quot;rgba(255,221,50,1)&quot;,\n          data: [{\n            x: 21269017,\n            y: 5.245,\n            r: 15\n          }]\n        }, {\n          label: [&quot;Denmark&quot;],\n          backgroundColor: &quot;rgba(60,186,159,0.2)&quot;,\n          borderColor: &quot;rgba(60,186,159,1)&quot;,\n          data: [{\n            x: 258702,\n            y: 7.526,\n            r: 10\n          }]\n        }, {\n          label: [&quot;Chinesey&quot;],\n          backgroundColor: &quot;rgba(0,0,0,0.2)&quot;,\n          borderColor: &quot;#000&quot;,\n          data: [{\n            x: 3979083,\n            y: 6.994,\n            r: 15\n          }]\n        }, {\n          label: [&quot;Japan&quot;],\n          backgroundColor: &quot;rgba(193,46,12,0.2)&quot;,\n          borderColor: &quot;rgba(193,46,12,1)&quot;,\n          data: [{\n            x: 4931877,\n            y: 5.921,\n            r: 15\n          }]\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Predicted world population (millions) in 2050'\n        },\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: &quot;Happiness&quot;\n            }\n          }],\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: &quot;GDP (PPP)&quot;\n            }\n          }]\n        }\n      }\n    }\n  }\n  mounted () {\n    this.renderChart(this.data, this.options)\n  }\n}\n&lt;/script&gt;\n        </template>\n    </vx-card>\n</template>\n\n<script>\nimport ChartjsComponentBubbleChart from \"./charts-components/ChartjsComponentBubbleChart.vue\"\nexport default {\n    data() {\n        return {\n            data: {\n                labels: \"Africa\",\n                datasets: [{\n                    label: [\"China\"],\n                    backgroundColor: \"rgba(255,221,50,0.2)\",\n                    borderColor: \"rgba(255,221,50,1)\",\n                    data: [{\n                        x: 21269017,\n                        y: 5.245,\n                        r: 15\n                    }]\n                }, {\n                    label: [\"Denmark\"],\n                    backgroundColor: \"rgba(60,186,159,0.2)\",\n                    borderColor: \"rgba(60,186,159,1)\",\n                    data: [{\n                        x: 258702,\n                        y: 7.526,\n                        r: 10\n                    }]\n                }, {\n                    label: [\"Chinesey\"],\n                    backgroundColor: \"rgba(0,0,0,0.2)\",\n                    borderColor: \"#000\",\n                    data: [{\n                        x: 3979083,\n                        y: 6.994,\n                        r: 15\n                    }]\n                }, {\n                    label: [\"Japan\"],\n                    backgroundColor: \"rgba(193,46,12,0.2)\",\n                    borderColor: \"rgba(193,46,12,1)\",\n                    data: [{\n                        x: 4931877,\n                        y: 5.921,\n                        r: 15\n                    }]\n                }]\n            },\n            options: {\n                title: {\n                    display: true,\n                    text: 'Predicted world population (millions) in 2050'\n                },\n                scales: {\n                    yAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: \"Happiness\"\n                        }\n                    }],\n                    xAxes: [{\n                        scaleLabel: {\n                            display: true,\n                            labelString: \"GDP (PPP)\"\n                        }\n                    }]\n                }\n            }\n        }\n    },\n    components: {\n        ChartjsComponentBubbleChart\n    }\n}\n</script>\n"]}]}