{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/components/vx-auto-suggest/VxAutoSuggest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/components/vx-auto-suggest/VxAutoSuggest.vue","mtime":1634797132078},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0ewogIHByb3BzOiB7CiAgICBwbGFjZWhvbGRlcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdTZWFyY2guLicKICAgIH0sCiAgICBkYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgaW5pdGFsRGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IG5ldyBPYmplY3QKICAgIH0sCiAgICBpbnB1dENsYXNzc2VzOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE9iamVjdCwgQXJyYXldLAogICAgfSwKICAgIGF1dG9Gb2N1czogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCiAgICBzaG93UGlubmVkOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgc2VhcmNoTGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiA0CiAgICB9LAogICAgaGlkZUdyb3VwVGl0bGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWFyY2hRdWVyeTogJycsCiAgICAgIGZpbHRlcmVkRGF0YToge30sCiAgICAgIGN1cnJlbnRTZWxlY3RlZDogLTEsCiAgICAgIGlucHV0Rm9jdXNlZDogZmFsc2UsCiAgICAgIGluc2lkZVN1Z2dlc3Rpb25zOiBmYWxzZSwKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAvLyBVUERBVEUgU1VHR0VTVElPTlMgTElTVAogICAgc2VhcmNoUXVlcnkodmFsKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsKQoKICAgICAgaWYodmFsID09ICcnKSB7CiAgICAgICAgdGhpcy5pbnB1dEluaXQoKQogICAgICB9ZWxzZSB7CiAgICAgICAgbGV0IHF1ZXJpZWRfZGF0YSA9IHt9CiAgICAgICAgY29uc3QgZGF0YV9ncnBzID0gT2JqZWN0LmtleXModGhpcy5kYXRhKQoKICAgICAgICBkYXRhX2dycHMuZm9yRWFjaCgoZ3JwLCBpKSA9PiB7CiAgICAgICAgICBxdWVyaWVkX2RhdGFbZGF0YV9ncnBzW2ldXSA9IHRoaXMuZmlsdGVyX2dycCh0aGlzLmRhdGFbZ3JwXSkKICAgICAgICB9KQoKICAgICAgICAvLyBDaGVjayBpZiBhbnkgb2YgZ3JvdXAgaGFzIGF0IGxlYXN0IG9uZSBxdWVyaWVkIGl0ZW0KICAgICAgICBpZighT2JqZWN0LnZhbHVlcyhxdWVyaWVkX2RhdGEpLnNvbWUob2JqID0+IG9iai5sZW5ndGgpKSB7CiAgICAgICAgICB0aGlzLmN1cnJlbnRTZWxlY3RlZCA9IC0xCiAgICAgICAgfQoKICAgICAgICB0aGlzLmZpbHRlcmVkRGF0YSA9IHF1ZXJpZWRfZGF0YQogICAgICB9CiAgICB9LAogICAgYXV0b0ZvY3VzKHZhbCkgewogICAgICBpZih2YWwpIHRoaXMuZm9jdXNJbnB1dCgpCiAgICAgIGVsc2UgdGhpcy5zZWFyY2hRdWVyeSA9ICcnCiAgICB9LAogICAgZmlsdGVyZWREYXRhKHZhbCkgewogICAgICAvLyBBdXRvIFNlbGVjdCBmaXJzdCBpdGVtIGlmIGl0J3Mgbm90IGl0ZW0tNDA0CiAgICAgIGxldCBncnBfaW5kZXggPSBudWxsCgogICAgICBmb3IobGV0W2luZGV4LCBncnBfc3VnZ2VzdGlvbnNdIG9mIE9iamVjdC52YWx1ZXModmFsKS5lbnRyaWVzKCkpIHsKICAgICAgICBpZihncnBfc3VnZ2VzdGlvbnMubGVuZ3RoKSB7CiAgICAgICAgICBncnBfaW5kZXggPSBpbmRleAogICAgICAgICAgYnJlYWsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmKGdycF9pbmRleCAhPSBudWxsKSB0aGlzLmN1cnJlbnRTZWxlY3RlZCA9IGdycF9pbmRleCArICIuMCIKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGVzY1ByZXNzZWQoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlU2VhcmNoYmFyJykKICAgICAgdGhpcy5zZWFyY2hRdWVyeSA9ICcnCiAgICB9LAogICAgZmlsdGVyX2dycChncnApIHsKICAgICAgbGV0IGV4YWN0RWxlID0gZ3JwLmRhdGEuZmlsdGVyKChpdGVtKSA9PiB7CiAgICAgICAgcmV0dXJuIGl0ZW1bZ3JwLmtleV0udG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKHRoaXMuc2VhcmNoUXVlcnkudG9Mb3dlckNhc2UoKSkKICAgICAgfSkKICAgICAgbGV0IGNvbnRhaW5FbGUgPSBncnAuZGF0YS5maWx0ZXIoKGl0ZW0pID0+IHsKICAgICAgICByZXR1cm4gIWl0ZW1bZ3JwLmtleV0udG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKHRoaXMuc2VhcmNoUXVlcnkudG9Mb3dlckNhc2UoKSkgJiYgaXRlbVtncnAua2V5XS50b0xvd2VyQ2FzZSgpLmluZGV4T2YodGhpcy5zZWFyY2hRdWVyeS50b0xvd2VyQ2FzZSgpKSA+IC0xCiAgICAgIH0pCiAgICAgIHJldHVybiBleGFjdEVsZS5jb25jYXQoY29udGFpbkVsZSkuc2xpY2UoMCx0aGlzLnNlYXJjaExpbWl0KQogICAgfSwKICAgIGlucHV0SW5pdCgpIHsKICAgICAgaWYoT2JqZWN0LmVudHJpZXModGhpcy5pbml0YWxEYXRhKS5sZW5ndGggPT09IDAgJiYgdGhpcy5pbml0YWxEYXRhLmNvbnN0cnVjdG9yID09PSBPYmplY3QpIHsKICAgICAgICB0aGlzLmZpbHRlcmVkRGF0YSA9IHt9CiAgICAgIH1lbHNlIHsKICAgICAgICB0aGlzLmZpbHRlcmVkRGF0YSA9IHRoaXMuaW5pdGFsRGF0YQogICAgICB9CiAgICB9LAogICAgdXBkYXRlSW5wdXRGb2N1cyh2YWwgPSB0cnVlKSB7CiAgICAgIGlmKHZhbCkgewogICAgICAgIGlmKHRoaXMuc2VhcmNoUXVlcnkgPT0gJycpIHRoaXMuaW5wdXRJbml0KCkKICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgIHRoaXMuaW5wdXRGb2N1c2VkID0gdHJ1ZQogICAgICAgIH0sIDEwMCkKICAgICAgfQogICAgICBlbHNlIHsKICAgICAgICBpZih0aGlzLmluc2lkZVN1Z2dlc3Rpb25zKSByZXR1cm4KICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgIHRoaXMuaW5wdXRGb2N1c2VkID0gZmFsc2UKICAgICAgICB9LCAxMDApCiAgICAgICAgdGhpcy5lc2NQcmVzc2VkKCkKICAgICAgfQogICAgfSwKICAgIHN1Z2dlc3Rpb25TZWxlY3RlZCgpIHsKICAgICAgaWYodGhpcy5jdXJyZW50U2VsZWN0ZWQgPiAtMSkgewoKICAgICAgICBjb25zdCBbZ3JwX2luZGV4LCBpdGVtX2luZGV4XSA9IHRoaXMuY3VycmVudFNlbGVjdGVkLnNwbGl0KCIuIikKCiAgICAgICAgY29uc3QgZ3JwX29mX3NlbGVjdGVkX2l0ZW0gPSBPYmplY3Qua2V5cyh0aGlzLmRhdGEpW2dycF9pbmRleF0KICAgICAgICBjb25zdCBzZWxlY3RlZF9pdGVtID0gdGhpcy5maWx0ZXJlZERhdGFbZ3JwX29mX3NlbGVjdGVkX2l0ZW1dW2l0ZW1faW5kZXhdCgogICAgICAgIHRoaXMuJGVtaXQoJ3NlbGVjdGVkJywge1tncnBfb2Zfc2VsZWN0ZWRfaXRlbV06IHNlbGVjdGVkX2l0ZW19KQoKICAgICAgICB0aGlzLnNlYXJjaFF1ZXJ5ID0gJycKICAgICAgfQogICAgfSwKICAgIGluY3JlYXNlSW5kZXgodmFsID0gdHJ1ZSkgewogICAgICBjb25zdCBbZ3JwX2ksIGl0ZW1faV0gPSB0aGlzLmN1cnJlbnRTZWxlY3RlZC5zcGxpdCgiLiIpCgogICAgICBjb25zdCBncnBfYXJyID0gT2JqZWN0LmVudHJpZXModGhpcy5maWx0ZXJlZERhdGEpCiAgICAgIGNvbnN0IGFjdGl2ZV9ncnBfdG90YWxfaXRlbXMgPSBncnBfYXJyW2dycF9pXVsxXS5sZW5ndGgKCgogICAgICAgIGlmKHZhbCkgewogICAgICAgICAgLy8gSWYgYWN0aXZlIGl0ZW0gaXMgbm90IG9mIGxhc3QgaXRlbSBpbiBncnAKICAgICAgICAgIGlmKGFjdGl2ZV9ncnBfdG90YWxfaXRlbXMtMSA+IGl0ZW1faSkgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRTZWxlY3RlZCA9IGdycF9pICsgIi4iICsgIChOdW1iZXIoaXRlbV9pKSsxKQoKICAgICAgICAgIC8vIElmIGFjdGl2ZSBpdGVtIGdycCBpcyBub3QgbGFzdCBpbiBncnAgbGlzdAogICAgICAgICAgfWVsc2UgaWYoZ3JwX2kgPCBncnBfYXJyLmxlbmd0aC0xKSB7CiAgICAgICAgICAgIHRoaXMuY3VycmVudFNlbGVjdGVkID0gTnVtYmVyKGdycF9pKSsxICsgIi4wIgogICAgICAgICAgfQogICAgICAgIH1lbHNlIHsKICAgICAgICAgIC8vIElmIGFjdGl2ZSBpdGVtIGlzIG5vdCBvZiBmaXJzdCBpdGVtIGluIGdycAogICAgICAgICAgaWYoTnVtYmVyKGl0ZW1faSkpIHsKICAgICAgICAgICAgdGhpcy5jdXJyZW50U2VsZWN0ZWQgPSBncnBfaSArICIuIiArICAoTnVtYmVyKGl0ZW1faSktMSkKCiAgICAgICAgICAvLyBJZiBhY3RpdmUgaXRlbSBncnAgIGlzIG5vdCBmaXJzdCBpbiBncnAgbGlzdAogICAgICAgICAgfWVsc2UgaWYoTnVtYmVyKGdycF9pKSkgewogICAgICAgICAgICB0aGlzLmN1cnJlbnRTZWxlY3RlZCA9IChOdW1iZXIoZ3JwX2kpLTEpICsgIi4iICsgKGdycF9hcnJbZ3JwX2ktMV1bMV0ubGVuZ3RoLTEpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwKICAgIGZvY3VzSW5wdXQoKSB7CiAgICAgIHRoaXMuJHJlZnMuaW5wdXQuJGVsLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0JykuZm9jdXMoKQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIGlmKHRoaXMuYXV0b0ZvY3VzKSB0aGlzLmZvY3VzSW5wdXQoKQogIH0KfQo="},{"version":3,"sources":["VxAutoSuggest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"VxAutoSuggest.vue","sourceRoot":"src/components/vx-auto-suggest","sourcesContent":["<template>\n  <div class=\"vx-auto-suggest\">\n    <div class=\"flex items-center relative\">\n\n      <!-- Input -->\n      <vs-input\n        ref=\"input\"\n        :placeholder=\"placeholder\"\n        :class=\"inputClassses\"\n        class=\"z-50\"\n        icon-pack='feather'\n        icon='icon-search'\n        icon-no-border\n        v-model=\"searchQuery\"\n        @keyup.esc=\"escPressed\"\n        @keyup.up=\"increaseIndex(false)\"\n        @keyup.down=\"increaseIndex\"\n        @keyup.enter=\"suggestionSelected\"\n        @focus=\"updateInputFocus\"\n        @blur=\"updateInputFocus(false)\" />\n    </div>\n\n    <!-- Group List -->\n    <ul\n      ref=\"scrollContainer\"\n      :class=\"{'hidden': !inputFocused}\"\n      class=\"auto-suggest-suggestions-list z-50 rounded-lg mt-2 shadow-lg overflow-x-hidden\"\n      @mouseenter=\"insideSuggestions = true\"\n      @mouseleave=\"insideSuggestions = false\"\n      @focus=\"updateInputFocus\"\n      @blur=\"updateInputFocus(false)\"\n      tabindex=\"-1\">\n\n      <li\n        ref=\"grp_list\"\n        v-for=\"(suggestion_list, grp_name, grp_index) in filteredData\"\n        :key=\"grp_index\"\n        class=\"auto-suggest__suggestion-group-container\">\n\n          <!-- Group Header -->\n          <p class=\"auto-suggest__suggestion-group-title pt-3 pb-1 px-4\" v-if=\"!hideGroupTitle\">\n            <slot name=\"group\" :group_name=\"grp_name\"></slot>\n          </p>\n\n          <!-- Suggestion List of each group -->\n          <ul>\n            <li\n              v-for=\"(suggestion, index) in suggestion_list\"\n              :key=\"index\"\n              class=\"auto-suggest__suggestion-group__suggestion py-3 px-4 cursor-pointer\"\n              :class=\"{'vx-auto-suggest__current-selected': currentSelected == `${grp_index}.${index}`}\"\n              @mouseenter=\"currentSelected = `${grp_index}.${index}`\"\n              @click=\"suggestionSelected\">\n              <slot :name=\"grp_name\" :suggestion=\"suggestion\"></slot>\n            </li>\n\n            <li class=\"auto-suggest__suggestion-group__suggestion py-3 px-4 no-results\" v-if=\"!suggestion_list.length\">\n              <slot name=\"noResult\" :group_name=\"grp_name\">\n                  <p>No Results Found.</p>\n              </slot>\n            </li>\n          </ul>\n      </li>\n    </ul>\n\n  </div>\n</template>\n\n<script>\nexport default{\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search..'\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n    initalData: {\n      type: Object,\n      default: () => new Object\n    },\n    inputClassses: {\n      type: [String, Object, Array],\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false,\n    },\n    showPinned: {\n      type: Boolean,\n      default: false\n    },\n    searchLimit: {\n      type: Number,\n      default: 4\n    },\n    hideGroupTitle: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      searchQuery: '',\n      filteredData: {},\n      currentSelected: -1,\n      inputFocused: false,\n      insideSuggestions: false,\n    }\n  },\n  watch: {\n    // UPDATE SUGGESTIONS LIST\n    searchQuery(val) {\n      this.$emit('input', val)\n\n      if(val == '') {\n        this.inputInit()\n      }else {\n        let queried_data = {}\n        const data_grps = Object.keys(this.data)\n\n        data_grps.forEach((grp, i) => {\n          queried_data[data_grps[i]] = this.filter_grp(this.data[grp])\n        })\n\n        // Check if any of group has at least one queried item\n        if(!Object.values(queried_data).some(obj => obj.length)) {\n          this.currentSelected = -1\n        }\n\n        this.filteredData = queried_data\n      }\n    },\n    autoFocus(val) {\n      if(val) this.focusInput()\n      else this.searchQuery = ''\n    },\n    filteredData(val) {\n      // Auto Select first item if it's not item-404\n      let grp_index = null\n\n      for(let[index, grp_suggestions] of Object.values(val).entries()) {\n        if(grp_suggestions.length) {\n          grp_index = index\n          break\n        }\n      }\n\n      if(grp_index != null) this.currentSelected = grp_index + \".0\"\n    }\n  },\n  methods: {\n    escPressed() {\n      this.$emit('closeSearchbar')\n      this.searchQuery = ''\n    },\n    filter_grp(grp) {\n      let exactEle = grp.data.filter((item) => {\n        return item[grp.key].toLowerCase().startsWith(this.searchQuery.toLowerCase())\n      })\n      let containEle = grp.data.filter((item) => {\n        return !item[grp.key].toLowerCase().startsWith(this.searchQuery.toLowerCase()) && item[grp.key].toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1\n      })\n      return exactEle.concat(containEle).slice(0,this.searchLimit)\n    },\n    inputInit() {\n      if(Object.entries(this.initalData).length === 0 && this.initalData.constructor === Object) {\n        this.filteredData = {}\n      }else {\n        this.filteredData = this.initalData\n      }\n    },\n    updateInputFocus(val = true) {\n      if(val) {\n        if(this.searchQuery == '') this.inputInit()\n        setTimeout(() => {\n          this.inputFocused = true\n        }, 100)\n      }\n      else {\n        if(this.insideSuggestions) return\n        setTimeout(() => {\n          this.inputFocused = false\n        }, 100)\n        this.escPressed()\n      }\n    },\n    suggestionSelected() {\n      if(this.currentSelected > -1) {\n\n        const [grp_index, item_index] = this.currentSelected.split(\".\")\n\n        const grp_of_selected_item = Object.keys(this.data)[grp_index]\n        const selected_item = this.filteredData[grp_of_selected_item][item_index]\n\n        this.$emit('selected', {[grp_of_selected_item]: selected_item})\n\n        this.searchQuery = ''\n      }\n    },\n    increaseIndex(val = true) {\n      const [grp_i, item_i] = this.currentSelected.split(\".\")\n\n      const grp_arr = Object.entries(this.filteredData)\n      const active_grp_total_items = grp_arr[grp_i][1].length\n\n\n        if(val) {\n          // If active item is not of last item in grp\n          if(active_grp_total_items-1 > item_i) {\n            this.currentSelected = grp_i + \".\" +  (Number(item_i)+1)\n\n          // If active item grp is not last in grp list\n          }else if(grp_i < grp_arr.length-1) {\n            this.currentSelected = Number(grp_i)+1 + \".0\"\n          }\n        }else {\n          // If active item is not of first item in grp\n          if(Number(item_i)) {\n            this.currentSelected = grp_i + \".\" +  (Number(item_i)-1)\n\n          // If active item grp  is not first in grp list\n          }else if(Number(grp_i)) {\n            this.currentSelected = (Number(grp_i)-1) + \".\" + (grp_arr[grp_i-1][1].length-1)\n          }\n        }\n    },\n    focusInput() {\n      this.$refs.input.$el.querySelector('input').focus()\n    }\n  },\n  mounted() {\n    if(this.autoFocus) this.focusInput()\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/components/vxAutoSuggest.scss\";\n</style>\n"]}]}