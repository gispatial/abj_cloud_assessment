{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/charts-and-maps/charts/chartjs/ChartjsPieChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/charts-and-maps/charts/chartjs/ChartjsPieChart.vue","mtime":1634376356557},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENoYXJ0anNDb21wb25lbnRQaWVDaGFydCBmcm9tICIuL2NoYXJ0cy1jb21wb25lbnRzL0NoYXJ0anNDb21wb25lbnRQaWVDaGFydC52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IHsKICAgICAgICBsYWJlbHM6IFsiQWZyaWNhIiwgIkFzaWEiLCAiRXVyb3BlIiwgIkxhdGluIEFtZXJpY2EiLCAiTm9ydGggQW1lcmljYSJdLAogICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgbGFiZWw6ICJQb3B1bGF0aW9uIChtaWxsaW9ucykiLAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbIiM3MzY3RjAiLCAiIzI4Qzc2RiIsICIjRUE1NDU1IiwgIiNGRjlGNDMiLCAiIzFFMUUxRSJdLAogICAgICAgICAgZGF0YTogWzI0NzgsIDUyNjcsIDczNCwgNzg0LCA0MzNdCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgb3B0aW9uczogewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgdGV4dDogJ1ByZWRpY3RlZCB3b3JsZCBwb3B1bGF0aW9uIChtaWxsaW9ucykgaW4gMjA1MCcKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBDaGFydGpzQ29tcG9uZW50UGllQ2hhcnQ6IENoYXJ0anNDb21wb25lbnRQaWVDaGFydAogIH0KfTs="},{"version":3,"sources":["ChartjsPieChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,OAAA,wBAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AACA,QAAA,MAAA,EAAA,CAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,eAAA,EAAA,eAAA,CADA;AAEA,QAAA,QAAA,EAAA,CAAA;AACA,UAAA,KAAA,EAAA,uBADA;AAEA,UAAA,eAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CAFA;AAGA,UAAA,IAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA;AAHA,SAAA;AAFA,OADA;AASA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,OAAA,EAAA,IADA;AAEA,UAAA,IAAA,EAAA;AAFA;AADA;AATA,KAAA;AAgBA,GAlBA;AAmBA,EAAA,UAAA,EAAA;AACA,IAAA,wBAAA,EAAA;AADA;AAnBA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: ChartPieChart.vue\n    Description: Create pie chart\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Pie Chart\" class=\"mb-base\" code-toggler>\n\n        <div class=\"mt-5\">\n            <chartjs-component-pie-chart :height=250 :data=\"data\" :options=\"options\"></chartjs-component-pie-chart>\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;script&gt;\nimport { Pie } from 'vue-chartjs'\n\nexport default {\n  extends: Line,\n  data() {\n    return {\n      data: {\n        labels: [&quot;Africa&quot;, &quot;Asia&quot;, &quot;Europe&quot;, &quot;Latin America&quot;, &quot;North America&quot;],\n        datasets: [{\n          label: &quot;Population (millions)&quot;,\n          backgroundColor: [&quot;#3e95cd&quot;, &quot;#8e5ea2&quot;, &quot;#3cba9f&quot;, &quot;#e8c3b9&quot;, &quot;#c45850&quot;],\n          data: [2478, 5267, 734, 784, 433]\n        }]\n      },\n      options: {\n        title: {\n          display: true,\n          text: 'Predicted world population (millions) in 2050'\n        }\n      }\n    }\n  }\n  mounted () {\n    this.renderChart(this.data, this.options)\n  }\n}\n&lt;/script&gt;\n        </template>\n    </vx-card>\n</template>\n\n<script>\nimport ChartjsComponentPieChart from \"./charts-components/ChartjsComponentPieChart.vue\"\nexport default {\n    data() {\n        return {\n            data: {\n                labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n                datasets: [{\n                    label: \"Population (millions)\",\n                    backgroundColor: [\"#7367F0\", \"#28C76F\", \"#EA5455\", \"#FF9F43\", \"#1E1E1E\"],\n                    data: [2478, 5267, 734, 784, 433]\n                }]\n            },\n            options: {\n                title: {\n                    display: true,\n                    text: 'Predicted world population (millions) in 2050'\n                }\n            }\n        }\n    },\n    components: {\n        ChartjsComponentPieChart\n    }\n}\n</script>\n"],"sourceRoot":"src/views/charts-and-maps/charts/chartjs"}]}