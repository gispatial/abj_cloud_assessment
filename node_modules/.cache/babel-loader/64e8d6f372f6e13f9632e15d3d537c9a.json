{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/import-export/Import.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/import-export/Import.vue","mtime":1634376356415},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEltcG9ydEV4Y2VsIGZyb20gIkAvY29tcG9uZW50cy9leGNlbC9JbXBvcnRFeGNlbC52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgSW1wb3J0RXhjZWw6IEltcG9ydEV4Y2VsCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgaGVhZGVyOiBbXSwKICAgICAgc2hlZXROYW1lOiAiIgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGxvYWREYXRhSW5UYWJsZTogZnVuY3Rpb24gbG9hZERhdGFJblRhYmxlKF9yZWYpIHsKICAgICAgdmFyIHJlc3VsdHMgPSBfcmVmLnJlc3VsdHMsCiAgICAgICAgICBoZWFkZXIgPSBfcmVmLmhlYWRlciwKICAgICAgICAgIG1ldGEgPSBfcmVmLm1ldGE7CiAgICAgIHRoaXMuaGVhZGVyID0gaGVhZGVyOwogICAgICB0aGlzLnRhYmxlRGF0YSA9IHJlc3VsdHM7CiAgICAgIHRoaXMuc2hlZXROYW1lID0gbWV0YS5zaGVldE5hbWU7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Import.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAA,WAAA,MAAA,oCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA;AAHA,KAAA;AAKA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,iCACA;AAAA,UAAA,OAAA,QAAA,OAAA;AAAA,UAAA,MAAA,QAAA,MAAA;AAAA,UAAA,IAAA,QAAA,IAAA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,SAAA,GAAA,OAAA;AACA,WAAA,SAAA,GAAA,IAAA,CAAA,SAAA;AACA;AALA;AAXA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: i18n.vue\n    Description: I18n demo\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n    Developer: Netquest's TripcarteDev Team\n    GitHub URL: https://github.com/gispatial/tripcarte-asia-JWT\n========================================================================================== -->\n\n<template>\n  <div>\n    <div class=\"mb-8\">\n      <import-excel :onSuccess=\"loadDataInTable\" />\n    </div>\n    <vx-card v-if=\"tableData.length && header.length\">\n      <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\n        <template slot=\"header\">\n          <h4>{{ sheetName }}</h4>\n        </template>\n\n        <template slot=\"thead\">\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\n        </template>\n\n        <template slot-scope=\"{data}\">\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\n              {{ col }}\n            </vs-td>\n          </vs-tr>\n        </template>\n      </vs-table>\n    </vx-card>\n  </div>\n</template>\n\n<script>\nimport ImportExcel from \"@/components/excel/ImportExcel.vue\"\n\nexport default {\n  components: {\n    ImportExcel\n  },\n  data() {\n    return {\n      tableData: [],\n      header: [],\n      sheetName: \"\"\n    }\n  },\n  methods: {\n    loadDataInTable({ results, header, meta }) {\n      this.header = header\n      this.tableData = results\n      this.sheetName = meta.sheetName\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/components/extra-components/import-export"}]}