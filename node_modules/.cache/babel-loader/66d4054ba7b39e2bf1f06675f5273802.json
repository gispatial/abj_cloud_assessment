{"remainingRequest":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Documents/Git/abj_cloud_assessment/src/components/vx-auto-suggest/VxAutoSuggest.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/src/components/vx-auto-suggest/VxAutoSuggest.vue","mtime":1634372945925},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VxAutoSuggest.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"vx-auto-suggest\">\n    <div class=\"flex items-center relative\">\n\n      <!-- Input -->\n      <vs-input\n        ref=\"input\"\n        :placeholder=\"placeholder\"\n        :class=\"inputClassses\"\n        class=\"z-50\"\n        icon-pack='feather'\n        icon='icon-search'\n        icon-no-border\n        v-model=\"searchQuery\"\n        @keyup.esc=\"escPressed\"\n        @keyup.up=\"increaseIndex(false)\"\n        @keyup.down=\"increaseIndex\"\n        @keyup.enter=\"suggestionSelected\"\n        @focus=\"updateInputFocus\"\n        @blur=\"updateInputFocus(false)\" />\n    </div>\n\n    <!-- Group List -->\n    <ul\n      ref=\"scrollContainer\"\n      :class=\"{'hidden': !inputFocused}\"\n      class=\"auto-suggest-suggestions-list z-50 rounded-lg mt-2 shadow-lg overflow-x-hidden\"\n      @mouseenter=\"insideSuggestions = true\"\n      @mouseleave=\"insideSuggestions = false\"\n      @focus=\"updateInputFocus\"\n      @blur=\"updateInputFocus(false)\"\n      tabindex=\"-1\">\n\n      <li\n        ref=\"grp_list\"\n        v-for=\"(suggestion_list, grp_name, grp_index) in filteredData\"\n        :key=\"grp_index\"\n        class=\"auto-suggest__suggestion-group-container\">\n\n          <!-- Group Header -->\n          <p class=\"auto-suggest__suggestion-group-title pt-3 pb-1 px-4\" v-if=\"!hideGroupTitle\">\n            <slot name=\"group\" :group_name=\"grp_name\"></slot>\n          </p>\n\n          <!-- Suggestion List of each group -->\n          <ul>\n            <li\n              v-for=\"(suggestion, index) in suggestion_list\"\n              :key=\"index\"\n              class=\"auto-suggest__suggestion-group__suggestion py-3 px-4 cursor-pointer\"\n              :class=\"{'vx-auto-suggest__current-selected': currentSelected == `${grp_index}.${index}`}\"\n              @mouseenter=\"currentSelected = `${grp_index}.${index}`\"\n              @click=\"suggestionSelected\">\n              <slot :name=\"grp_name\" :suggestion=\"suggestion\"></slot>\n            </li>\n\n            <li class=\"auto-suggest__suggestion-group__suggestion py-3 px-4 no-results\" v-if=\"!suggestion_list.length\">\n              <slot name=\"noResult\" :group_name=\"grp_name\">\n                  <p>No Results Found.</p>\n              </slot>\n            </li>\n          </ul>\n      </li>\n    </ul>\n\n  </div>\n</template>\n\n<script>\nexport default{\n  props: {\n    placeholder: {\n      type: String,\n      default: 'Search..'\n    },\n    data: {\n      type: Object,\n      required: true,\n    },\n    initalData: {\n      type: Object,\n      default: () => new Object\n    },\n    inputClassses: {\n      type: [String, Object, Array],\n    },\n    autoFocus: {\n      type: Boolean,\n      default: false,\n    },\n    showPinned: {\n      type: Boolean,\n      default: false\n    },\n    searchLimit: {\n      type: Number,\n      default: 4\n    },\n    hideGroupTitle: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      searchQuery: '',\n      filteredData: {},\n      currentSelected: -1,\n      inputFocused: false,\n      insideSuggestions: false,\n    }\n  },\n  watch: {\n    // UPDATE SUGGESTIONS LIST\n    searchQuery(val) {\n      this.$emit('input', val)\n\n      if(val == '') {\n        this.inputInit()\n      }else {\n        let queried_data = {}\n        const data_grps = Object.keys(this.data)\n\n        data_grps.forEach((grp, i) => {\n          queried_data[data_grps[i]] = this.filter_grp(this.data[grp])\n        })\n\n        // Check if any of group has at least one queried item\n        if(!Object.values(queried_data).some(obj => obj.length)) {\n          this.currentSelected = -1\n        }\n\n        this.filteredData = queried_data\n      }\n    },\n    autoFocus(val) {\n      if(val) this.focusInput()\n      else this.searchQuery = ''\n    },\n    filteredData(val) {\n      // Auto Select first item if it's not item-404\n      let grp_index = null\n\n      for(let[index, grp_suggestions] of Object.values(val).entries()) {\n        if(grp_suggestions.length) {\n          grp_index = index\n          break\n        }\n      }\n\n      if(grp_index != null) this.currentSelected = grp_index + \".0\"\n    }\n  },\n  methods: {\n    escPressed() {\n      this.$emit('closeSearchbar')\n      this.searchQuery = ''\n    },\n    filter_grp(grp) {\n      let exactEle = grp.data.filter((item) => {\n        return item[grp.key].toLowerCase().startsWith(this.searchQuery.toLowerCase())\n      })\n      let containEle = grp.data.filter((item) => {\n        return !item[grp.key].toLowerCase().startsWith(this.searchQuery.toLowerCase()) && item[grp.key].toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1\n      })\n      return exactEle.concat(containEle).slice(0,this.searchLimit)\n    },\n    inputInit() {\n      if(Object.entries(this.initalData).length === 0 && this.initalData.constructor === Object) {\n        this.filteredData = {}\n      }else {\n        this.filteredData = this.initalData\n      }\n    },\n    updateInputFocus(val = true) {\n      if(val) {\n        if(this.searchQuery == '') this.inputInit()\n        setTimeout(() => {\n          this.inputFocused = true\n        }, 100)\n      }\n      else {\n        if(this.insideSuggestions) return\n        setTimeout(() => {\n          this.inputFocused = false\n        }, 100)\n        this.escPressed()\n      }\n    },\n    suggestionSelected() {\n      if(this.currentSelected > -1) {\n\n        const [grp_index, item_index] = this.currentSelected.split(\".\")\n\n        const grp_of_selected_item = Object.keys(this.data)[grp_index]\n        const selected_item = this.filteredData[grp_of_selected_item][item_index]\n\n        this.$emit('selected', {[grp_of_selected_item]: selected_item})\n\n        this.searchQuery = ''\n      }\n    },\n    increaseIndex(val = true) {\n      const [grp_i, item_i] = this.currentSelected.split(\".\")\n\n      const grp_arr = Object.entries(this.filteredData)\n      const active_grp_total_items = grp_arr[grp_i][1].length\n\n\n        if(val) {\n          // If active item is not of last item in grp\n          if(active_grp_total_items-1 > item_i) {\n            this.currentSelected = grp_i + \".\" +  (Number(item_i)+1)\n\n          // If active item grp is not last in grp list\n          }else if(grp_i < grp_arr.length-1) {\n            this.currentSelected = Number(grp_i)+1 + \".0\"\n          }\n        }else {\n          // If active item is not of first item in grp\n          if(Number(item_i)) {\n            this.currentSelected = grp_i + \".\" +  (Number(item_i)-1)\n\n          // If active item grp  is not first in grp list\n          }else if(Number(grp_i)) {\n            this.currentSelected = (Number(grp_i)-1) + \".\" + (grp_arr[grp_i-1][1].length-1)\n          }\n        }\n    },\n    focusInput() {\n      this.$refs.input.$el.querySelector('input').focus()\n    }\n  },\n  mounted() {\n    if(this.autoFocus) this.focusInput()\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/components/vxAutoSuggest.scss\";\n</style>\n"],"sourceRoot":"src/components/vx-auto-suggest"}]}