{"remainingRequest":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Documents/Git/abj_cloud_assessment/src/views/charts-and-maps/charts/echarts/EchartsPieChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/src/views/charts-and-maps/charts/echarts/EchartsPieChart.vue","mtime":1634376356571},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEVDaGFydHMgZnJvbSAndnVlLWVjaGFydHMvY29tcG9uZW50cy9FQ2hhcnRzJzsKaW1wb3J0ICdlY2hhcnRzL2xpYi9jb21wb25lbnQvdG9vbHRpcCc7CmltcG9ydCAnZWNoYXJ0cy9saWIvY29tcG9uZW50L2xlZ2VuZCc7CmltcG9ydCAnZWNoYXJ0cy9saWIvY2hhcnQvcGllJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwaWU6IHsKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7YX0gPGJyLz57Yn0gOiB7Y30gKHtkfSUpJwogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBvcmllbnQ6ICd2ZXJ0aWNhbCcsCiAgICAgICAgICBsZWZ0OiAnbGVmdCcsCiAgICAgICAgICBkYXRhOiBbJ0RpcmVjdCBpbnRlcnZpZXcnLCAnRW1haWwgbWFya2V0aW5nJywgJ0FsbGlhbmNlIGFkdmVydGlzaW5nJywgJ1ZpZGVvIGFkJywgJ1NlYXJjaCBlbmdpbmUnXQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ0FjY2VzcyBzb3VyY2UnLAogICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICByYWRpdXM6ICc1NSUnLAogICAgICAgICAgY2VudGVyOiBbJzUwJScsICc2MCUnXSwKICAgICAgICAgIGNvbG9yOiBbJyNGRjlGNDMnLCAnIzI4Qzc2RicsICcjRUE1NDU1JywgJyM4N2NlZWInLCAnIzczNjdGMCddLAogICAgICAgICAgZGF0YTogW3sKICAgICAgICAgICAgdmFsdWU6IDMzNSwKICAgICAgICAgICAgbmFtZTogJ0RpcmVjdCBpbnRlcnZpZXcnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHZhbHVlOiAzMTAsCiAgICAgICAgICAgIG5hbWU6ICdFbWFpbCBtYXJrZXRpbmcnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHZhbHVlOiAyMzQsCiAgICAgICAgICAgIG5hbWU6ICdBbGxpYW5jZSBhZHZlcnRpc2luZycKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgdmFsdWU6IDEzNSwKICAgICAgICAgICAgbmFtZTogJ1ZpZGVvIGFkJwogICAgICAgICAgfSwgewogICAgICAgICAgICB2YWx1ZTogMTU0OCwKICAgICAgICAgICAgbmFtZTogJ1NlYXJjaCBlbmdpbmUnCiAgICAgICAgICB9XSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsCiAgICAgICAgICAgICAgc2hhZG93Q29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuNSknCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgRUNoYXJ0czogRUNoYXJ0cwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBkYXRhSW5kZXggPSAtMTsKICAgIHZhciBwaWUgPSB0aGlzLiRyZWZzLnBpZTsKICAgIHZhciBkYXRhTGVuID0gcGllLm9wdGlvbnMuc2VyaWVzWzBdLmRhdGEubGVuZ3RoOwogICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICBwaWUuZGlzcGF0Y2hBY3Rpb24oewogICAgICAgIHR5cGU6ICdkb3ducGxheScsCiAgICAgICAgc2VyaWVzSW5kZXg6IDAsCiAgICAgICAgZGF0YUluZGV4OiBkYXRhSW5kZXgKICAgICAgfSk7CiAgICAgIGRhdGFJbmRleCA9IChkYXRhSW5kZXggKyAxKSAlIGRhdGFMZW47CiAgICAgIHBpZS5kaXNwYXRjaEFjdGlvbih7CiAgICAgICAgdHlwZTogJ2hpZ2hsaWdodCcsCiAgICAgICAgc2VyaWVzSW5kZXg6IDAsCiAgICAgICAgZGF0YUluZGV4OiBkYXRhSW5kZXgKICAgICAgfSk7CiAgICAgIHBpZS5kaXNwYXRjaEFjdGlvbih7CiAgICAgICAgdHlwZTogJ3Nob3dUaXAnLAogICAgICAgIHNlcmllc0luZGV4OiAwLAogICAgICAgIGRhdGFJbmRleDogZGF0YUluZGV4CiAgICAgIH0pOwogICAgfSwgMTAwMCk7CiAgfQp9Ow=="},{"version":3,"sources":["EchartsPieChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA,OAAA,OAAA,MAAA,gCAAA;AACA,OAAA,+BAAA;AACA,OAAA,8BAAA;AACA,OAAA,uBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,GAAA,EAAA;AACA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,MADA;AAEA,UAAA,SAAA,EAAA;AAFA,SADA;AAKA,QAAA,MAAA,EAAA;AACA,UAAA,MAAA,EAAA,UADA;AAEA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,IAAA,EAAA,CAAA,kBAAA,EAAA,iBAAA,EAAA,sBAAA,EAAA,UAAA,EAAA,eAAA;AAHA,SALA;AAUA,QAAA,MAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,eADA;AAEA,UAAA,IAAA,EAAA,KAFA;AAGA,UAAA,MAAA,EAAA,KAHA;AAIA,UAAA,MAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAJA;AAKA,UAAA,KAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,EAAA,SAAA,CALA;AAMA,UAAA,IAAA,EAAA,CACA;AAAA,YAAA,KAAA,EAAA,GAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WADA,EAEA;AAAA,YAAA,KAAA,EAAA,GAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAFA,EAGA;AAAA,YAAA,KAAA,EAAA,GAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAHA,EAIA;AAAA,YAAA,KAAA,EAAA,GAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAJA,EAKA;AAAA,YAAA,KAAA,EAAA,IAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WALA,CANA;AAaA,UAAA,SAAA,EAAA;AACA,YAAA,QAAA,EAAA;AACA,cAAA,UAAA,EAAA,EADA;AAEA,cAAA,aAAA,EAAA,CAFA;AAGA,cAAA,WAAA,EAAA;AAHA;AADA;AAbA,SAAA;AAVA;AADA,KAAA;AAkCA,GApCA;AAqCA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GArCA;AAwCA,EAAA,OAxCA,qBAwCA;AACA,QAAA,SAAA,GAAA,CAAA,CAAA;AACA,QAAA,GAAA,GAAA,KAAA,KAAA,CAAA,GAAA;AACA,QAAA,OAAA,GAAA,GAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA;AACA,IAAA,WAAA,CAAA,YAAA;AACA,MAAA,GAAA,CAAA,cAAA,CAAA;AACA,QAAA,IAAA,EAAA,UADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,SAAA,EAAA;AAHA,OAAA;AAKA,MAAA,SAAA,GAAA,CAAA,SAAA,GAAA,CAAA,IAAA,OAAA;AACA,MAAA,GAAA,CAAA,cAAA,CAAA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,SAAA,EAAA;AAHA,OAAA;AAKA,MAAA,GAAA,CAAA,cAAA,CAAA;AACA,QAAA,IAAA,EAAA,SADA;AAEA,QAAA,WAAA,EAAA,CAFA;AAGA,QAAA,SAAA,EAAA;AAHA,OAAA;AAKA,KAjBA,EAiBA,IAjBA,CAAA;AAkBA;AA9DA,CAAA","sourcesContent":["<!-- =========================================================================================\n\tFile Name: EchartsPieChart.vue\n\tDescription: Create bar chart\n\t----------------------------------------------------------------------------------------\n\tItem Name: abjcloudsolutions.com dashboard management portal\n\tAuthor: TripcarteDev\n\tDev Github: https://github.com/gispatial/tripcarte-asia-dashboard\n========================================================================================== -->\n\n\n<template>\n\t<vx-card title=\"Pie Chart\" class=\"mb-base\" code-toggler>\n\n\t\t<div class=\"mt-5\">\n\t\t\t<e-charts autoresize :options=\"pie\" ref=\"pie\" auto-resize />\n\t\t</div>\n\n\t\t<template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;e-charts autoresize :options=&quot;pie&quot; ref=&quot;pie&quot; auto-resize /&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport ECharts from 'vue-echarts/components/ECharts'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/pie'\n\nexport default {\n  data() {\n    return {\n      pie:{\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} &lt;br/&gt;{b} : {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: ['Direct interview', 'Email marketing', 'Alliance advertising', 'Video ad', 'Search engine']\n        },\n        series: [\n          {\n            name: 'Access source',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            color: ['#FF9F43','#28C76F','#EA5455','#87ceeb','#7367F0'],\n            data: [\n              {value: 335, name: 'Direct interview'},\n              {value: 310, name: 'Email marketing'},\n              {value: 234, name: 'Alliance advertising'},\n              {value: 135, name: 'Video ad'},\n              {value: 1548, name: 'Search engine'}\n            ],\n            itemStyle: {\n              emphasis: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      },\n    }\n  },\n  components: {\n    ECharts\n  },\n  mounted () {\n    let dataIndex = -1\n    let pie = this.$refs.pie\n    let dataLen = pie.options.series[0].data.length\n    setInterval(() =&gt; {\n      pie.dispatchAction({\n        type: 'downplay',\n        seriesIndex: 0,\n        dataIndex\n      })\n      dataIndex = (dataIndex + 1) % dataLen\n      pie.dispatchAction({\n        type: 'highlight',\n        seriesIndex: 0,\n        dataIndex\n      })\n      pie.dispatchAction({\n        type: 'showTip',\n        seriesIndex: 0,\n        dataIndex\n      })\n    }, 1000)\n  }\n}\n&lt;/script&gt;\n\t\t</template>\n\t</vx-card>\n</template>\n\n<script>\nimport ECharts from 'vue-echarts/components/ECharts'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/pie'\n\nexport default {\n    data() {\n        return {\n            pie: {\n                tooltip: {\n                    trigger: 'item',\n                    formatter: '{a} <br/>{b} : {c} ({d}%)'\n                },\n                legend: {\n                    orient: 'vertical',\n                    left: 'left',\n                    data: ['Direct interview', 'Email marketing', 'Alliance advertising', 'Video ad', 'Search engine']\n                },\n                series: [{\n                    name: 'Access source',\n                    type: 'pie',\n                    radius: '55%',\n                    center: ['50%', '60%'],\n                    color: ['#FF9F43', '#28C76F', '#EA5455', '#87ceeb', '#7367F0'],\n                    data: [\n                        { value: 335, name: 'Direct interview' },\n                        { value: 310, name: 'Email marketing' },\n                        { value: 234, name: 'Alliance advertising' },\n                        { value: 135, name: 'Video ad' },\n                        { value: 1548, name: 'Search engine' }\n                    ],\n                    itemStyle: {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }]\n            },\n        }\n    },\n    components: {\n        ECharts\n    },\n    mounted() {\n        let dataIndex = -1\n        let pie = this.$refs.pie\n        let dataLen = pie.options.series[0].data.length\n        setInterval(() => {\n            pie.dispatchAction({\n                type: 'downplay',\n                seriesIndex: 0,\n                dataIndex\n            })\n            dataIndex = (dataIndex + 1) % dataLen\n            pie.dispatchAction({\n                type: 'highlight',\n                seriesIndex: 0,\n                dataIndex\n            })\n            pie.dispatchAction({\n                type: 'showTip',\n                seriesIndex: 0,\n                dataIndex\n            })\n        }, 1000)\n    }\n}\n</script>\n"],"sourceRoot":"src/views/charts-and-maps/charts/echarts"}]}