{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/tree/TreeAsyncTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/tree/TreeAsyncTree.vue","mtime":1634797132158},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY3JvY3NsdXQvRGVza3RvcC9hYmpfY2xvdWRfYXNzZXNzbWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jcm9jc2x1dC9EZXNrdG9wL2Fial9jbG91ZF9hc3Nlc3NtZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS1jb3JlanMyL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBWVHJlZSwgVlNlbGVjdFRyZWUgfSBmcm9tICd2dWUtdHJlZS1oYWxvd2VyJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbml0U2VsZWN0ZWQ6IFsnbm9kZS0xJ10sCiAgICAgIHRyZWVEYXRhOiBbewogICAgICAgIHRpdGxlOiAnbm9kZTEnLAogICAgICAgIGV4cGFuZGVkOiBmYWxzZSwKICAgICAgICBhc3luYzogdHJ1ZQogICAgICB9XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG5vZGVjaGVja2VkOiBmdW5jdGlvbiBub2RlY2hlY2tlZChub2RlLCB2KSB7CiAgICAgIGFsZXJ0KCd0aGF0IGEgbm9kZS1jaGVjayBlbnZlbnQgLi4uJyArIG5vZGUudGl0bGUgKyB2KTsKICAgIH0sCiAgICBhc3luY0xvYWQ6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9hc3luY0xvYWQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUobm9kZSkgewogICAgICAgIHZhciBfbm9kZSRjaGlsZHJlbjsKCiAgICAgICAgdmFyIF9ub2RlJGNoZWNrZWQsIGNoZWNrZWQsIHBybzsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX25vZGUkY2hlY2tlZCA9IG5vZGUuY2hlY2tlZCwgY2hlY2tlZCA9IF9ub2RlJGNoZWNrZWQgPT09IHZvaWQgMCA/IGZhbHNlIDogX25vZGUkY2hlY2tlZDsKICAgICAgICAgICAgICAgIHRoaXMuJHNldChub2RlLCAnbG9hZGluZycsIHRydWUpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChyZXNvbHZlLCAyMDAwLCBbewogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAndGVzdDEnLAogICAgICAgICAgICAgICAgICAgIGFzeW5jOiB0cnVlCiAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ3Rlc3QyJywKICAgICAgICAgICAgICAgICAgICBhc3luYzogdHJ1ZQogICAgICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICd0ZXN0MycKICAgICAgICAgICAgICAgICAgfV0pOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHBybyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKCFub2RlLmhhc093blByb3BlcnR5KCdjaGlsZHJlbicpKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuJHNldChub2RlLCAnY2hpbGRyZW4nLCBbXSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgKF9ub2RlJGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikucHVzaC5hcHBseShfbm9kZSRjaGlsZHJlbiwgX3RvQ29uc3VtYWJsZUFycmF5KHBybykpOwoKICAgICAgICAgICAgICAgIHRoaXMuJHNldChub2RlLCAnbG9hZGluZycsIGZhbHNlKTsKCiAgICAgICAgICAgICAgICBpZiAoY2hlY2tlZCkgewogICAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLnRyZWUuY2hpbGRDaGVja2VkSGFuZGxlKG5vZGUsIGNoZWNrZWQpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gYXN5bmNMb2FkKF94KSB7CiAgICAgICAgcmV0dXJuIF9hc3luY0xvYWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGFzeW5jTG9hZDsKICAgIH0oKQogIH0sCiAgY29tcG9uZW50czogewogICAgVlRyZWU6IFZUcmVlLAogICAgVlNlbGVjdFRyZWU6IFZTZWxlY3RUcmVlCiAgfQp9Ow=="},{"version":3,"sources":["TreeAsyncTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,KAAA,EAAA,WAAA,QAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,CAAA,QAAA,CADA;AAEA,MAAA,QAAA,EAAA,CAAA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAAA;AAFA,KAAA;AAQA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,IADA,EACA,CADA,EACA;AACA,MAAA,KAAA,CAAA,iCAAA,IAAA,CAAA,KAAA,GAAA,CAAA,CAAA;AACA,KAHA;AAIA,IAAA,SAJA;AAAA,gGAIA,IAJA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKA,IALA,CAKA,OALA,EAKA,OALA,8BAKA,KALA;AAMA,qBAAA,IAAA,CAAA,IAAA,EAAA,SAAA,EAAA,IAAA;AANA;AAAA,uBAOA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA;AAAA,oBAAA,KAAA,EAAA,OAAA;AAAA,oBAAA,KAAA,EAAA;AAAA,mBAAA,EAAA;AAAA,oBAAA,KAAA,EAAA,OAAA;AAAA,oBAAA,KAAA,EAAA;AAAA,mBAAA,EAAA;AAAA,oBAAA,KAAA,EAAA;AAAA,mBAAA,CAAA,CAAA;AACA,iBAFA,CAPA;;AAAA;AAOA,gBAAA,GAPA;;AAUA,oBAAA,CAAA,IAAA,CAAA,cAAA,CAAA,UAAA,CAAA,EAAA;AACA,uBAAA,IAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA;AACA;;AACA,kCAAA,IAAA,CAAA,QAAA,EAAA,IAAA,0CAAA,GAAA;;AACA,qBAAA,IAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA;;AACA,oBAAA,OAAA,EAAA;AACA,uBAAA,KAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,IAAA,EAAA,OAAA;AACA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAXA;AA+BA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,WAAA,EAAA;AAFA;AA/BA,CAAA","sourcesContent":["<template>\n  <vx-card title=\"Async Tree\" code-toggler>\n    <v-tree ref=\"tree\" :data='treeData' :multiple='false' @node-check='nodechecked' @async-load-nodes='asyncLoad'/>\n\n    <template slot=\"codeContainer\">\n&lt;tempalte&gt;\n  &lt;v-tree ref=&quot;tree&quot; :data=&apos;treeData&apos; :multiple=&apos;false&apos; @node-check=&apos;nodechecked&apos; @async-load-nodes=&apos;asyncLoad&apos;/&gt;\n&lt;/tempalte&gt;\n\n&lt;script&gt;\nimport { VTree, VSelectTree}  from &apos;vue-tree-halower&apos;\n\nexport default {\n  data() {\n    return {\n      initSelected: [&apos;node-1&apos;],\n      treeData: [{\n        title: &apos;node1&apos;,\n        expanded: false,\n        async: true\n      }]\n    }\n  },\n  methods: {\n    nodechecked (node, v) {\n      alert(&apos;that a node-check envent ...&apos; + node.title + v)\n    },\n    async asyncLoad (node) {\n      const {checked = false} = node\n      this.$set(node, &apos;loading&apos;, true)\n      let pro = await new Promise(resolve =&gt; {\n        setTimeout(resolve, 2000, [{title: &apos;test1&apos;, async: true}, {title: &apos;test2&apos;, async: true}, {title: &apos;test3&apos;}])\n      })\n      if (!node.hasOwnProperty(&apos;children&apos;)) {\n        this.$set(node, &apos;children&apos;, [])\n      }\n      node.children.push(...pro)\n      this.$set(node, &apos;loading&apos;, false)\n      if (checked) {\n        this.$refs.tree.childCheckedHandle(node, checked)\n      }\n    },\n  },\n  components: {\n    VTree,\n    VSelectTree\n  }\n}\n&lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nimport { VTree, VSelectTree}  from 'vue-tree-halower'\n\nexport default {\n  data() {\n    return {\n      initSelected: ['node-1'],\n      treeData: [{\n        title: 'node1',\n        expanded: false,\n        async: true\n      }]\n    }\n  },\n  methods: {\n    nodechecked (node, v) {\n      alert('that a node-check envent ...' + node.title + v)\n    },\n    async asyncLoad (node) {\n      const {checked = false} = node\n      this.$set(node, 'loading', true)\n      let pro = await new Promise(resolve => {\n        setTimeout(resolve, 2000, [{title: 'test1', async: true}, {title: 'test2', async: true}, {title: 'test3'}])\n      })\n      if (!node.hasOwnProperty('children')) {\n        this.$set(node, 'children', [])\n      }\n      node.children.push(...pro)\n      this.$set(node, 'loading', false)\n      if (checked) {\n        this.$refs.tree.childCheckedHandle(node, checked)\n      }\n    },\n  },\n  components: {\n    VTree,\n    VSelectTree\n  }\n}\n</script>\n"],"sourceRoot":"src/views/components/extra-components/tree"}]}