{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/charts-and-maps/charts/echarts/EchartsBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/charts-and-maps/charts/echarts/EchartsBarChart.vue","mtime":1634797132132},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY3JvY3NsdXQvRGVza3RvcC9hYmpfY2xvdWRfYXNzZXNzbWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBFQ2hhcnRzIGZyb20gJ3Z1ZS1lY2hhcnRzL2NvbXBvbmVudHMvRUNoYXJ0cyc7CmltcG9ydCAnZWNoYXJ0cy9saWIvY29tcG9uZW50L3Rvb2x0aXAnOwppbXBvcnQgJ2VjaGFydHMvbGliL2NvbXBvbmVudC9sZWdlbmQnOwppbXBvcnQgJ2VjaGFydHMvbGliL2NoYXJ0L2Jhcic7CmltcG9ydCB0aGVtZSBmcm9tICIuL3RoZW1lLmpzb24iOwpFQ2hhcnRzLnJlZ2lzdGVyVGhlbWUoJ292aWxpYS1ncmVlbicsIHRoZW1lKTsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBiYXI6IHsKICAgICAgICBsZWdlbmQ6IHt9LAogICAgICAgIHRvb2x0aXA6IHt9LAogICAgICAgIGRhdGFzZXQ6IHsKICAgICAgICAgIC8vIFByb3ZpZGUgZGF0YS4KICAgICAgICAgIHNvdXJjZTogW1snUHJvZHVjdCcsICcyMDE1JywgJzIwMTYnLCAnMjAxNyddLCBbJ01hdGNoYSBMYXR0ZSddLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5yYW5kb21pemUoKSkpLCBbJ01pbGsgVGVhJ10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnJhbmRvbWl6ZSgpKSksIFsnQ2hlZXNlIENvY29hJ10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnJhbmRvbWl6ZSgpKSksIFsnV2FsbnV0IEJyb3duaWUnXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMucmFuZG9taXplKCkpKV0KICAgICAgICB9LAogICAgICAgIC8vIERlY2xhcmUgWCBheGlzLCB3aGljaCBpcyBhIGNhdGVnb3J5IGF4aXMsIG1hcHBpbmcKICAgICAgICAvLyB0byB0aGUgZmlyc3QgY29sdW1uIGJ5IGRlZmF1bHQuCiAgICAgICAgeEF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScKICAgICAgICB9LAogICAgICAgIC8vIERlY2xhcmUgWSBheGlzLCB3aGljaCBpcyBhIHZhbHVlIGF4aXMuCiAgICAgICAgeUF4aXM6IHt9LAogICAgICAgIC8vIERlY2xhcmUgc2V2ZXJhbCBzZXJpZXMsIGVhY2ggb2YgdGhlbSBtYXBwZWQgdG8gYQogICAgICAgIC8vIGNvbHVtbiBvZiB0aGUgZGF0YXNldCBieSBkZWZhdWx0LgogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIHR5cGU6ICdiYXInCiAgICAgICAgfSwgewogICAgICAgICAgdHlwZTogJ2JhcicKICAgICAgICB9LCB7CiAgICAgICAgICB0eXBlOiAnYmFyJwogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByYW5kb21pemU6IGZ1bmN0aW9uIHJhbmRvbWl6ZSgpIHsKICAgICAgcmV0dXJuIFtNYXRoLnJvdW5kKDMwMCArIE1hdGgucmFuZG9tKCkgKiA3MDApIC8gMTAsIE1hdGgucm91bmQoMzAwICsgTWF0aC5yYW5kb20oKSAqIDcwMCkgLyAxMCwgTWF0aC5yb3VuZCgzMDAgKyBNYXRoLnJhbmRvbSgpICogNzAwKSAvIDEwXTsKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEVDaGFydHM6IEVDaGFydHMKICB9Cn07"},{"version":3,"sources":["EchartsBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,OAAA,OAAA,MAAA,gCAAA;AACA,OAAA,+BAAA;AACA,OAAA,8BAAA;AACA,OAAA,uBAAA;AACA,OAAA,KAAA;AAEA,OAAA,CAAA,aAAA,CAAA,cAAA,EAAA,KAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,GAAA,EAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA,EAFA;AAGA,QAAA,OAAA,EAAA;AACA;AACA,UAAA,MAAA,EAAA,CACA,CAAA,SAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CADA,GAEA,cAFA,4BAEA,KAAA,SAAA,EAFA,KAGA,UAHA,4BAGA,KAAA,SAAA,EAHA,KAIA,cAJA,4BAIA,KAAA,SAAA,EAJA,KAKA,gBALA,4BAKA,KAAA,SAAA,EALA;AAFA,SAHA;AAaA;AACA;AACA,QAAA,KAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAfA;AAgBA;AACA,QAAA,KAAA,EAAA,EAjBA;AAkBA;AACA;AACA,QAAA,MAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AApBA;AADA,KAAA;AAyBA,GA3BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,CACA,IAAA,CAAA,KAAA,CAAA,MAAA,IAAA,CAAA,MAAA,KAAA,GAAA,IAAA,EADA,EAEA,IAAA,CAAA,KAAA,CAAA,MAAA,IAAA,CAAA,MAAA,KAAA,GAAA,IAAA,EAFA,EAGA,IAAA,CAAA,KAAA,CAAA,MAAA,IAAA,CAAA,MAAA,KAAA,GAAA,IAAA,EAHA,CAAA;AAKA;AAPA,GA5BA;AAqCA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA;AArCA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: ChartBarChart.vue\n    Description: Create bar chart\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Bar Chart\" class=\"mb-base\" code-toggler>\n\n        <div class=\"mt-5\">\n            <e-charts autoresize :options=\"bar\" ref=\"bar\" theme=\"ovilia-green\" auto-resize />\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;e-charts autoresize :options=&quot;bar&quot; ref=&quot;bar&quot; theme=&quot;ovilia-green&quot; auto-resize /&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport ECharts from 'vue-echarts/components/ECharts'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/bar'\nimport theme from './theme.json'\n\nECharts.registerTheme('ovilia-green', theme)\n\nexport default {\n  data() {\n    return {\n      bar: {\n        legend: {},\n        tooltip: {},\n        dataset: {\n          // Provide data.\n          source: [\n            ['Product', '2015', '2016', '2017'],\n            ['Matcha Latte', ...this.randomize()],\n            ['Milk Tea', ...this.randomize()],\n            ['Cheese Cocoa', ...this.randomize()],\n            ['Walnut Brownie', ...this.randomize()]\n          ]\n        },\n        // Declare X axis, which is a category axis, mapping\n        // to the first column by default.\n        xAxis: { type: 'category' },\n        // Declare Y axis, which is a value axis.\n        yAxis: {},\n        // Declare several series, each of them mapped to a\n        // column of the dataset by default.\n        series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]\n\n      },\n    }\n  },\n  methods: {\n    randomize() {\n      return [0, 0, 0].map(v =&gt; {\n        return Math.round(300 + Math.random() * 700) / 10\n      })\n    }\n  },\n  components: {\n    ECharts\n  }\n}\n&lt;/script&gt;\n        </template>\n    </vx-card>\n</template>\n\n<script>\nimport ECharts from 'vue-echarts/components/ECharts'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/bar'\nimport theme from './theme.json'\n\nECharts.registerTheme('ovilia-green', theme)\n\nexport default {\n    data() {\n        return {\n            bar: {\n                legend: {},\n                tooltip: {},\n                dataset: {\n                    // Provide data.\n                    source: [\n                        ['Product', '2015', '2016', '2017'],\n                        ['Matcha Latte', ...this.randomize()],\n                        ['Milk Tea', ...this.randomize()],\n                        ['Cheese Cocoa', ...this.randomize()],\n                        ['Walnut Brownie', ...this.randomize()]\n                    ]\n                },\n                // Declare X axis, which is a category axis, mapping\n                // to the first column by default.\n                xAxis: { type: 'category' },\n                // Declare Y axis, which is a value axis.\n                yAxis: {},\n                // Declare several series, each of them mapped to a\n                // column of the dataset by default.\n                series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]\n\n            },\n        }\n    },\n    methods: {\n        randomize() {\n            return [\n                Math.round(300 + Math.random() * 700) / 10,\n                Math.round(300 + Math.random() * 700) / 10,\n                Math.round(300 + Math.random() * 700) / 10\n            ]\n        }\n    },\n    components: {\n        ECharts\n    }\n}\n</script>\n"],"sourceRoot":"src/views/charts-and-maps/charts/echarts"}]}