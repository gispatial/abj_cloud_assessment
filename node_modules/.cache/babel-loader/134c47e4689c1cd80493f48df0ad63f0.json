{"remainingRequest":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Documents/Git/abj_cloud_assessment/src/filters/filters.js","dependencies":[{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/src/filters/filters.js","mtime":1634372945930},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy50cmltIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mb3ItZWFjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5kYXRlLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWx0ZXIiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7ClZ1ZS5maWx0ZXIoJ2NhcGl0YWxpemUnLCBmdW5jdGlvbiAodmFsdWUpIHsKICBpZiAoIXZhbHVlKSByZXR1cm4gJyc7CiAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpOwogIHZhciBhcnIgPSB2YWx1ZS5zcGxpdCgiICIpOwogIHZhciBjYXBpdGFsaXplZF9hcnJheSA9IFtdOwogIGFyci5mb3JFYWNoKGZ1bmN0aW9uICh3b3JkKSB7CiAgICB2YXIgY2FwaXRhbGl6ZWQgPSB3b3JkLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgd29yZC5zbGljZSgxKTsKICAgIGNhcGl0YWxpemVkX2FycmF5LnB1c2goY2FwaXRhbGl6ZWQpOwogIH0pOwogIHJldHVybiBjYXBpdGFsaXplZF9hcnJheS5qb2luKCIgIik7Cn0pOwpWdWUuZmlsdGVyKCd0aXRsZScsIGZ1bmN0aW9uICh2YWx1ZSkgewogIHZhciByZXBsYWNlciA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogIl8iOwogIGlmICghdmFsdWUpIHJldHVybiAnJzsKICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCk7CiAgdmFyIGFyciA9IHZhbHVlLnNwbGl0KHJlcGxhY2VyKTsKICB2YXIgY2FwaXRhbGl6ZWRfYXJyYXkgPSBbXTsKICBhcnIuZm9yRWFjaChmdW5jdGlvbiAod29yZCkgewogICAgdmFyIGNhcGl0YWxpemVkID0gd29yZC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHdvcmQuc2xpY2UoMSk7CiAgICBjYXBpdGFsaXplZF9hcnJheS5wdXNoKGNhcGl0YWxpemVkKTsKICB9KTsKICByZXR1cm4gY2FwaXRhbGl6ZWRfYXJyYXkuam9pbigiICIpOwp9KTsKVnVlLmZpbHRlcigndHJ1bmNhdGUnLCBmdW5jdGlvbiAodmFsdWUsIGxpbWl0KSB7CiAgcmV0dXJuIHZhbHVlLnN1YnN0cmluZygwLCBsaW1pdCk7Cn0pOwpWdWUuZmlsdGVyKCd0YWlsaW5nJywgZnVuY3Rpb24gKHZhbHVlLCB0YWlsKSB7CiAgcmV0dXJuIHZhbHVlICsgdGFpbDsKfSk7ClZ1ZS5maWx0ZXIoJ3RpbWUnLCBmdW5jdGlvbiAodmFsdWUpIHsKICB2YXIgaXMyNEhyRm9ybWF0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTsKCiAgaWYgKHZhbHVlKSB7CiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKERhdGUucGFyc2UodmFsdWUpKTsKICAgIHZhciBob3VycyA9IGRhdGUuZ2V0SG91cnMoKTsKICAgIHZhciBtaW4gPSAoZGF0ZS5nZXRNaW51dGVzKCkgPCAxMCA/ICcwJyA6ICcnKSArIGRhdGUuZ2V0TWludXRlcygpOwoKICAgIGlmICghaXMyNEhyRm9ybWF0KSB7CiAgICAgIHZhciB0aW1lID0gaG91cnMgPiAxMiA/ICdBTScgOiAnUE0nOwogICAgICBob3VycyA9IGhvdXJzICUgMTIgfHwgMTI7CiAgICAgIHJldHVybiBob3VycyArICc6JyArIG1pbiArICcgJyArIHRpbWU7CiAgICB9CgogICAgcmV0dXJuIGhvdXJzICsgJzonICsgbWluOwogIH0KfSk7ClZ1ZS5maWx0ZXIoJ2RhdGUnLCBmdW5jdGlvbiAodmFsdWUpIHsKICB2YXIgZnVsbERhdGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogIHZhbHVlID0gU3RyaW5nKHZhbHVlKTsKICB2YXIgZGF0ZSA9IHZhbHVlLnNsaWNlKDgsIDEwKS50cmltKCk7CiAgdmFyIG1vbnRoID0gdmFsdWUuc2xpY2UoNCwgNykudHJpbSgpOwogIHZhciB5ZWFyID0gdmFsdWUuc2xpY2UoMTEsIDE1KTsKICBpZiAoIWZ1bGxEYXRlKSByZXR1cm4gZGF0ZSArICcgJyArIG1vbnRoO2Vsc2UgcmV0dXJuIGRhdGUgKyAnICcgKyBtb250aCArICcgJyArIHllYXI7Cn0pOwpWdWUuZmlsdGVyKCdtb250aCcsIGZ1bmN0aW9uICh2YWwpIHsKICB2YXIgc2hvd1llYXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHRydWU7CiAgdmFsID0gU3RyaW5nKHZhbCk7CiAgdmFyIHJlZ3ggPSAvXHcrXHMoXHcrKVxzXGQrXHMoXGQrKS4vOwoKICBpZiAoIXNob3dZZWFyKSB7CiAgICByZXR1cm4gcmVneC5leGVjKHZhbClbMV07CiAgfSBlbHNlIHsKICAgIHJldHVybiByZWd4LmV4ZWModmFsKVsxXSArICcgJyArIHJlZ3guZXhlYyh2YWwpWzJdOwogIH0KfSk7ClZ1ZS5maWx0ZXIoJ2NzdicsIGZ1bmN0aW9uICh2YWx1ZSkgewogIHJldHVybiB2YWx1ZS5qb2luKCcsICcpOwp9KTsKVnVlLmZpbHRlcignZmlsdGVyX3RhZ3MnLCBmdW5jdGlvbiAodmFsdWUpIHsKICByZXR1cm4gdmFsdWUucmVwbGFjZSgvPFwvP1tePl0rKD58JCkvZywgIiIpOwp9KTsKVnVlLmZpbHRlcigna19mb3JtYXR0ZXInLCBmdW5jdGlvbiAobnVtKSB7CiAgcmV0dXJuIG51bSA+IDk5OSA/IChudW0gLyAxMDAwKS50b0ZpeGVkKDEpICsgJ2snIDogbnVtOwp9KTs="},{"version":3,"sources":["/Users/crocslut/Documents/Git/abj_cloud_assessment/src/filters/filters.js"],"names":["Vue","filter","value","toString","arr","split","capitalized_array","forEach","word","capitalized","charAt","toUpperCase","slice","push","join","replacer","limit","substring","tail","is24HrFormat","date","Date","parse","hours","getHours","min","getMinutes","time","fullDate","String","trim","month","year","val","showYear","regx","exec","replace","num","toFixed"],"mappings":"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","sourcesContent":["import Vue from 'vue'\n\nVue.filter('capitalize', function (value) {\n\tif (!value) return ''\n\tvalue = value.toString()\n\tlet arr = value.split(\" \")\n\tlet capitalized_array = []\n\tarr.forEach((word) => {\n\t\tlet capitalized = word.charAt(0).toUpperCase() + word.slice(1)\n\t\tcapitalized_array.push(capitalized)\n\t})\n\treturn capitalized_array.join(\" \");\n})\n\nVue.filter('title', function (value, replacer=\"_\") {\n  if (!value) return ''\n  value = value.toString()\n\n  let arr = value.split(replacer)\n  let capitalized_array = []\n  arr.forEach((word) => {\n    let capitalized = word.charAt(0).toUpperCase() + word.slice(1)\n    capitalized_array.push(capitalized)\n  })\n  return capitalized_array.join(\" \");\n})\n\nVue.filter('truncate', function(value, limit) {\n\treturn value.substring(0, limit)\n})\n\nVue.filter('tailing', function(value, tail) {\n\treturn value + tail;\n})\n\nVue.filter('time', function(value, is24HrFormat = false) {\n\tif(value) {\n\t\tconst date = new Date(Date.parse(value));\n\t\tlet hours = date.getHours();\n\t\tconst min = (date.getMinutes() < 10 ? '0' : '') + date.getMinutes()\n\t\tif(!is24HrFormat) {\n\t\t\tconst time = hours > 12 ? 'AM' : 'PM';\n\t\t\thours = hours % 12 || 12;\n\t\t\treturn hours + ':' + min + ' ' + time\n\t\t}\n\t\treturn hours + ':' + min\n\t}\n})\n\nVue.filter('date', function(value, fullDate = false) {\n\tvalue = String(value)\n\tconst date = value.slice(8,10).trim();\n\tconst month = value.slice(4,7).trim();\n\tconst year = value.slice(11,15);\n\n\tif(!fullDate) return date + ' ' + month;\n\telse return date + ' ' + month + ' ' + year;\n})\n\nVue.filter('month', function(val, showYear = true) {\n  val = String(val)\n\n  const regx = /\\w+\\s(\\w+)\\s\\d+\\s(\\d+)./;\n  if(!showYear) {\n    return regx.exec(val)[1];\n  }else {\n    return regx.exec(val)[1] + ' ' + regx.exec(val)[2];\n  }\n\n})\n\nVue.filter('csv', function(value) {\n\treturn value.join(', ')\n})\n\nVue.filter('filter_tags', function(value) {\n\treturn value.replace(/<\\/?[^>]+(>|$)/g, \"\")\n})\n\nVue.filter('k_formatter', function(num) {\n\treturn num > 999 ? (num/1000).toFixed(1) + 'k' : num\n})\n"]}]}