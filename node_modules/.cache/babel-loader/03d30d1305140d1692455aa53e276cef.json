{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/abj_cloud_assessment/src/fake-db/data/apps/todo/index.js","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/fake-db/data/apps/todo/index.js","mtime":1634372945926},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubGFzdC1pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyIjsKaW1wb3J0IG1vY2sgZnJvbSAnQC9mYWtlLWRiL21vY2suanMnOyAvLyBDb250YWN0Cgp2YXIgZGF0YSA9IHsKICB0YXNrczogW3sKICAgICdpZCc6IDEwLAogICAgJ3RpdGxlJzogJ1JlZmFjdG9yIENvZGUnLAogICAgJ2Rlc2MnOiAnUGllIGxpcXVvcmljZSB3YWZlciBjb3R0b24gY2FuZHkgZGFuaXNoLiBJY2luZyB0b3BwaW5nIGplbGx5LW8gaGFsdmFoIHBhc3RyeSBsb2xsaXBvcC4nLAogICAgJ2lzSW1wb3J0YW50JzogdHJ1ZSwKICAgICdpc1N0YXJyZWQnOiBmYWxzZSwKICAgICd0YWdzJzogWydkb2MnLCAnYmFja2VuZCddLAogICAgJ2lzQ29tcGxldGVkJzogZmFsc2UsCiAgICAnaXNUcmFzaGVkJzogZmFsc2UKICB9LCB7CiAgICAnaWQnOiAxMSwKICAgICd0aXRsZSc6ICdTdWJtaXQgUmVwb3J0JywKICAgICdkZXNjJzogJ0RvbnV0IHRhcnQgdG9mZmVlIGNha2UgY29va2llIGdpbmdlcmJyZWFkLiBTZXNhbWUgc25hcHMgYnJvd25pZSBzdWdhciBwbHVtIGNhbmR5IGNhbmVzIG11ZmZpbiBjb3R0b24gY2FuZHkuJywKICAgICdpc0ltcG9ydGFudCc6IGZhbHNlLAogICAgJ2lzU3RhcnJlZCc6IHRydWUsCiAgICAndGFncyc6IFsnZnJvbnRlbmQnLCAnZG9jJ10sCiAgICAnaXNDb21wbGV0ZWQnOiBmYWxzZSwKICAgICdpc1RyYXNoZWQnOiBmYWxzZQogIH0sIHsKICAgICdpZCc6IDE1LAogICAgJ3RpdGxlJzogJ1NlbmQgUFBUIPCfjoEnLAogICAgJ2Rlc2MnOiAnRHJhZ8OpZSBndW1taSBiZWFycyB0aXJhbWlzdSBicm93bmllIGNvb2tpZS4gSmVsbHkgYmVhbnMgcHVkZGluZyBtYXJ6aXBhbiBmcnVpdGNha2UgbXVmZmluLiBXYWZlciBndW1taSBiZWFycyBsb2xsaXBvcCBwdWRkaW5nIGxvbGxpcG9wIGJpc2N1aXQuJywKICAgICdpc0ltcG9ydGFudCc6IHRydWUsCiAgICAnaXNTdGFycmVkJzogdHJ1ZSwKICAgICd0YWdzJzogWydiYWNrZW5kJywgJ2RvYyddLAogICAgJ2lzQ29tcGxldGVkJzogZmFsc2UsCiAgICAnaXNUcmFzaGVkJzogZmFsc2UKICB9LCB7CiAgICAnaWQnOiAxOCwKICAgICd0aXRsZSc6ICdTa3lwZSBUb21teScsCiAgICAnZGVzYyc6ICdUYXJ0IG9hdCBjYWtlIHNlc2FtZSBzbmFwcyBsb2xsaXBvcCBjcm9pc3NhbnQgY2FrZSBiaXNjdWl0LicsCiAgICAnaXNJbXBvcnRhbnQnOiBmYWxzZSwKICAgICdpc1N0YXJyZWQnOiBmYWxzZSwKICAgICd0YWdzJzogWydidWcnXSwKICAgICdpc0NvbXBsZXRlZCc6IHRydWUsCiAgICAnaXNUcmFzaGVkJzogZmFsc2UKICB9LCB7CiAgICAnaWQnOiAyMCwKICAgICd0aXRsZSc6ICdQaWNrIHVwIE5hdGFzaGEg8J+YgScsCiAgICAnZGVzYyc6ICdTd2VldCByb2xsIHRvZmZlZSBkcmFnw6llIGNvdHRvbiBjYW5keSBqZWxseSBiZWFucyBoYWx2YWggZ2luZ2VyYnJlYWQgamVsbHktby4gSWNlIGNyZWFtIGJlYXIgY2xhdyBzdWdhciBwbHVtIHBvd2Rlci4nLAogICAgJ2lzSW1wb3J0YW50JzogdHJ1ZSwKICAgICdpc1N0YXJyZWQnOiB0cnVlLAogICAgJ3RhZ3MnOiBbXSwKICAgICdpc0NvbXBsZXRlZCc6IGZhbHNlLAogICAgJ2lzVHJhc2hlZCc6IGZhbHNlCiAgfSwgewogICAgJ2lkJzogMjMsCiAgICAndGl0bGUnOiAnTWVldCBKYW5lIOKdpO+4jycsCiAgICAnZGVzYyc6ICdUb2ZmZWUgc3VnYXIgcGx1bSBvYXQgY2FrZSB0aXJhbWlzdSB0YXJ0IGJvbmJvbiBnaW5nZXJicmVhZCBjaGVlc2VjYWtlIGNha2UuICcsCiAgICAnaXNJbXBvcnRhbnQnOiB0cnVlLAogICAgJ2lzU3RhcnJlZCc6IHRydWUsCiAgICAndGFncyc6IFsnZnJvbnRlbmQnLCAnYmFja2VuZCcsICdkb2MnXSwKICAgICdpc0NvbXBsZXRlZCc6IGZhbHNlLAogICAgJ2lzVHJhc2hlZCc6IGZhbHNlCiAgfSwgewogICAgJ2lkJzogMjUsCiAgICAndGl0bGUnOiAnUHJvbW90IFByb2R1Y3RzJywKICAgICdkZXNjJzogJ0d1bW1pIGJlYXJzIGJlYXIgY2xhdyBjYWtlIHRpcmFtaXN1IGd1bW1pZXMgdGlyYW1pc3UgYXBwbGUgcGllIGNob2NvbGF0ZSBqdWp1YmVzLiAnLAogICAgJ2lzSW1wb3J0YW50JzogdHJ1ZSwKICAgICdpc1N0YXJyZWQnOiBmYWxzZSwKICAgICd0YWdzJzogW10sCiAgICAnaXNDb21wbGV0ZWQnOiBmYWxzZSwKICAgICdpc1RyYXNoZWQnOiB0cnVlCiAgfSwgewogICAgJ2lkJzogMjgsCiAgICAndGl0bGUnOiAnRml4IFByb2plY3QnLAogICAgJ2Rlc2MnOiAnQ29va2llIGZydWl0Y2FrZSBtYWNhcm9vbiBtdWZmaW4gYXBwbGUgcGllIGNob2NvbGF0ZSBiYXIgdG9mZmVlIG9hdCBjYWtlLiBJY2luZyBjaG9jb2xhdGUgZGFuaXNoLicsCiAgICAnaXNJbXBvcnRhbnQnOiBmYWxzZSwKICAgICdpc1N0YXJyZWQnOiBmYWxzZSwKICAgICd0YWdzJzogWydiYWNrZW5kJ10sCiAgICAnaXNDb21wbGV0ZWQnOiBmYWxzZSwKICAgICdpc1RyYXNoZWQnOiB0cnVlCiAgfSwgewogICAgJ2lkJzogMjksCiAgICAndGl0bGUnOiAnUmVtb3ZlIHJlZHVuZGFudCBmaWxlcycsCiAgICAnZGVzYyc6ICdCcm93bmllIGplbGx5IGJlYW5zIHRvb3RzaWUgcm9sbCBicm93bmllIG1hcnNobWFsbG93LiBTZXNhbWUgc25hcHMgaGFsdmFoIG1hcnppcGFuIGNob2NvbGF0ZSBjYWtlLiBJY2luZyBiZWFyIGNsYXcgcGllIGFwcGxlIHBpZS4nLAogICAgJ2lzSW1wb3J0YW50JzogZmFsc2UsCiAgICAnaXNTdGFycmVkJzogZmFsc2UsCiAgICAndGFncyc6IFtdLAogICAgJ2lzQ29tcGxldGVkJzogdHJ1ZSwKICAgICdpc1RyYXNoZWQnOiB0cnVlCiAgfSwgewogICAgJ2lkJzogMzMsCiAgICAndGl0bGUnOiAnRml4IFJlc3BvbnNpdmVuZXNzIPCfkrsnLAogICAgJ2Rlc2MnOiAnSmVsbHkgdG9wcGluZyB0b2ZmZWUgYmVhciBjbGF3LiBTZXNhbWUgc25hcHMgbG9sbGlwb3AgbWFjYXJvb24gY3JvaXNzYW50IGNoZWVzZWNha2UgcGFzdHJ5IGN1cGNha2UuJywKICAgICdpc0ltcG9ydGFudCc6IHRydWUsCiAgICAnaXNTdGFycmVkJzogZmFsc2UsCiAgICAndGFncyc6IFsnZnJvbnRlbmQnXSwKICAgICdpc0NvbXBsZXRlZCc6IGZhbHNlLAogICAgJ2lzVHJhc2hlZCc6IGZhbHNlCiAgfV0sCiAgdGFza1RhZ3M6IFt7CiAgICBpZDogNSwKICAgIHRleHQ6ICdGcm9udGVuZCcsCiAgICB2YWx1ZTogJ2Zyb250ZW5kJywKICAgIGNvbG9yOiAncHJpbWFyeScKICB9LCB7CiAgICBpZDogNywKICAgIHRleHQ6ICdCYWNrZW5kJywKICAgIHZhbHVlOiAnYmFja2VuZCcsCiAgICBjb2xvcjogJ3dhcm5pbmcnCiAgfSwgewogICAgaWQ6IDgsCiAgICB0ZXh0OiAnRG9jJywKICAgIHZhbHVlOiAnZG9jJywKICAgIGNvbG9yOiAnc3VjY2VzcycKICB9LCB7CiAgICBpZDogMTEsCiAgICB0ZXh0OiAnQnVnJywKICAgIHZhbHVlOiAnYnVnJywKICAgIGNvbG9yOiAnZGFuZ2VyJwogIH1dCn07IC8vIFBPU1QgOiBBZGQgbmV3IFRhc2tzCgptb2NrLm9uUG9zdCgnL2FwaS9hcHBzL3Jldmlld3MvdGFza3MvJykucmVwbHkoZnVuY3Rpb24gKHJlcXVlc3QpIHsKICAvLyBHZXQgdGFzayBmcm9tIHBvc3QgZGF0YQogIHZhciB0YXNrID0gSlNPTi5wYXJzZShyZXF1ZXN0LmRhdGEpLnRhc2s7CiAgdmFyIGxlbmd0aCA9IGRhdGEudGFza3MubGVuZ3RoOwogIHZhciBsYXN0SW5kZXggPSAwOwoKICBpZiAobGVuZ3RoKSB7CiAgICBsYXN0SW5kZXggPSBkYXRhLnRhc2tzW2xlbmd0aCAtIDFdLmlkOwogIH0KCiAgdGFzay5pZCA9IGxhc3RJbmRleCArIDE7CiAgZGF0YS50YXNrcy5wdXNoKHRhc2spOwogIHJldHVybiBbMjAxLCB7CiAgICBpZDogdGFzay5pZAogIH1dOwp9KTsgLy8gR0VUOiBGZXRjaCBUb2RvcwoKbW9jay5vbkdldCgnYXBpL2FwcHMvcmV2aWV3cy90YXNrcycpLnJlcGx5KGZ1bmN0aW9uIChyZXF1ZXN0KSB7CiAgdmFyIGZpbHRlciA9IHJlcXVlc3QucGFyYW1zLmZpbHRlcjsKICB2YXIgZmlsdGVyZWRUYXNrcyA9IGRhdGEudGFza3MuZmlsdGVyKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAvLyBJZiBmaWx0ZXIgPT0gYWxsCiAgICBpZiAoZmlsdGVyID09PSAnYWxsJykgcmV0dXJuICF0YXNrLmlzVHJhc2hlZDsgLy8gSWYgZmlsdGVyID09IHN0YXJyZWQKCiAgICBpZiAoZmlsdGVyID09PSAnc3RhcnJlZCcpIHJldHVybiAhdGFzay5pc1RyYXNoZWQgJiYgdGFzay5pc1N0YXJyZWQ7IC8vIElmIGZpbHRlciA9PSBpbXBvcnRhbnQKCiAgICBpZiAoZmlsdGVyID09PSAnaW1wb3J0YW50JykgcmV0dXJuICF0YXNrLmlzVHJhc2hlZCAmJiB0YXNrLmlzSW1wb3J0YW50OyAvLyBJZiBmaWx0ZXIgPT0gY29tcGxldGVkCgogICAgaWYgKGZpbHRlciA9PT0gJ2NvbXBsZXRlZCcpIHJldHVybiAhdGFzay5pc1RyYXNoZWQgJiYgdGFzay5pc0NvbXBsZXRlZDsgLy8gSWYgZmlsdGVyID09IHRyYXNoZWQKCiAgICBpZiAoZmlsdGVyID09PSAndHJhc2hlZCcpIHJldHVybiB0YXNrLmlzVHJhc2hlZDtlbHNlIHJldHVybiB0YXNrLnRhZ3MuaW5jbHVkZXMoZmlsdGVyKTsKICB9KTsKICByZXR1cm4gWzIwMCwgSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShmaWx0ZXJlZFRhc2tzKSkucmV2ZXJzZSgpXTsKfSk7IC8vIEdFVDogRmV0Y2ggdGFncwoKbW9jay5vbkdldCgnYXBpL2FwcHMvdG9kby90YWdzJykucmVwbHkoZnVuY3Rpb24gKCkgewogIHJldHVybiBbMjAwLCBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEudGFza1RhZ3MpKV07Cn0pOyAvLyBQT1NUOiBVcGRhdGUgVGFzawoKbW9jay5vblBvc3QoL1wvYXBpXC9hcHBzXC90b2RvXC90YXNrXC9cZCsvKS5yZXBseShmdW5jdGlvbiAocmVxdWVzdCkgewogIHZhciB0YXNrSWQgPSByZXF1ZXN0LnVybC5zdWJzdHJpbmcocmVxdWVzdC51cmwubGFzdEluZGV4T2YoJy8nKSArIDEpOwogIHZhciB0YXNrID0gZGF0YS50YXNrcy5maW5kKGZ1bmN0aW9uICh0YXNrKSB7CiAgICByZXR1cm4gdGFzay5pZCA9PSB0YXNrSWQ7CiAgfSk7IC8vIHRhc2sudGl0bGUgPSBKU09OLnBhcnNlKHJlcXVlc3QuZGF0YSkudGFzay50aXRsZQoKICBPYmplY3QuYXNzaWduKHRhc2ssIEpTT04ucGFyc2UocmVxdWVzdC5kYXRhKS50YXNrKTsKICByZXR1cm4gWzIwMCwgdGFza107Cn0pOw=="},{"version":3,"sources":["/Users/crocslut/Desktop/abj_cloud_assessment/src/fake-db/data/apps/todo/index.js"],"names":["mock","data","tasks","taskTags","id","text","value","color","onPost","reply","request","task","JSON","parse","length","lastIndex","push","onGet","filter","params","filteredTasks","isTrashed","isStarred","isImportant","isCompleted","tags","includes","stringify","reverse","taskId","url","substring","lastIndexOf","find","Object","assign"],"mappings":"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","sourcesContent":["import mock from '@/fake-db/mock.js'\n\n// Contact\nconst data = {\n  tasks: [\n    {\n      'id': 10,\n      'title': 'Refactor Code',\n      'desc': 'Pie liquorice wafer cotton candy danish. Icing topping jelly-o halvah pastry lollipop.',\n      'isImportant': true,\n      'isStarred': false,\n      'tags': ['doc', 'backend'],\n      'isCompleted': false,\n      'isTrashed': false\n    },\n    {\n      'id': 11,\n      'title': 'Submit Report',\n      'desc': 'Donut tart toffee cake cookie gingerbread. Sesame snaps brownie sugar plum candy canes muffin cotton candy.',\n      'isImportant': false,\n      'isStarred': true,\n      'tags': ['frontend', 'doc'],\n      'isCompleted': false,\n      'isTrashed': false\n    },\n    {\n      'id': 15,\n      'title': 'Send PPT 🎁',\n      'desc': 'Dragée gummi bears tiramisu brownie cookie. Jelly beans pudding marzipan fruitcake muffin. Wafer gummi bears lollipop pudding lollipop biscuit.',\n      'isImportant': true,\n      'isStarred': true,\n      'tags': ['backend', 'doc'],\n      'isCompleted': false,\n      'isTrashed': false\n    },\n    {\n      'id': 18,\n      'title': 'Skype Tommy',\n      'desc': 'Tart oat cake sesame snaps lollipop croissant cake biscuit.',\n      'isImportant': false,\n      'isStarred': false,\n      'tags': ['bug'],\n      'isCompleted': true,\n      'isTrashed': false\n    },\n    {\n      'id': 20,\n      'title': 'Pick up Natasha 😁',\n      'desc': 'Sweet roll toffee dragée cotton candy jelly beans halvah gingerbread jelly-o. Ice cream bear claw sugar plum powder.',\n      'isImportant': true,\n      'isStarred': true,\n      'tags': [],\n      'isCompleted': false,\n      'isTrashed': false\n    },\n    {\n      'id': 23,\n      'title': 'Meet Jane ❤️',\n      'desc': 'Toffee sugar plum oat cake tiramisu tart bonbon gingerbread cheesecake cake. ',\n      'isImportant': true,\n      'isStarred': true,\n      'tags': ['frontend', 'backend', 'doc'],\n      'isCompleted': false,\n      'isTrashed': false\n    },\n    {\n      'id': 25,\n      'title': 'Promot Products',\n      'desc': 'Gummi bears bear claw cake tiramisu gummies tiramisu apple pie chocolate jujubes. ',\n      'isImportant': true,\n      'isStarred': false,\n      'tags': [],\n      'isCompleted': false,\n      'isTrashed': true\n    },\n    {\n      'id': 28,\n      'title': 'Fix Project',\n      'desc': 'Cookie fruitcake macaroon muffin apple pie chocolate bar toffee oat cake. Icing chocolate danish.',\n      'isImportant': false,\n      'isStarred': false,\n      'tags': ['backend'],\n      'isCompleted': false,\n      'isTrashed': true\n    },\n    {\n      'id': 29,\n      'title': 'Remove redundant files',\n      'desc': 'Brownie jelly beans tootsie roll brownie marshmallow. Sesame snaps halvah marzipan chocolate cake. Icing bear claw pie apple pie.',\n      'isImportant': false,\n      'isStarred': false,\n      'tags': [],\n      'isCompleted': true,\n      'isTrashed': true\n    },\n    {\n      'id': 33,\n      'title': 'Fix Responsiveness 💻',\n      'desc': 'Jelly topping toffee bear claw. Sesame snaps lollipop macaroon croissant cheesecake pastry cupcake.',\n      'isImportant': true,\n      'isStarred': false,\n      'tags': ['frontend'],\n      'isCompleted': false,\n      'isTrashed': false\n    }\n  ],\n  taskTags: [\n    {\n      id: 5,\n      text: 'Frontend',\n      value : 'frontend',\n      color: 'primary'\n    },\n    {\n      id: 7,\n      text: 'Backend',\n      value: 'backend',\n      color: 'warning'\n    },\n    {\n      id: 8,\n      text: 'Doc',\n      value: 'doc',\n      color: 'success'\n    },\n    {\n      id: 11,\n      text: 'Bug',\n      value: 'bug',\n      color: 'danger'\n    }\n  ]\n}\n\n// POST : Add new Tasks\nmock.onPost('/api/apps/reviews/tasks/').reply((request) => {\n\n  // Get task from post data\n  const task = JSON.parse(request.data).task\n\n  const length = data.tasks.length\n  let lastIndex = 0\n  if (length) {\n    lastIndex = data.tasks[length - 1].id\n  }\n  task.id = lastIndex + 1\n\n  data.tasks.push(task)\n\n  return [201, {id: task.id}]\n})\n\n// GET: Fetch Todos\nmock.onGet('api/apps/reviews/tasks').reply((request) => {\n\n  const filter = request.params.filter\n\n  const filteredTasks = data.tasks.filter((task) => {\n\n    // If filter == all\n    if (filter === 'all') return !task.isTrashed\n\n    // If filter == starred\n    if (filter === 'starred') return !task.isTrashed && task.isStarred\n\n    // If filter == important\n    if (filter === 'important') return !task.isTrashed && task.isImportant\n\n    // If filter == completed\n    if (filter === 'completed') return !task.isTrashed && task.isCompleted\n\n    // If filter == trashed\n    if (filter === 'trashed') return task.isTrashed\n\n    else return task.tags.includes(filter)\n\n  })\n\n\n  return [200, JSON.parse(JSON.stringify(filteredTasks)).reverse()]\n})\n\n// GET: Fetch tags\nmock.onGet('api/apps/todo/tags').reply(() => {\n  return [200, JSON.parse(JSON.stringify(data.taskTags))]\n})\n\n// POST: Update Task\nmock.onPost(/\\/api\\/apps\\/todo\\/task\\/\\d+/).reply((request) => {\n\n  const taskId = request.url.substring(request.url.lastIndexOf('/') + 1)\n\n  const task = data.tasks.find((task) => task.id == taskId)\n  // task.title = JSON.parse(request.data).task.title\n  Object.assign(task, JSON.parse(request.data).task)\n\n  return [200, task]\n})\n"]}]}