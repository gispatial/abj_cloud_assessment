{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/tree/TreeSearchTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/views/components/extra-components/tree/TreeSearchTree.vue","mtime":1634797132158},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2Nyb2NzbHV0L0Rlc2t0b3AvYWJqX2Nsb3VkX2Fzc2Vzc21lbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IFZUcmVlLCBWU2VsZWN0VHJlZSB9IGZyb20gJ3Z1ZS10cmVlLWhhbG93ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlYXJjaHdvcmQ6ICcnLAogICAgICB0cmVlRGF0YTogW3sKICAgICAgICB0aXRsZTogJ25vZGUxJywKICAgICAgICBleHBhbmRlZDogdHJ1ZSwKICAgICAgICBjaGlsZHJlbjogW3sKICAgICAgICAgIHRpdGxlOiAnbm9kZSAxLTEnLAogICAgICAgICAgZXhwYW5kZWQ6IHRydWUsCiAgICAgICAgICBjaGlsZHJlbjogW3sKICAgICAgICAgICAgdGl0bGU6ICdub2RlIDEtMS0xJwogICAgICAgICAgfSwgewogICAgICAgICAgICB0aXRsZTogJ25vZGUgMS0xLTInCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHRpdGxlOiAnbm9kZSAxLTEtMycKICAgICAgICAgIH1dCiAgICAgICAgfSwgewogICAgICAgICAgdGl0bGU6ICdub2RlIDEtMicsCiAgICAgICAgICBjaGlsZHJlbjogW3sKICAgICAgICAgICAgdGl0bGU6ICI8c3BhbiBzdHlsZT0nY29sb3I6IHJlZCc+bm9kZSAxLTItMTwvc3Bhbj4iCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIHRpdGxlOiAiPHNwYW4gc3R5bGU9J2NvbG9yOiByZWQnPm5vZGUgMS0yLTI8L3NwYW4+IgogICAgICAgICAgfV0KICAgICAgICB9XQogICAgICB9XQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlYXJjaDogZnVuY3Rpb24gc2VhcmNoKCkgewogICAgICB0aGlzLiRyZWZzLnRyZWUuc2VhcmNoTm9kZXModGhpcy5zZWFyY2h3b3JkKTsKICAgIH0sCiAgICB0cGw6IGZ1bmN0aW9uIHRwbCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBoID0gdGhpcy4kY3JlYXRlRWxlbWVudDsKCiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICAgIH0KCiAgICAgIHZhciBub2RlID0gYXJnc1swXSwKICAgICAgICAgIHBhcmVudCA9IGFyZ3NbMl0sCiAgICAgICAgICBpbmRleCA9IGFyZ3NbM107CiAgICAgIHZhciB0aXRsZUNsYXNzID0gbm9kZS5zZWxlY3RlZCA/ICdub2RlLXRpdGxlIG5vZGUtc2VsZWN0ZWQnIDogJ25vZGUtdGl0bGUnOwogICAgICBpZiAobm9kZS5zZWFyY2hlZCkgdGl0bGVDbGFzcyArPSAnIG5vZGUtc2VhcmNoZWQnOwogICAgICByZXR1cm4gaCgic3BhbiIsIFtoKCJzcGFuIiwgewogICAgICAgICJjbGFzcyI6ICJ0cmVlLWV4cGFuZCIsCiAgICAgICAgIm9uIjogewogICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soKSB7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy4kcmVmcy50cmVlLmFkZE5vZGUobm9kZSwgewogICAgICAgICAgICAgIHRpdGxlOiAnc3luYyBub2RlJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIFsiKyJdKSwgaCgic3BhbiIsIHsKICAgICAgICAiY2xhc3MiOiB0aXRsZUNsYXNzLAogICAgICAgICJkb21Qcm9wcyI6IHsKICAgICAgICAgICJpbm5lckhUTUwiOiBub2RlLnRpdGxlCiAgICAgICAgfSwKICAgICAgICAib24iOiB7CiAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygpIHsKICAgICAgICAgICAgX3RoaXMuJHJlZnMudHJlZS5ub2RlU2VsZWN0ZWQobm9kZSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KSwgaCgiYnV0dG9uIiwgewogICAgICAgICJjbGFzcyI6ICJidG4tYXN5bmMgdGV4dC13YXJuaW5nIGJvcmRlci1ub25lIGN1cnNvci1wb2ludGVyIHB4LTIgcHktMSBtci0yIHJvdW5kZWQiLAogICAgICAgICJvbiI6IHsKICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCkgewogICAgICAgICAgICByZXR1cm4gX3RoaXMuYXN5bmNMb2FkKG5vZGUpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgWyJhc3luYyJdKSwgaCgiYnV0dG9uIiwgewogICAgICAgICJjbGFzcyI6ICJidG4tZGVsZXRlIHRleHQtZGFuZ2VyIGJvcmRlci1ub25lIGN1cnNvci1wb2ludGVyIHB4LTIgcHktMSByb3VuZGVkIiwKICAgICAgICAib24iOiB7CiAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRyZWZzLnRyZWUuZGVsTm9kZShub2RlLCBwYXJlbnQsIGluZGV4KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIFsiZGVsZXRlIl0pXSk7CiAgICB9LAogICAgYXN5bmNMb2FkOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfYXN5bmNMb2FkID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKG5vZGUpIHsKICAgICAgICB2YXIgX25vZGUkY2hlY2tlZCwgY2hlY2tlZCwgcHJvOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfbm9kZSRjaGVja2VkID0gbm9kZS5jaGVja2VkLCBjaGVja2VkID0gX25vZGUkY2hlY2tlZCA9PT0gdm9pZCAwID8gZmFsc2UgOiBfbm9kZSRjaGVja2VkOwogICAgICAgICAgICAgICAgdGhpcy4kc2V0KG5vZGUsICdsb2FkaW5nJywgdHJ1ZSk7CiAgICAgICAgICAgICAgICBwcm8gPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHJlc29sdmUsIDIwMDAsIFsnYXN5bmMgbm9kZTEnLCAnYXN5bmMgbm9kZTInXSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gdGhpcy4kcmVmcy50cmVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDEgPSBub2RlOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gcHJvOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dC50MiA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgX2NvbnRleHQudDAuYWRkTm9kZXMuY2FsbChfY29udGV4dC50MCwgX2NvbnRleHQudDEsIF9jb250ZXh0LnQyKTsKCiAgICAgICAgICAgICAgICB0aGlzLiRzZXQobm9kZSwgJ2xvYWRpbmcnLCBmYWxzZSk7CgogICAgICAgICAgICAgICAgaWYgKGNoZWNrZWQpIHsKICAgICAgICAgICAgICAgICAgdGhpcy4kcmVmcy50cmVlLmNoaWxkQ2hlY2tlZEhhbmRsZShub2RlLCBjaGVja2VkKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBhc3luY0xvYWQoX3gpIHsKICAgICAgICByZXR1cm4gX2FzeW5jTG9hZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gYXN5bmNMb2FkOwogICAgfSgpCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBWVHJlZTogVlRyZWUsCiAgICBWU2VsZWN0VHJlZTogVlNlbGVjdFRyZWUKICB9Cn07"},{"version":3,"sources":["TreeSearchTree.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <vx-card title=\"Search Tree\" code-toggler>\n    <vs-input class=\"inputx tree-search-input float-left mr-2\" placeholder=\"Search...\" v-model.lazy=\"searchword\" />\n    <vs-button color=\"primary\" type=\"filled\" @click=\"search\" class=\"mb-3\">Search</vs-button>\n    <v-tree ref='tree' :canDeleteRoot=\"true\" :data='treeData' :draggable='true' :tpl='tpl' :halfcheck='true' :multiple=\"true\"/>\n\n    <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;vs-input class=&quot;inputx tree-search-input float-left mr-2&quot; placeholder=&quot;Search...&quot; v-model.lazy=&quot;searchword&quot; /&gt;\n  &lt;vs-button color=&quot;primary&quot; type=&quot;filled&quot; @click=&quot;search&quot; class=&quot;mb-3&quot;&gt;Search&lt;/vs-button&gt;\n  &lt;v-tree ref=&apos;tree&apos; :canDeleteRoot=&quot;true&quot; :data=&apos;treeData&apos; :draggable=&apos;true&apos; :tpl=&apos;tpl&apos; :halfcheck=&apos;true&apos; :multiple=&quot;true&quot;/&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { VTree, VSelectTree}  from &apos;vue-tree-halower&apos;\n\nexport default {\n  data() {\n    return {\n      searchword: &apos;&apos;,\n      treeData: [{\n        title: &apos;node1&apos;,\n        expanded: true,\n        children: [{\n          title: &apos;node 1-1&apos;,\n          expanded: true,\n          children: [{\n            title: &apos;node 1-1-1&apos;\n          }, {\n            title: &apos;node 1-1-2&apos;\n          }, {\n            title: &apos;node 1-1-3&apos;\n          }]\n        }, {\n          title: &apos;node 1-2&apos;,\n          children: [{\n            title: &quot;&lt;span style=&apos;color: red&apos;&gt;node 1-2-1&lt;/span&gt;&quot;\n          }, {\n            title: &quot;&lt;span style=&apos;color: red&apos;&gt;node 1-2-2&lt;/span&gt;&quot;\n          }]\n        }]\n      }]\n    }\n  },\n  methods: {\n    search () {\n      this.$refs.tree.searchNodes(this.searchword)\n    },\n    tpl (...args) {\n      let {0: node, 2: parent, 3: index} = args\n      let titleClass = node.selected ? &apos;node-title node-selected&apos; : &apos;node-title&apos;\n      if (node.searched) titleClass += &apos; node-searched&apos;\n      return &lt;span&gt;\n        &lt;span class=&quot;tree-expand&quot; onClick={() =&gt; this.$refs.tree.addNode(node, {title: &apos;sync node&apos;})}&gt;+&lt;/span&gt;\n         &lt;span class={titleClass} domPropsInnerHTML={node.title} onClick={() =&gt; {\n           this.$refs.tree.nodeSelected(node)\n         }}&gt;&lt;/span&gt;\n      &lt;button class=&quot;btn-async text-warning border-none cursor-pointer px-2 py-1 mr-2 rounded&quot; onClick={() =&gt; this.asyncLoad(node)}&gt;async&lt;/button&gt;\n      &lt;button class=&quot;btn-delete text-danger border-none cursor-pointer px-2 py-1 rounded&quot; onClick={() =&gt; this.$refs.tree.delNode(node, parent, index)}&gt;delete&lt;/button&gt;\n      &lt;/span&gt;\n    },\n    async asyncLoad (node) {\n      const {checked = false} = node\n      this.$set(node, &apos;loading&apos;, true)\n      let pro = new Promise(resolve =&gt; {\n        setTimeout(resolve, 2000, [&apos;async node1&apos;, &apos;async node2&apos;])\n      })\n      this.$refs.tree.addNodes(node, await pro)\n      this.$set(node, &apos;loading&apos;, false)\n      if (checked) {\n        this.$refs.tree.childCheckedHandle(node, checked)\n      }\n    },\n  },\n  components: {\n    VTree,\n    VSelectTree\n  }\n}\n&lt;/script&gt;\n\n&lt;style lang=&quot;scss&quot;&gt;\n@import &quot;@/assets/scss/vuexy/extraComponents/tree.scss&quot;;\n\nbutton.btn-async{\n  background: rgba(var(--vs-warning),0.15);\n}\n\nbutton.btn-delete{\n  background: rgba(var(--vs-danger),0.15);\n}\n&lt;/style&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nimport { VTree, VSelectTree}  from 'vue-tree-halower'\n\nexport default {\n  data() {\n    return {\n      searchword: '',\n      treeData: [{\n        title: 'node1',\n        expanded: true,\n        children: [{\n          title: 'node 1-1',\n          expanded: true,\n          children: [{\n            title: 'node 1-1-1'\n          }, {\n            title: 'node 1-1-2'\n          }, {\n            title: 'node 1-1-3'\n          }]\n        }, {\n          title: 'node 1-2',\n          children: [{\n            title: \"<span style='color: red'>node 1-2-1</span>\"\n          }, {\n            title: \"<span style='color: red'>node 1-2-2</span>\"\n          }]\n        }]\n      }]\n    }\n  },\n  methods: {\n    search () {\n      this.$refs.tree.searchNodes(this.searchword)\n    },\n    tpl (...args) {\n      let {0: node, 2: parent, 3: index} = args\n      let titleClass = node.selected ? 'node-title node-selected' : 'node-title'\n      if (node.searched) titleClass += ' node-searched'\n      return <span>\n        <span class=\"tree-expand\" onClick={() => this.$refs.tree.addNode(node, {title: 'sync node'})}>+</span>\n         <span class={titleClass} domPropsInnerHTML={node.title} onClick={() => {\n           this.$refs.tree.nodeSelected(node)\n         }}></span>\n      <button class=\"btn-async text-warning border-none cursor-pointer px-2 py-1 mr-2 rounded\" onClick={() => this.asyncLoad(node)}>async</button>\n      <button class=\"btn-delete text-danger border-none cursor-pointer px-2 py-1 rounded\" onClick={() => this.$refs.tree.delNode(node, parent, index)}>delete</button>\n      </span>\n    },\n    async asyncLoad (node) {\n      const {checked = false} = node\n      this.$set(node, 'loading', true)\n      let pro = new Promise(resolve => {\n        setTimeout(resolve, 2000, ['async node1', 'async node2'])\n      })\n      this.$refs.tree.addNodes(node, await pro)\n      this.$set(node, 'loading', false)\n      if (checked) {\n        this.$refs.tree.childCheckedHandle(node, checked)\n      }\n    },\n  },\n  components: {\n    VTree,\n    VSelectTree\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/extraComponents/tree.scss\";\n\nbutton.btn-async{\n  background: rgba(var(--vs-warning),0.15);\n}\n\nbutton.btn-delete{\n  background: rgba(var(--vs-danger),0.15);\n}\n</style>\n"],"sourceRoot":"src/views/components/extra-components/tree"}]}