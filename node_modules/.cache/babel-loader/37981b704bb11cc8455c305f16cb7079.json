{"remainingRequest":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Documents/Git/abj_cloud_assessment/src/views/components/vuesax/chip/ChipClosable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/src/views/components/vuesax/chip/ChipClosable.vue","mtime":1634376356447},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGlwczogWydEcmliYmJsZScsICdHaXRIdWInLCAnQmVoYW5jZScsICdWdWVqcycsICdWdWV4eSddCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkgewogICAgICB0aGlzLmNoaXBzID0gWydEcmliYmJsZScsICdHaXRIdWInLCAnQmVoYW5jZScsICdWdWVqcycsICdWdWV4eSddOwogICAgfSwKICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKGl0ZW0pIHsKICAgICAgdGhpcy5jaGlwcy5zcGxpY2UodGhpcy5jaGlwcy5pbmRleE9mKGl0ZW0pLCAxKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ChipClosable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CACA,UADA,EAEA,QAFA,EAGA,SAHA,EAIA,OAJA,EAKA,OALA;AADA,KAAA;AASA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,WAAA,KAAA,GAAA,CACA,UADA,EAEA,QAFA,EAGA,SAHA,EAIA,OAJA,EAKA,OALA,CAAA;AAOA,KATA;AAUA,IAAA,MAVA,kBAUA,IAVA,EAUA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA;AACA;AAZA;AAZA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: ChipClosable.vue\n    Description: For making a chip closable\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Closable\" code-toggler>\n\n        <p>For making a chip closable</p>\n\n        <div class=\"demo-alignment\">\n\n            <vs-button v-if=\"chips.length == 0\" @click=\"reset\" type=\"filled\">Reset Chips</vs-button>\n            <vs-chip @click=\"remove(chip)\" v-for=\"(chip, index) in chips\" :key=\"index\" closable> {{ chip }} </vs-chip>\n\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;div class=&quot;demo-alignment&quot;&gt;\n\n    &lt;vs-button v-if=&quot;chips.length == 0&quot; @click=&quot;reset&quot; type=&quot;filled&quot;&gt;Reset Chips&lt;/vs-button&gt;\n    &lt;vs-chip @click=&quot;remove(chip)&quot; v-for=&quot;(chip, index) in chips&quot; :key=&quot;index&quot; closable&gt; {{ \"\\{\\{ chip \\}\\}\" }}} &lt;/vs-chip&gt;\n\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data(){\n    return {\n      chips:[\n        &apos;Dribbble&apos;,\n        &apos;GitHub&apos;,\n        &apos;Behance&apos;,\n        &apos;Vuejs&apos;,\n        &apos;Vuexy&apos;,\n      ],\n    }\n  },\n  methods: {\n    reset () {\n      this.chips = [\n        &apos;Dribbble&apos;,\n        &apos;GitHub&apos;,\n        &apos;Behance&apos;,\n        &apos;Vuejs&apos;,\n        &apos;Vuexy&apos;,\n      ]\n    },\n    remove (item) {\n      this.chips.splice(this.chips.indexOf(item), 1)\n    }\n  }\n}\n&lt;/script&gt;\n        </template>\n\n    </vx-card>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            chips: [\n                'Dribbble',\n                'GitHub',\n                'Behance',\n                'Vuejs',\n                'Vuexy',\n            ],\n        }\n    },\n    methods: {\n        reset() {\n            this.chips = [\n                'Dribbble',\n                'GitHub',\n                'Behance',\n                'Vuejs',\n                'Vuexy',\n            ]\n        },\n        remove(item) {\n            this.chips.splice(this.chips.indexOf(item), 1)\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/views/components/vuesax/chip"}]}