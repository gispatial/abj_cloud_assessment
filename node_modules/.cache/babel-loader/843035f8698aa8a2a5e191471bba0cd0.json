{"remainingRequest":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Documents/Git/abj_cloud_assessment/src/views/apps/reviews/TodoEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/src/views/apps/reviews/TodoEdit.vue","mtime":1634376405748},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634373319752}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbHRlciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuY29uc3RydWN0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGRpc3BsYXlQcm9tcHQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICB0YXNrSWQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2tMb2NhbDogT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kc3RvcmUuZ2V0dGVyc1sidG9kby9nZXRUYXNrIl0odGhpcy50YXNrSWQpKQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBhY3RpdmVQcm9tcHQ6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuZGlzcGxheVByb21wdDsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsdWUpIHsKICAgICAgICB0aGlzLiRlbWl0KCdoaWRlRGlzcGxheVByb21wdCcsIHZhbHVlKTsKICAgICAgfQogICAgfSwKICAgIHRhc2tUYWdzOiBmdW5jdGlvbiB0YXNrVGFncygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnRvZG8udGFza1RhZ3M7CiAgICB9LAogICAgdmFsaWRhdGVGb3JtOiBmdW5jdGlvbiB2YWxpZGF0ZUZvcm0oKSB7CiAgICAgIHJldHVybiAhdGhpcy5lcnJvcnMuYW55KCkgJiYgdGhpcy50YXNrTG9jYWwudGl0bGUgIT0gJyc7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICByZW1vdmVUb2RvOiBmdW5jdGlvbiByZW1vdmVUb2RvKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goInRvZG8vdXBkYXRlVGFzayIsIE9iamVjdC5hc3NpZ24oe30sIHRoaXMudGFza0xvY2FsLCB7CiAgICAgICAgaXNUcmFzaGVkOiB0cnVlCiAgICAgIH0pKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyBGZXRjaCBUYXNrcwogICAgICAgIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgidG9kby9mZXRjaFRhc2tzIiwgewogICAgICAgICAgZmlsdGVyOiBfdGhpcy4kcm91dGUucGFyYW1zLmZpbHRlcgogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTsKICAgICAgfSk7CiAgICB9LAogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgdGhpcy50YXNrTG9jYWwgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLiRzdG9yZS5nZXR0ZXJzWyJ0b2RvL2dldFRhc2siXSh0aGlzLnRhc2tJZCkpOwogICAgfSwKICAgIHN1Ym1pdFRvZG86IGZ1bmN0aW9uIHN1Ym1pdFRvZG8oKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ0b2RvL3VwZGF0ZVRhc2siLCB0aGlzLnRhc2tMb2NhbCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TodoEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AALA,GADA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,cAAA,EAAA,KAAA,MAAA,CAAA;AADA,KAAA;AAGA,GAfA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,YAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,aAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,KAAA,CAAA,mBAAA,EAAA,KAAA;AACA;AANA,KADA;AASA,IAAA,QATA,sBASA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AACA,KAXA;AAYA,IAAA,YAZA,0BAYA;AACA,aAAA,CAAA,KAAA,MAAA,CAAA,GAAA,EAAA,IAAA,KAAA,SAAA,CAAA,KAAA,IAAA,EAAA;AACA;AAdA,GAhBA;AAgCA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,SAAA,EAAA;AAAA,QAAA,SAAA,EAAA;AAAA,OAAA,CAAA,EACA,IADA,CACA,YAAA;AACA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA;AAAA,UAAA,MAAA,EAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AAAA,SAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AAAA,QAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AAAA,OALA;AAMA,KARA;AASA,IAAA,IATA,kBASA;AACA,WAAA,SAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,cAAA,EAAA,KAAA,MAAA,CAAA,CAAA;AACA,KAXA;AAYA,IAAA,UAZA,wBAYA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,iBAAA,EAAA,KAAA,SAAA;AACA;AAdA;AAhCA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: TodoEdit.vue\n    Description: Edit todo component\n    ----------------------------------------------------------------------------------------\n    Item Name: abjcloudsolutions.com dashboard management portal\n      Author: Justed@Aidy\n    Staging URL: http://tripcarte.gispatial.tech/api\n========================================================================================== -->\n\n\n<template>\n    <vs-prompt\n        title=\"Review (View Only!)\"\n        accept-text= \"Close This Window\"\n        button-cancel = \"border\"\n        @cancel=\"removeTodo\"\n        @accept=\"\"\n        @close=\"init\"\n        :is-valid=\"validateForm\"\n        :active.sync=\"activePrompt\">\n        <div>\n            <form>\n                <div class=\"vx-row\">\n                    <div class=\"vx-col w-1/6 self-center\">\n                    </div>\n\n                    <div class=\"vx-col ml-auto flex\">\n\n                        <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': taskLocal.isStarred}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"taskLocal.isStarred = !taskLocal.isStarred\"></feather-icon>\n\n                        <vs-dropdown class=\"cursor-pointer flex\" vs-custom-content>\n\n                            <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\"></feather-icon>\n\n                            <vs-dropdown-menu style=\"z-index: 200001\">\n                                    <vs-dropdown-item v-for=\"(tag, index) in taskTags\" :key=\"index\">\n                                        <vs-checkbox @click.stop :vs-value=\"tag.value\" v-model=\"taskLocal.tags\">{{ tag.text }}</vs-checkbox>\n                                    </vs-dropdown-item>\n                            </vs-dropdown-menu>\n                        </vs-dropdown>\n                    </div>\n                </div>\n\n                <div class=\"vx-row\">\n                    <div class=\"vx-col w-full\">\n                        <vs-input v-validate=\"'required'\" name=\"title\" class=\"w-full mb-4 mt-5\" placeholder=\"Title\" v-model=\"taskLocal.title\" />\n                        <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"taskLocal.desc\" />\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    </vs-prompt>\n</template>\n\n<script>\nexport default {\n    props: {\n        displayPrompt: {\n            type: Boolean,\n            required: true,\n        },\n        taskId: {\n            type: Number,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            taskLocal: Object.assign({}, this.$store.getters[\"todo/getTask\"](this.taskId))\n        }\n    },\n    computed: {\n        activePrompt: {\n            get() {\n                return this.displayPrompt;\n            },\n            set(value) {\n                this.$emit('hideDisplayPrompt', value);\n            }\n        },\n        taskTags() {\n            return this.$store.state.todo.taskTags;\n        },\n        validateForm() {\n            return !this.errors.any() && this.taskLocal.title != '';\n        }\n    },\n    methods: {\n        removeTodo() {\n          this.$store.dispatch(\"todo/updateTask\", Object.assign({}, this.taskLocal, {isTrashed: true}))\n            .then(() => {\n              // Fetch Tasks\n              this.$store.dispatch(\"todo/fetchTasks\", { filter: this.$route.params.filter })\n            })\n            .catch((error) => { console.error(error) })\n        },\n        init() {\n            this.taskLocal = Object.assign({}, this.$store.getters[\"todo/getTask\"](this.taskId))\n        },\n        submitTodo() {\n            this.$store.dispatch(\"todo/updateTask\", this.taskLocal)\n        }\n    },\n}\n</script>\n"],"sourceRoot":"src/views/apps/reviews"}]}