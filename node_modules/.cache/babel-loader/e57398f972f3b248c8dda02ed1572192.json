{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/crocslut/Desktop/abj_cloud_assessment/src/components/statistics-cards/StatisticsCardLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/components/statistics-cards/StatisticsCardLine.vue","mtime":1634797132078},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634797145766},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634797146168},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/vue-loader/lib/index.js","mtime":1634797150551}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbGwiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5kYXRlLnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuc3BsaXQiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAndnVlLWFwZXhjaGFydHMnOwppbXBvcnQgY2hhcnRDb25maWdzIGZyb20gIi4vY2hhcnRDb25maWdzLmpzIjsKaW1wb3J0IF9jb2xvciBmcm9tICdAL2Fzc2V0cy91dGlscy9jb2xvci5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgaWNvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgc3RhdGlzdGljOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgc3RhdGlzdGljVGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nCiAgICB9LAogICAgY2hhcnREYXRhOiB7Ly8gdHlwZTogQXJyYXksCiAgICAgIC8vIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgY29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncHJpbWFyeScKICAgIH0sCiAgICBjb2xvclRvOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIC8vIGNoYXJ0VHlwZTogewogICAgLy8gICAgIHR5cGU6IFN0cmluZywKICAgIC8vICAgICBkZWZhdWx0OiAnbGluZS1jaGFydCcsCiAgICAvLyB9LAogICAgdHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdsaW5lJwogICAgfSwKICAgIGljb25SaWdodDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGhpZGVDaGFydDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0T3B0aW9uczogbnVsbAogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICB0aGVtZVByaW1hcnlDb2xvcjogZnVuY3Rpb24gdGhlbWVQcmltYXJ5Q29sb3IoKSB7CiAgICAgIHRoaXMuJHJlZnMuYXBleENoYXJ0LnVwZGF0ZU9wdGlvbnMoewogICAgICAgIHRoZW1lOiB7CiAgICAgICAgICBtb25vY2hyb21lOiB7CiAgICAgICAgICAgIGNvbG9yOiB0aGlzLmdldEhleCh0aGlzLmNvbG9yKQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgdGhlbWVQcmltYXJ5Q29sb3I6IGZ1bmN0aW9uIHRoZW1lUHJpbWFyeUNvbG9yKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUudGhlbWVQcmltYXJ5Q29sb3I7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRIZXg6IGZ1bmN0aW9uIGdldEhleChjb2xvcikgewogICAgICBpZiAoX2NvbG9yLmlzQ29sb3IoY29sb3IpKSB7CiAgICAgICAgdmFyIHJnYiA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZSgiLS12cy0iLmNvbmNhdChjb2xvcikpOwogICAgICAgIHJnYiA9IHJnYi5zcGxpdCgiLCIpOwogICAgICAgIHJldHVybiAiIyIgKyAoKDEgPDwgMjQpICsgKE51bWJlcihyZ2JbMF0pIDw8IDE2KSArIChOdW1iZXIocmdiWzFdKSA8PCA4KSArIE51bWJlcihyZ2JbMl0pKS50b1N0cmluZygxNikuc2xpY2UoMSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjb2xvcjsKICAgIH0sCiAgICBncmFkaWVudFRvQ29sb3I6IGZ1bmN0aW9uIGdyYWRpZW50VG9Db2xvcihjb2xvcikgewogICAgICB2YXIgZ3JhZGllbnRUb0NvbG9ycyA9IHsKICAgICAgICAicHJpbWFyeSI6ICIjQTlBMkY2IiwKICAgICAgICAic3VjY2VzcyI6ICIjNTVERDkyIiwKICAgICAgICAid2FybmluZyI6ICIjZmZjMDg1IiwKICAgICAgICAiZGFuZ2VyIjogIiNGOTc3OTQiCiAgICAgIH07CiAgICAgIHJldHVybiBncmFkaWVudFRvQ29sb3JzW2NvbG9yXSA/IGdyYWRpZW50VG9Db2xvcnNbY29sb3JdIDogZ3JhZGllbnRUb0NvbG9yc1sicHJpbWFyeSJdOwogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgVnVlQXBleENoYXJ0czogVnVlQXBleENoYXJ0cwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLnR5cGUgPT0gJ2FyZWEnKSB7CiAgICAgIC8vIGFzc2lnbiBjaGFydCBvcHRpb25zCiAgICAgIHRoaXMuY2hhcnRPcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgY2hhcnRDb25maWdzLmFyZWFDaGFydE9wdGlvbnMpOwogICAgICB0aGlzLmNoYXJ0T3B0aW9uc1sndGhlbWUnXSA9IHsKICAgICAgICBtb25vY2hyb21lOiB7CiAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgY29sb3I6IHRoaXMuZ2V0SGV4KHRoaXMuY29sb3IpLAogICAgICAgICAgc2hhZGVUbzogJ2xpZ2h0JywKICAgICAgICAgIHNoYWRlSW50ZW5zaXR5OiAwLjY1CiAgICAgICAgfQogICAgICB9OwogICAgfSBlbHNlIGlmICh0aGlzLnR5cGUgPT0gImxpbmUiKSB7CiAgICAgIC8vIEFzc2lnbiBjaGFydCBvcHRpb25zCiAgICAgIHRoaXMuY2hhcnRPcHRpb25zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShjaGFydENvbmZpZ3MubGluZUNoYXJ0T3B0aW9ucykpOwogICAgICB0aGlzLmNoYXJ0T3B0aW9ucy5maWxsLmdyYWRpZW50LmdyYWRpZW50VG9Db2xvcnMgPSBbdGhpcy5ncmFkaWVudFRvQ29sb3IodGhpcy5jb2xvclRvIHx8IHRoaXMuY29sb3IpXTsKICAgICAgdGhpcy5jaGFydE9wdGlvbnMuY29sb3JzID0gW3RoaXMuZ2V0SGV4KHRoaXMuY29sb3IpXTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["StatisticsCardLine.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: StatisticsCard.vue\n    Description: Statistics card component\n    ----------------------------------------------------------------------------------------\n  \tItem Name: TDMP - NETQUEST SOLUTIONS SB\n  \tAuthor: TripcarteDev\n  \tAuthor URL: http://tripcarte.gispatial.now.sh/\n========================================================================================== -->\n\n<template>\n    <vx-card class=\"overflow-hidden\">\n        <div slot=\"no-body\">\n            <div class=\"p-6\" :class=\"{\n              'flex justify-between flex-row-reverse items-center': iconRight,\n              'text-center': !iconRight && hideChart,\n              'pb-0': !hideChart\n            }\">\n                <feather-icon :icon=\"icon\" class=\"p-3 inline-flex rounded-full\" :class=\"[`text-${color}`, {'mb-4': !iconRight}]\" :style=\"{background: `rgba(var(--vs-${color}),.15)`}\"></feather-icon>\n                <div class=\"truncate\">\n                    <h2 class=\"mb-1 font-bold\">{{ statistic }}</h2>\n                    <span>{{ statisticTitle }}</span>\n                </div>\n            </div>\n\n            <div class=\"line-area-chart\" v-if=\"!hideChart\">\n                <vue-apex-charts ref=\"apexChart\" :type=\"type\" height=100 width='100%' :options=\"chartOptions\" :series=\"chartData\" />\n            </div>\n        </div>\n    </vx-card>\n</template>\n\n<script>\nimport VueApexCharts from 'vue-apexcharts'\nimport chartConfigs from \"./chartConfigs.js\"\nimport _color from '@/assets/utils/color.js'\n\nexport default{\n    props: {\n        icon: {\n            type: String,\n            required: true\n        },\n        statistic: {\n            type: [Number, String],\n            required: true,\n        },\n        statisticTitle: {\n            type: String,\n        },\n        chartData: {\n            // type: Array,\n            // required: true\n        },\n        color: {\n            type: String,\n            default: 'primary',\n        },\n        colorTo: {\n          type: String\n        },\n        // chartType: {\n        //     type: String,\n        //     default: 'line-chart',\n        // },\n        type: {\n            type: String,\n            default: 'line'\n        },\n        iconRight: {\n            type: Boolean,\n            default: false\n        },\n        hideChart: {\n          type: Boolean,\n          default: false,\n        }\n    },\n    data() {\n      return {\n        chartOptions: null\n      }\n    },\n    watch: {\n        themePrimaryColor() {\n            this.$refs.apexChart.updateOptions({ theme: { monochrome: { color: this.getHex(this.color) } } });\n        }\n    },\n    computed: {\n        themePrimaryColor() {\n            return this.$store.state.themePrimaryColor;\n        }\n    },\n    methods: {\n        getHex(color) {\n            if(_color.isColor(color)) {\n              let rgb  = window.getComputedStyle(document.documentElement).getPropertyValue(`--vs-${color}`);\n              rgb = rgb.split(\",\");\n              return \"#\" + ((1 << 24) + (Number(rgb[0]) << 16) + (Number(rgb[1]) << 8) + Number(rgb[2])).toString(16).slice(1);\n            }\n            return color\n        },\n        gradientToColor(color) {\n          let gradientToColors = {\n            \"primary\": \"#A9A2F6\",\n            \"success\": \"#55DD92\",\n            \"warning\": \"#ffc085\",\n            \"danger\": \"#F97794\"\n          }\n\n          return gradientToColors[color] ? gradientToColors[color] : gradientToColors[\"primary\"]\n        }\n    },\n    components: {\n        VueApexCharts\n    },\n    created() {\n        if(this.type == 'area') {\n            // assign chart options\n            this.chartOptions = Object.assign({}, chartConfigs.areaChartOptions)\n\n            this.chartOptions['theme'] = {\n                monochrome: {\n                    enabled: true,\n                    color: this.getHex(this.color),\n                    shadeTo: 'light',\n                    shadeIntensity: 0.65\n                }\n            }\n        }\n        else if(this.type == \"line\") {\n          // Assign chart options\n          this.chartOptions = JSON.parse(JSON.stringify(chartConfigs.lineChartOptions))\n\n          this.chartOptions.fill.gradient.gradientToColors = [this.gradientToColor(this.colorTo || this.color)]\n          this.chartOptions.colors = [this.getHex(this.color)]\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/components/statistics-cards"}]}