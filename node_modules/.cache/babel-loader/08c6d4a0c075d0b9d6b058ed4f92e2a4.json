{"remainingRequest":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Documents/Git/abj_cloud_assessment/src/store/auth/moduleAuthActions.js","dependencies":[{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/src/store/auth/moduleAuthActions.js","mtime":1634376405671},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Documents/Git/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Lyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQogIEZpbGUgTmFtZTogbW9kdWxlQXV0aEFjdGlvbnMuanMKICBEZXNjcmlwdGlvbjogQXV0aCBNb2R1bGUgQWN0aW9ucwogIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICBJdGVtIE5hbWU6IGFiamNsb3Vkc29sdXRpb25zLmNvbSBkYXNoYm9hcmQgbWFuYWdlbWVudCBwb3J0YWwKICAgIEF1dGhvcjogSnVzdGVkQEFpZHkKICBTdGFnaW5nIFVSTDogaHR0cDovL3RyaXBjYXJ0ZS5naXNwYXRpYWwudGVjaC9hcGkKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki8KaW1wb3J0IGp3dCBmcm9tICIuLi8uLi9odHRwL3JlcXVlc3RzL2F1dGgvand0L2luZGV4LmpzIjsKaW1wb3J0IHJvdXRlciBmcm9tICdAL3JvdXRlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBsb2dpbkpXVDogZnVuY3Rpb24gbG9naW5KV1QoX3JlZiwgcGF5bG9hZCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgY29tbWl0KCdhdXRoX3JlcXVlc3QnKTsKICAgICAgand0LmxvZ2luKHBheWxvYWQudXNlckRldGFpbHMudXNlcm5hbWUsIHBheWxvYWQudXNlckRldGFpbHMucGFzc3dvcmQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgLy8gSWYgdGhlcmUncyB1c2VyIGRhdGEgaW4gcmVzcG9uc2UKICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09IDIwMCkgewogICAgICAgICAgLy8gTmF2aWdhdGUgVXNlciB0byBob21lcGFnZQogICAgICAgICAgLy9yb3V0ZXIucHVzaChyb3V0ZXIuY3VycmVudFJvdXRlLnF1ZXJ5LnRvIHx8ICcvJykKICAgICAgICAgIC8vIFNldCBhY2Nlc3NUb2tlbgogICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FjY2Vzc1Rva2VuJywgcmVzcG9uc2UuZGF0YVsndG9rZW4nXSk7IC8vIFVwZGF0ZSB1c2VyIGRldGFpbHMKCiAgICAgICAgICBjb21taXQoJ1VQREFURV9VU0VSX0lORk8nLCByZXNwb25zZS5kYXRhLCB7CiAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgIH0pOyAvLyBTZXQgYmVhcmVyIHRva2VuIGluIGF4aW9zCiAgICAgICAgICAvL2NvbW1pdCgiU0VUX0JFQVJFUiIsIHJlc3BvbnNlLmRhdGEuYWNjZXNzVG9rZW4pCgogICAgICAgICAgY29tbWl0KCdhdXRoX3N1Y2Nlc3MnLCByZXNwb25zZS5kYXRhWyd0b2tlbiddKTsgLy8gTmF2aWdhdGUgVXNlciB0byBob21lcGFnZQoKICAgICAgICAgIHJvdXRlci5wdXNoKCcvJyk7CiAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVqZWN0KHsKICAgICAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuJwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBjb21taXQoJ2F1dGhfZXJyb3InKTsKICAgICAgICByZWplY3QoewogICAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSBkb3VibGUtY2hlY2sgeW91ciB1c2VybmFtZSBhbmQgcGFzc3dvcmQuJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgbG9nb3V0OiBmdW5jdGlvbiBsb2dvdXQoX3JlZjIpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBjb21taXQoJ2xvZ291dCcpOwogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnYWNjZXNzVG9rZW4nKTsKICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3VzZXJJbmZvJyk7IC8vIE5hdmlnYXRlIGJhY2sgdG8gTG9naW4gUGFnZQoKICAgICAgcm91dGVyLnB1c2gocm91dGVyLmN1cnJlbnRSb3V0ZS5xdWVyeS50byB8fCAnL3BhZ2VzL2xvZ2luJyk7CiAgICAgIHJlc29sdmUoKTsKICAgIH0pOwogIH0KICAvKgogIHJlZ2lzdGVyVXNlckpXVCh7IGNvbW1pdCB9LCBwYXlsb2FkKSB7CiAgICBjb25zdCB7IGRpc3BsYXlOYW1lLCBlbWFpbCwgcGFzc3dvcmQsIGNvbmZpcm1QYXNzd29yZCB9ID0gcGF5bG9hZC51c2VyRGV0YWlscwogICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlamVjdCkgPT4gewogICAgICAvLyBDaGVjayBjb25maXJtIHBhc3N3b3JkCiAgICAgIGlmKHBhc3N3b3JkICE9PSBjb25maXJtUGFzc3dvcmQpIHsKICAgICAgICByZWplY3Qoe21lc3NhZ2U6ICJQYXNzd29yZCBkb2Vzbid0IG1hdGNoLiBQbGVhc2UgdHJ5IGFnYWluLiJ9KQogICAgICB9CiAgICAgIGp3dC5yZWdpc3RlclVzZXIoZGlzcGxheU5hbWUsIGVtYWlsLCBwYXNzd29yZCkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAvLyBSZWRpcmVjdCBVc2VyCiAgICAgICAgICByb3V0ZXIucHVzaChyb3V0ZXIuY3VycmVudFJvdXRlLnF1ZXJ5LnRvIHx8ICcvJykKICAgICAgICAgIC8vIFVwZGF0ZSBkYXRhIGluIGxvY2FsU3RvcmFnZQogICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oImFjY2Vzc1Rva2VuIiwgcmVzcG9uc2UuZGF0YS5hY2Nlc3NUb2tlbikKICAgICAgICAgIGNvbW1pdCgnVVBEQVRFX1VTRVJfSU5GTycsIHJlc3BvbnNlLmRhdGEudXNlckRhdGEsIHtyb290OiB0cnVlfSkKICAgICAgICAgIHJlc29sdmUocmVzcG9uc2UpCiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZXJyb3IgPT4geyByZWplY3QoZXJyb3IpIH0pCiAgICB9KQogIH0sCiAgZmV0Y2hBY2Nlc3NUb2tlbigpIHsKICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgICBqd3QucmVmcmVzaFRva2VuKCkudGhlbihyZXNwb25zZSA9PiB7IHJlc29sdmUocmVzcG9uc2UpIH0pCiAgICB9KQogIH0KICAqLwoKfTs="},{"version":3,"sources":["/Users/crocslut/Documents/Git/abj_cloud_assessment/src/store/auth/moduleAuthActions.js"],"names":["jwt","router","loginJWT","payload","commit","Promise","resolve","reject","login","userDetails","username","password","then","response","status","localStorage","setItem","data","root","push","message","catch","error","logout","removeItem","currentRoute","query","to"],"mappings":"AAAA;;;;;;;;AASA,OAAOA,GAAP;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe;AACXC,EAAAA,QADW,0BACUC,OADV,EACmB;AAAA,QAAnBC,MAAmB,QAAnBA,MAAmB;AAC5B,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAoB;AACrCH,MAAAA,MAAM,CAAC,cAAD,CAAN;AACAJ,MAAAA,GAAG,CAACQ,KAAJ,CAAUL,OAAO,CAACM,WAAR,CAAoBC,QAA9B,EAAwCP,OAAO,CAACM,WAAR,CAAoBE,QAA5D,EACGC,IADH,CACQ,UAAAC,QAAQ,EAAI;AAEhB;AACA,YAAGA,QAAQ,CAACC,MAAT,IAAmB,GAAtB,EAA2B;AACzB;AACA;AAEA;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCH,QAAQ,CAACI,IAAT,CAAc,OAAd,CAApC,EALyB,CAOzB;;AACAb,UAAAA,MAAM,CAAC,kBAAD,EAAqBS,QAAQ,CAACI,IAA9B,EAAoC;AAACC,YAAAA,IAAI,EAAE;AAAP,WAApC,CAAN,CARyB,CAUzB;AACA;;AACAd,UAAAA,MAAM,CAAC,cAAD,EAAiBS,QAAQ,CAACI,IAAT,CAAc,OAAd,CAAjB,CAAN,CAZyB,CAczB;;AACAhB,UAAAA,MAAM,CAACkB,IAAP,CAAY,GAAZ;AAEAb,UAAAA,OAAO,CAACO,QAAD,CAAP;AACD,SAlBD,MAkBM;AACJN,UAAAA,MAAM,CAAC;AAACa,YAAAA,OAAO,EAAE;AAAV,WAAD,CAAN;AACD;AAEF,OA1BH,EA2BGC,KA3BH,CA2BS,UAAAC,KAAK,EAAI;AACdlB,QAAAA,MAAM,CAAC,YAAD,CAAN;AACAG,QAAAA,MAAM,CAAC;AAACa,UAAAA,OAAO,EAAE;AAAV,SAAD,CAAN;AAAsE,OA7B1E;AA8BD,KAhCM,CAAP;AAiCD,GAnCU;AAoCXG,EAAAA,MApCW,yBAoCK;AAAA,QAARnB,MAAQ,SAARA,MAAQ;AACd,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCH,MAAAA,MAAM,CAAC,QAAD,CAAN;AACAW,MAAAA,YAAY,CAACS,UAAb,CAAwB,aAAxB;AACAT,MAAAA,YAAY,CAACS,UAAb,CAAwB,UAAxB,EAHsC,CAKtC;;AACAvB,MAAAA,MAAM,CAACkB,IAAP,CAAYlB,MAAM,CAACwB,YAAP,CAAoBC,KAApB,CAA0BC,EAA1B,IAAgC,cAA5C;AAEArB,MAAAA,OAAO;AACR,KATM,CAAP;AAUD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjDW,CAAf","sourcesContent":["/*=========================================================================================\n  File Name: moduleAuthActions.js\n  Description: Auth Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: abjcloudsolutions.com dashboard management portal\n    Author: Justed@Aidy\n  Staging URL: http://tripcarte.gispatial.tech/api\n==========================================================================================*/\n\nimport jwt from \"../../http/requests/auth/jwt/index.js\"\n\n\nimport router from '@/router'\n\nexport default {\n    loginJWT({ commit }, payload) {\n      return new Promise((resolve,reject) => {\n        commit('auth_request')\n        jwt.login(payload.userDetails.username, payload.userDetails.password)\n          .then(response => {\n\n            // If there's user data in response\n            if(response.status == 200) {\n              // Navigate User to homepage\n              //router.push(router.currentRoute.query.to || '/')\n\n              // Set accessToken\n              localStorage.setItem('accessToken', response.data['token'])\n\n              // Update user details\n              commit('UPDATE_USER_INFO', response.data, {root: true})\n\n              // Set bearer token in axios\n              //commit(\"SET_BEARER\", response.data.accessToken)\n              commit('auth_success', response.data['token'])\n\n              // Navigate User to homepage\n              router.push('/')\n\n              resolve(response)\n            }else {\n              reject({message: 'Please try again later.'})\n            }\n\n          })\n          .catch(error => {\n            commit('auth_error')\n            reject({message: 'Please double-check your username and password.'}) })\n      })\n    },\n    logout({commit}){\n      return new Promise((resolve, reject) => {\n        commit('logout')\n        localStorage.removeItem('accessToken')\n        localStorage.removeItem('userInfo')\n\n        // Navigate back to Login Page\n        router.push(router.currentRoute.query.to || '/pages/login')\n\n        resolve()\n      })\n    }\n\n    /*\n    registerUserJWT({ commit }, payload) {\n      const { displayName, email, password, confirmPassword } = payload.userDetails\n      return new Promise((resolve,reject) => {\n        // Check confirm password\n        if(password !== confirmPassword) {\n          reject({message: \"Password doesn't match. Please try again.\"})\n        }\n        jwt.registerUser(displayName, email, password)\n          .then(response => {\n            // Redirect User\n            router.push(router.currentRoute.query.to || '/')\n            // Update data in localStorage\n            localStorage.setItem(\"accessToken\", response.data.accessToken)\n            commit('UPDATE_USER_INFO', response.data.userData, {root: true})\n            resolve(response)\n          })\n          .catch(error => { reject(error) })\n      })\n    },\n    fetchAccessToken() {\n      return new Promise((resolve) => {\n        jwt.refreshToken().then(response => { resolve(response) })\n      })\n    }\n    */\n}\n"]}]}