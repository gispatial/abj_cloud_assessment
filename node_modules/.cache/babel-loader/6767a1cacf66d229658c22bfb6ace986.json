{"remainingRequest":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/abj_cloud_assessment/src/fake-db/data/apps/calendar/index.js","dependencies":[{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/src/fake-db/data/apps/calendar/index.js","mtime":1634372945925},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/cache-loader/dist/cjs.js","mtime":1634370900025},{"path":"/Users/crocslut/Desktop/abj_cloud_assessment/node_modules/babel-loader/lib/index.js","mtime":1634273594024}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mIjsKaW1wb3J0IG1vY2sgZnJvbSAnQC9mYWtlLWRiL21vY2suanMnOyAvLyBDb250YWN0Cgp2YXIgZGF0YSA9IHsKICBldmVudHM6IFt7CiAgICBpZDogMSwKICAgIHRpdGxlOiAnTXkgRXZlbnQnLAogICAgc3RhcnREYXRlOiBuZXcgRGF0ZShuZXcgRGF0ZSgpIC0gMTAwMCAqIDYwICogNjAgKiAyNCAqIDMpLAogICAgZW5kRGF0ZTogbmV3IERhdGUobmV3IERhdGUoKSAtIDEwMDAgKiA2MCAqIDYwICogMjQgKiAyKSwKICAgIHVybDogJycsCiAgICBjbGFzc2VzOiAnZXZlbnQtc3VjY2VzcycsCiAgICBsYWJlbDogJ2J1c2luZXNzJwogIH1dLAogIGxhYmVsczogW3sKICAgIHRleHQ6ICdCdXNpbmVzcycsCiAgICB2YWx1ZTogJ2J1c2luZXNzJywKICAgIGNvbG9yOiAnc3VjY2VzcycKICB9LCB7CiAgICB0ZXh0OiAnV29yaycsCiAgICB2YWx1ZTogJ3dvcmsnLAogICAgY29sb3I6ICd3YXJuaW5nJwogIH0sIHsKICAgIHRleHQ6ICdQZXJzb25hbCcsCiAgICB2YWx1ZTogJ3BlcnNvbmFsJywKICAgIGNvbG9yOiAnZGFuZ2VyJwogIH1dCn07IC8vIEdFVCA6IENhbGVuZGFyIEV2ZW50cwoKbW9jay5vbkdldCgnL2FwaS9hcHBzL2NhbGVuZGFyL2V2ZW50cycpLnJlcGx5KGZ1bmN0aW9uICgpIHsKICByZXR1cm4gWzIwMCwgZGF0YS5ldmVudHNdOwp9KTsgLy8gUE9TVCA6IEFkZCBuZXcgZXZlbnRzCgptb2NrLm9uUG9zdCgnL2FwaS9hcHBzL2NhbGVuZGFyL2V2ZW50cy8nKS5yZXBseShmdW5jdGlvbiAocmVxdWVzdCkgewogIC8vIEdldCBldmVudCBmcm9tIHBvc3QgZGF0YQogIHZhciBldmVudCA9IEpTT04ucGFyc2UocmVxdWVzdC5kYXRhKS5ldmVudDsKICB2YXIgbGVuZ3RoID0gZGF0YS5ldmVudHMubGVuZ3RoOwogIHZhciBsYXN0SW5kZXggPSAwOwoKICBpZiAobGVuZ3RoKSB7CiAgICBsYXN0SW5kZXggPSBkYXRhLmV2ZW50c1tsZW5ndGggLSAxXS5pZDsKICB9CgogIGV2ZW50LmlkID0gbGFzdEluZGV4ICsgMTsKICBkYXRhLmV2ZW50cy5wdXNoKGV2ZW50KTsKICByZXR1cm4gWzIwMSwgewogICAgaWQ6IGV2ZW50LmlkCiAgfV07Cn0pOyAvLyBHRVQ6IEZldGNoIENhbGVuZGFyIExhYmVscwoKbW9jay5vbkdldCgnYXBpL2FwcHMvY2FsZW5kYXIvbGFiZWxzJykucmVwbHkoZnVuY3Rpb24gKCkgewogIHJldHVybiBbMjAwLCBkYXRhLmxhYmVsc107Cn0pOyAvLyBQT1NUOiBVcGRhdGUgRXZlbnQKCm1vY2sub25Qb3N0KC9cL2FwaVwvYXBwc1wvY2FsZW5kYXJcL2V2ZW50XC9cZCsvKS5yZXBseShmdW5jdGlvbiAocmVxdWVzdCkgewogIHZhciBlID0gSlNPTi5wYXJzZShyZXF1ZXN0LmRhdGEpLmV2ZW50OwogIGUuc3RhcnREYXRlID0gbmV3IERhdGUoZS5zdGFydERhdGUpOwogIGUuZW5kRGF0ZSA9IG5ldyBEYXRlKGUuZW5kRGF0ZSk7CiAgdmFyIGV2ZW50SWQgPSByZXF1ZXN0LnVybC5zdWJzdHJpbmcocmVxdWVzdC51cmwubGFzdEluZGV4T2YoJy8nKSArIDEpOwogIHZhciBldmVudCA9IGRhdGEuZXZlbnRzLmZpbmQoZnVuY3Rpb24gKGV2ZW50KSB7CiAgICByZXR1cm4gZXZlbnQuaWQgPT0gZXZlbnRJZDsKICB9KTsKICBPYmplY3QuYXNzaWduKGV2ZW50LCBlKTsKICByZXR1cm4gWzIwMCwgZXZlbnRdOwp9KTsgLy8gREVMRVRFOiBSZW1vdmUgRXZlbnQKCm1vY2sub25EZWxldGUoL1wvYXBpXC9hcHBzXC9jYWxlbmRhclwvZXZlbnRcL1xkKy8pLnJlcGx5KGZ1bmN0aW9uIChyZXF1ZXN0KSB7CiAgdmFyIGV2ZW50SWQgPSByZXF1ZXN0LnVybC5zdWJzdHJpbmcocmVxdWVzdC51cmwubGFzdEluZGV4T2YoJy8nKSArIDEpOwogIHZhciBldmVudEluZGV4ID0gZGF0YS5ldmVudHMuZmluZEluZGV4KGZ1bmN0aW9uIChldmVudCkgewogICAgcmV0dXJuIGV2ZW50LmlkID09IGV2ZW50SWQ7CiAgfSk7CiAgZGF0YS5ldmVudHMuc3BsaWNlKGV2ZW50SW5kZXgsIDEpOwogIHJldHVybiBbMjAwXTsKfSk7IC8vIFBPU1Q6IFVwZGF0ZSBEcmFnZ2VkIEV2ZW50Cgptb2NrLm9uUG9zdCgvXC9hcGlcL2FwcHNcL2NhbGVuZGFyXC9ldmVudFwvZHJhZ2dlZFwvXGQrLykucmVwbHkoZnVuY3Rpb24gKHJlcXVlc3QpIHsKICB2YXIgZXZlbnRJZCA9IHJlcXVlc3QudXJsLnN1YnN0cmluZyhyZXF1ZXN0LnVybC5sYXN0SW5kZXhPZignLycpICsgMSk7CiAgdmFyIGV2ZW50ID0gZGF0YS5ldmVudHMuZmluZChmdW5jdGlvbiAoZXZlbnQpIHsKICAgIHJldHVybiBldmVudC5pZCA9PSBldmVudElkOwogIH0pOwogIHZhciBwYXlsb2FkID0gSlNPTi5wYXJzZShyZXF1ZXN0LmRhdGEpLnBheWxvYWQ7CiAgdmFyIGRyYWdnZWREYXRlU3RhcnQgPSBuZXcgRGF0ZShwYXlsb2FkLmRhdGUpOwogIHZhciBldmVudFN0YXJ0RGF0ZSA9IG5ldyBEYXRlKGV2ZW50LnN0YXJ0RGF0ZSkuZ2V0VGltZSgpOwogIHZhciBldmVudEVuZERhdGUgPSBuZXcgRGF0ZShldmVudC5lbmREYXRlKS5nZXRUaW1lKCk7CiAgdmFyIGRpZmYgPSBkcmFnZ2VkRGF0ZVN0YXJ0IC0gZXZlbnRTdGFydERhdGU7CiAgdmFyIG5ld0VuZERhdGUgPSBuZXcgRGF0ZShldmVudEVuZERhdGUgKyBkaWZmKTsKICBldmVudC5zdGFydERhdGUgPSBkcmFnZ2VkRGF0ZVN0YXJ0OwogIGV2ZW50LmVuZERhdGUgPSBuZXdFbmREYXRlOwogIHJldHVybiBbMjAwLCBldmVudF07Cn0pOw=="},{"version":3,"sources":["/Users/crocslut/Desktop/abj_cloud_assessment/src/fake-db/data/apps/calendar/index.js"],"names":["mock","data","events","id","title","startDate","Date","endDate","url","classes","label","labels","text","value","color","onGet","reply","onPost","request","event","JSON","parse","length","lastIndex","push","e","eventId","substring","lastIndexOf","find","Object","assign","onDelete","eventIndex","findIndex","splice","payload","draggedDateStart","date","eventStartDate","getTime","eventEndDate","diff","newEndDate"],"mappings":"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","sourcesContent":["import mock from '@/fake-db/mock.js'\n\n// Contact\nconst data = {\n  events: [\n    {\n      id: 1,\n      title: 'My Event',\n      startDate: new Date(new Date() - 1000 * 60 * 60 * 24 * 3),\n      endDate: new Date(new Date() - 1000 * 60 * 60 * 24 * 2),\n      url: '',\n      classes: 'event-success',\n      label: 'business'\n    }\n  ],\n  labels: [\n    {\n      text: 'Business',\n      value : 'business',\n      color: 'success'\n    },\n    {\n      text: 'Work',\n      value: 'work',\n      color: 'warning'\n    },\n    {\n      text: 'Personal',\n      value: 'personal',\n      color: 'danger'\n    }\n  ]\n}\n\n// GET : Calendar Events\nmock.onGet('/api/apps/calendar/events').reply(() => {\n  return [200, data.events]\n})\n\n// POST : Add new events\nmock.onPost('/api/apps/calendar/events/').reply((request) => {\n\n  // Get event from post data\n  const event = JSON.parse(request.data).event\n\n  const length = data.events.length\n  let lastIndex = 0\n  if (length) {\n    lastIndex = data.events[length - 1].id\n  }\n  event.id = lastIndex + 1\n\n  data.events.push(event)\n\n  return [201, {id: event.id}]\n})\n\n// GET: Fetch Calendar Labels\nmock.onGet('api/apps/calendar/labels').reply(() => {\n  return [200, data.labels]\n})\n\n// POST: Update Event\nmock.onPost(/\\/api\\/apps\\/calendar\\/event\\/\\d+/).reply((request) => {\n\n  const e = JSON.parse(request.data).event\n  e.startDate = new Date(e.startDate)\n  e.endDate = new Date(e.endDate)\n\n  const eventId = request.url.substring(request.url.lastIndexOf('/') + 1)\n\n\n  const event = data.events.find((event) => event.id == eventId)\n  Object.assign(event, e)\n\n  return [200, event]\n})\n\n// DELETE: Remove Event\nmock.onDelete(/\\/api\\/apps\\/calendar\\/event\\/\\d+/).reply((request) => {\n\n  const eventId = request.url.substring(request.url.lastIndexOf('/') + 1)\n\n  const eventIndex = data.events.findIndex((event) => event.id == eventId)\n  data.events.splice(eventIndex, 1)\n  return [200]\n})\n\n// POST: Update Dragged Event\nmock.onPost(/\\/api\\/apps\\/calendar\\/event\\/dragged\\/\\d+/).reply((request) => {\n\n  const eventId = request.url.substring(request.url.lastIndexOf('/') + 1)\n  const event = data.events.find((event) => event.id == eventId)\n  const payload = JSON.parse(request.data).payload\n\n  const draggedDateStart = new Date(payload.date)\n\n  const eventStartDate = new Date(event.startDate).getTime()\n  const eventEndDate = new Date(event.endDate).getTime()\n\n  const diff = draggedDateStart - eventStartDate\n  const newEndDate = new Date(eventEndDate + diff)\n  event.startDate = draggedDateStart\n  event.endDate = newEndDate\n\n  return [200, event]\n})\n"]}]}